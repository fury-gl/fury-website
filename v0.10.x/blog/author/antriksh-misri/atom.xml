<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts by Antriksh Misri</title>
  <updated>2024-07-30T13:37:49.935239+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/author/antriksh-misri/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.10">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-23-final-work-antriksh.html</id>
    <title>Google Summer of Code Final Work Product</title>
    <updated>2021-08-23T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;a class="reference external image-reference" href="https://summerofcode.withgoogle.com/projects/#6653942668197888"&gt;&lt;img alt="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" class="align-center" src="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" style="height: 50px;" /&gt;
&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/"&gt;&lt;img alt="https://www.python.org/static/community_logos/python-logo.png" src="https://www.python.org/static/community_logos/python-logo.png" style="width: 40%;" /&gt;
&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://fury.gl/latest/community.html"&gt;&lt;img alt="https://python-gsoc.org/logos/FURY.png" src="https://python-gsoc.org/logos/FURY.png" style="width: 25%;" /&gt;
&lt;/a&gt;
&lt;section id="google-summer-of-code-final-work-product"&gt;

&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Antriksh Misri&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; Python Software Foundation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; FURY&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2021#project-3-create-new-user-interface-widget"&gt;FURY: Create new user interface widget&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="proposed-objectives"&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Add support for Layouts in UI elements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add support for Horizontal Layout&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add support for Vertical Layout&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add support for Layout along X, Y, Z axes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stretch Goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add Tree2D UI element to the UI sub-module&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add Accordion2D UI element to the UI sub-module&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add SpinBox2D UI element to the UI sub-module&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-completed"&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add support for Horizontal Layout&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Added support for Horizontal Layout in the layout module. This layout allows the user to stack actors in a horizontal fashion. Primarily, should be used for laying out UI elements as there is no meaning of horizontal/vertical in 3D space.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Horizontal Layout:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/480"&gt;fury-gl/fury#480&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ribbon Representation demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/480"&gt;fury-gl/fury#480&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add support for Vertical Layout&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Added support for Vertical Layout in the layout module. This layout allows the user to stack actors in a vertical fashion. Primarily, should be used for laying out UI elements as there is no meaning of horizontal/vertical in 3D space.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Vertical Layout:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/479"&gt;fury-gl/fury#479&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Vertical Layout demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/479"&gt;fury-gl/fury#479&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add support for Layout along X, Y, Z axes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Added support for Layout along x, y, z axes. Allows user to layout different actors along any given axes. Also it allows users to switch the stacking order by passing a axis+ or axis- to the constructor.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;X, Y, Z axes Layout:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/486"&gt;fury-gl/fury#486&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;X, Y, Z axes Layout demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/486"&gt;fury-gl/fury#486&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add Tree2D UI element to the UI sub-module&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Added Tree2D UI element to the UI sub-module. This allows user to visualize some data in a hierarchical fashion. Each node inside the tree can have N child nodes and the depth can be infinite. Each node can be clicked to trigger a user defined callback to perform some action. Tests and two demos were added for this UI element. Below is a screenshot for reference:&lt;/p&gt;
&lt;img alt="https://camo.githubusercontent.com/dd23b7c8503e4d01c80f2d9e84ee173e06c61eeb7c348c35aeadc75f722647ca/68747470733a2f2f692e696d6775722e636f6d2f4e49334873746c2e706e67" src="https://camo.githubusercontent.com/dd23b7c8503e4d01c80f2d9e84ee173e06c61eeb7c348c35aeadc75f722647ca/68747470733a2f2f692e696d6775722e636f6d2f4e49334873746c2e706e67" style="width: 200px; height: 200px;" /&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tree2D UI element:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/460"&gt;fury-gl/fury#460&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tree2D UI element demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/460"&gt;fury-gl/fury#460&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add Accordion2D UI element to the UI sub-module&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Added Accordion2D to the UI sub-module. This Ui element allows users to visualize data in a tree with depth of one. Each node has a title and a content panel. The children for each node can be N if and only if the children are not nodes themselves. The child UIs can be placed inside the content panel by passing some coordinates, which can be absolute or normalized w.r.t the node content panel size. Tests and two demos were added for this UI element. Below is a screenshot for reference&lt;/p&gt;
&lt;img alt="https://camo.githubusercontent.com/9395d0ea572d7f253a051823f02496450c9f79d19ff0baf32841ec648b6f2860/68747470733a2f2f692e696d6775722e636f6d2f7854754f645a742e706e67" src="https://camo.githubusercontent.com/9395d0ea572d7f253a051823f02496450c9f79d19ff0baf32841ec648b6f2860/68747470733a2f2f692e696d6775722e636f6d2f7854754f645a742e706e67" style="width: 200px; height: 200px;" /&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Accordion2D UI element:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/487"&gt;fury-gl/fury#487&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Accordion2D UI element demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/487"&gt;fury-gl/fury#487&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-in-progress"&gt;
&lt;h2&gt;Objectives in Progress&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add support for Layout in UI elements&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Currently all the available layouts are only available for actors i.e. of type vtkActor2D. In order to add support for the layouts in UI elements there needs to be some tweaking in the base Layout class. Currently, the PR that adds these functionalities in stalling because of some circular imports. These will hopefully be fixed soon and as soon as the circular imports are fixed, the PR will be merged.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add support for Layout in UI elements:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/443"&gt;fury-gl/fury#443&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Method to process and load sprite sheets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This method adds support for loading and processing a sprite sheet. This will be very useful in playing animations from a n*m sprite sheet. This also has a flag to convert the processed chunks into vtkimageData which can be directly used to update the texture in some UI elements. The primary use of this method will in a tutorial for Card2D, wherein, the image panel of the card will play the animation directly from the sprite sheet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Method to process and load sprite sheets:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/491"&gt;fury-gl/fury#491&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="other-objectives"&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add Card2D UI element to UI sub-module&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Added Card2D UI element to the UI sub-module. A Card2D is generally divided into two parts i.e. the image content and the text content. This version of card has an image which can be fetched from a URL and the text content which is yet again divided into two parts i.e. the title and the body. The space distribution between the image and the text content is decided by a float between 0 and 1. A value of 0 means the image takes up no space and a value of 1 means the image consumes the whole space. Below is a demonstration:&lt;/p&gt;
&lt;img alt="https://camo.githubusercontent.com/a2e461352799b6490088de15ac041162d7bf8adf9c07485ea921b525fecd0a8e/68747470733a2f2f692e696d6775722e636f6d2f446c69537066302e676966" src="https://camo.githubusercontent.com/a2e461352799b6490088de15ac041162d7bf8adf9c07485ea921b525fecd0a8e/68747470733a2f2f692e696d6775722e636f6d2f446c69537066302e676966" style="width: 200px; height: 200px;" /&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add Card2D UI element to UI sub-module:&lt;/strong&gt;  &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/398"&gt;fury-gl/fury#398&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Resize Panel2D with WindowResizeEvent or from corner placeholder&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Currently, the size of the Panel2D is static and cannot be changed dynamically. The size is passed in during the initialization and cannot be changed easily at runtime. This PR adds support for resizing the Panel2D dynamically by adding a placeholder icon at the bottom right corner of the panel. This icon can be click and dragged on to change the size accordingly. Other than this, the panel also retains a specific size ratio when the window is resized. This means if the window is resized in any direction the panel adapts itself w.r.t the updated size. This is done by adding relevant observers for the WindowResizeEvent and binding the relevant callback to it. Below is a quick demonstration:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://camo.githubusercontent.com/3b1bf6a1b6522a6079055ff196551362fcf89a41b35ac4b32315ce02333e496d/68747470733a2f2f692e696d6775722e636f6d2f3837504e3754512e676966" src="https://camo.githubusercontent.com/3b1bf6a1b6522a6079055ff196551362fcf89a41b35ac4b32315ce02333e496d/68747470733a2f2f692e696d6775722e636f6d2f3837504e3754512e676966" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Resize Panel2D with WindowResizeEvent or from corner placeholder:&lt;/strong&gt;  &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/446"&gt;fury-gl/fury#446&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Added the watcher class to UI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This PR adds support for a watcher class in the UI elements. The purpose of this class is to monitor a particular attribute from the UI element after it has been added to the scene. If the attribute changes in the real time, a user defined callback is triggered and the scene is force rendered.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Added wathcer class to the UI sub-module:&lt;/strong&gt;  &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/448"&gt;fury-gl/fury#448&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Added support for borders in Panel2D&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Panel2D previously, didn’t support any sort of effect, the main reason behind this is that, all UI elements are individual entities that are comprised of different actors. These are not the widgets provided by vtk and in order to have some effects provided by vtk shaders must be involved. This obviously makes the whole system very complicated. The border on the other hand uses 4 Rectangle2Ds to draw the 4 borders. This makes the whole process easier but makes the Panel2D very performance heavy as we are adding 5 actors to the scene. Future iterations will replace these rectangles by textures, that way we don’t compromise performance and we can have different patterns in the border. Below is a demonstration:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/54466356/121709989-bd340280-caf6-11eb-9b8a-81c65260d277.png" src="https://user-images.githubusercontent.com/54466356/121709989-bd340280-caf6-11eb-9b8a-81c65260d277.png" style="width: 200px; height: 200px;" /&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Added support for borders in Panel2D:&lt;/strong&gt;  &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/441"&gt;fury-gl/fury#441&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GSoC weekly Blogs&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Weekly blogs were added for FURY’s Website.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;First Evaluation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/477"&gt;fury-gl/fury#477&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Second Evaluation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/494"&gt;fury-gl/fury#494&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="timeline"&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr class="row-odd"&gt;&lt;th class="head"&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Blog Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 1(08-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Welcome to my weekly Blogs!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-1-welcome-to-my-weekly-blogs/"&gt;Weekly Check-in #1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 2(14-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Feature additions in UI and IO modules&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-2-feature-additions-in-ui-and-io-modules/"&gt;Weekly Check-in #2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 3(21-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Adapting GridLayout to work with UI&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-3-adapting-gridlayout-to-work-with-ui/"&gt;Weekly Check-in #3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 4(28-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Adding Tree UI to the UI module&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-4-adding-tree-ui-to-the-ui-module/"&gt;Weekly Check-in #4&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 5(05-07-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Rebasing all PR’s w.r.t the UI restructuring, Tree2D, Bug Fixes&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-5-rebasing-all-pr-s-w-r-t-the-ui-restructuring-tree2d-bug-fixes/"&gt;Weekly Check-in #5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 6(12-07-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Bug fixes, Working on Tree2D UI&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-6-bug-fixes-working-on-tree2d-ui/"&gt;Weekly Check-in #6&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 7(19-07-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Finalizing the stalling PR’s, finishing up Tree2D UI.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-7-finalizing-the-stalling-pr-s-finishing-up-tree2d-ui/"&gt;Weekly Check-in #7&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 8(26-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Code Cleanup, Finishing up open PR’s, Continuing work on Tree2D.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-8-code-cleanup-finishing-up-open-pr-s-continuing-work-on-tree2d/"&gt;Weekly Check-in #8&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 9(02-08-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;More Layouts!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-9-more-layouts/"&gt;Weekly Check-in #9&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 10(09-08-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Accordion UI, Support for sprite sheet animations.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-10-accordion-ui-support-for-sprite-sheet-animations/"&gt;Weekly Check-in #10&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 11(16-08-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;More tutorials for Accordion2D, Finalizing remaining PRs.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/week-11-2/"&gt;Weekly Check-in #11&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Detailed weekly tasks and work done can be found
&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/antrikshmisris-blog/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-23-final-work-antriksh.html"/>
    <summary>Name: Antriksh Misri</summary>
    <category term="google" label="google"/>
    <published>2021-08-23T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-16-week-11-antriksh.html</id>
    <title>Week #11: Finalizing open Pull Requests</title>
    <updated>2021-08-16T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-11-finalizing-open-pull-requests"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;Below are the tasks that I worked on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/491"&gt;Created PR for sprite sheet animation&lt;/a&gt; : This PR adds support for playing animations from a sprite sheet. This feature will be used in Card2D to create a tutorial in which the card will show the animation in the image box. Previously, the utility functions for this were added directly inside the tutorial but now they are refactored to go in their respective modules.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/486"&gt;Finalized the x, y, z layouts&lt;/a&gt; : The PR that adds these layouts needed some updates for it to work as intended. These changes were added and this PR is ready to go.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/443"&gt;Resolved all conflicts in the GridLayout PR&lt;/a&gt; : As the Horizontal and Vertical layouts were merged this week the GridLayout PR had got some conflicts. These conflicts were resolved and the PR is almost ready.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Continuing the work on custom font rendering&lt;/strong&gt; : In the last meeting, a few points were brought up. Firstly, to position each glyph to their respective location in the atlas a separate module is used which is freetype-gl. The python bindings for this module are not available which means either we have to write the bindings ourselves or the freetype team will be emailed about this and they will add bindings for that. On the other hand, I looked how latex is rendered in matplotlib. &lt;a class="reference external" href="https://github.com/matplotlib/matplotlib/blob/3a4fdea8d23207d67431973fe5df1811605c4132/lib/matplotlib/text.py#L106"&gt;This&lt;/a&gt; is the Text class that is used to represent the string that is to be drawn and &lt;a class="reference external" href="https://github.com/matplotlib/matplotlib/blob/3a4fdea8d23207d67431973fe5df1811605c4132/lib/matplotlib/artist.py#L94"&gt;This is the class that it inherits from&lt;/a&gt;.  Everything is handled internally in matplotlib, to draw the rasterized text &lt;a class="reference external" href="https://github.com/matplotlib/matplotlib/blob/3a4fdea8d23207d67431973fe5df1811605c4132/lib/matplotlib/text.py#L672"&gt;this function is used.&lt;/a&gt;  The text can be rendered in two ways, the first one is by using the default renderer and the second way is by using PathEffectRenderer that is used to add effects like outlines, anti-aliasing etc. It is a very rigid way of rendering text and is designed to be used internally.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I did not get stuck anywhere.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Hopefully everything is resolved by the end of this week and next week I will hopefully submit my final code in a gist format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-16-week-11-antriksh.html"/>
    <summary>Below are the tasks that I worked on:</summary>
    <category term="google" label="google"/>
    <published>2021-08-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-09-week-10-antriksh.html</id>
    <title>Week#10: Accordion UI, Support for sprite sheet animations</title>
    <updated>2021-08-09T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-10-accordion-ui-support-for-sprite-sheet-animations"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;Below are the tasks that I worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/487"&gt;Added Accordion2D to UI sub-module&lt;/a&gt; : This PR adds the Accordion UI to the UI sub-module. This UI inherits from the Tree2D UI and can only be merged once the Tree2D UI is in. Here’s a screenshot for reference:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://i.imgur.com/klI4Tb5.png" src="https://i.imgur.com/klI4Tb5.png" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/486"&gt;Adding X, Y, Z Layouts&lt;/a&gt; :  It was pointed out in last week’s meeting that in 3D space horizontal/vertical means nothing. Instead X, Y, Z are used, so, these three layouts were added on top of horizontal/vertical layouts. They also have functionality of changing the direction i.e. reverse the stacking order.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/398"&gt;Added support of sprite sheet animation in Card2D&lt;/a&gt; : The image in Card2D was static in nature and wasn’t very interesting. So, to make things a bit interesting support for animated images were added. These animations are played from a sprite sheet or a texture atlas. A buffer of processed sprite chunks is maintained and with the help of a timer callback the image in the card is updated after a certain delay which is dependent of the frame rate. Below is the demonstration:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://i.imgur.com/DliSpf0.gif" src="https://i.imgur.com/DliSpf0.gif" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Researching more about Freetype/Freetype-GL&lt;/strong&gt;: Apart from coding stuff, i did some more research on custom font using freetype and freetype-gl. I found some examples that used the python bindings of the c++ library and displayed custom fonts that were transformable i.e. can be rotated by some angle. Hopefully I can create a working example by this weeks meeting.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I did not get stuck anywhere.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will finish up my remaining work. Which includes addressing all PR reviews and adding some more features.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-09-week-10-antriksh.html"/>
    <summary>Below are the tasks that I worked on:</summary>
    <category term="google" label="google"/>
    <published>2021-08-09T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-02-week-9-antriksh.html</id>
    <title>Week #9: More Layouts!</title>
    <updated>2021-08-02T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-9-more-layouts"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;Below are the tasks that I worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/480"&gt;Added Horizontal/Vertical Layout to the layout module&lt;/a&gt; : These PRs add support for Horizontal/Vertical layouts. These layouts allow the actors to be placed in a horizontal/vertical stack.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://user-images.githubusercontent.com/54466356/127688192-8412b604-d6c7-4da9-87c4-dfae044a136e.png" src="https://user-images.githubusercontent.com/54466356/127688192-8412b604-d6c7-4da9-87c4-dfae044a136e.png" style="width: 200px; height: 200px;" /&gt;
&lt;img alt="https://user-images.githubusercontent.com/54466356/127620054-7e14f86e-1579-46ac-b4a6-ac98c109094a.png" src="https://user-images.githubusercontent.com/54466356/127620054-7e14f86e-1579-46ac-b4a6-ac98c109094a.png" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/398"&gt;Finalizing Card2D UI element&lt;/a&gt; : As panel border, wrap overflow PRs were merged this week I updated the Card2D UI to take advantage of these features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/477"&gt;Added GSoC blog posts&lt;/a&gt; : Added GSoC blog posts in .rst format for the FURY’s blog website. Also reviewed the blog posts of other members.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/460"&gt;Added support for dragging by label text/icon in Tree2D UI&lt;/a&gt; : Added support for dragging TreeNode2D by the label text/icon. This will help making the Tree2D as well as TreeNode2D UIs more mobile.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;For now I am not stuck anywhere but I have yet to start my work on freetype this could pose some trouble.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will finish the remaining UI elements which includes Accordion2D, SpinBox2D.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-02-week-9-antriksh.html"/>
    <summary>Below are the tasks that I worked on:</summary>
    <category term="google" label="google"/>
    <published>2021-08-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-26-week-8-antriksh.html</id>
    <title>Week #8: Code Cleanup, Finishing up open PRs, Continuing work on Tree2D</title>
    <updated>2021-07-26T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-8-code-cleanup-finishing-up-open-prs-continuing-work-on-tree2d"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had to work on the open PRs specifically work on the bugs that were pointed out in last week’s meeting. Along side the bugs I had to continue the work on Tree2D UI element. Below is the detailed description of what I worked on this week:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/460"&gt;Added new tutorial, code clean-up, bug fixes&lt;/a&gt; : The Tree2D had some issues with its resizing of child nodes. The size for the nodes was calculated automatically based on the vertical size occupied by its children but this could be problematic when working with sliders or UI elements that take up a lot of vertical size. To avoid this the children sizes are calculated relative to each other and the vertical size is calculated such that all children fit in perfectly. Besides this, a multiselection flag has been added that decides whether multiple child nodes can be selected or not.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/446"&gt;Adding tests for corner resize callback&lt;/a&gt; : This PR is almost done as it was decided that WindowsResizeEvent will be ignored for now. Which leaves us with corner resizing, the callback for corner resizing didn’t have any tests so the recording was redone and tests for the corner resize callback was added.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/443"&gt;Fixing the failing CI’s for #443&lt;/a&gt; : The solution that ended up working was creating custom objects for testing of is_ui method. With this update there will be no circular dependencies and no failing CI’s.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/442"&gt;Addressing all comments regarding #442&lt;/a&gt; : In the last meeting, a bug was pointed out wherein the text wouldn’t wrap as expected. The reason for this was some minor calculation mistakes. The whole wrap_overflow method was redone and now everything works as expected. Hopefully, no bugs pop up during this week’s meeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/441"&gt;Addressing some minor comments&lt;/a&gt; : This PR is almost done too, there were some minor changes that were required to be addressed before this could be merged. So, these comments were fixed and hopefully this will be merged soon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using different fonts using FreeType python API: A major thing that FURY needs right now is using different fonts on the fly. This is more complicated than it seems, in case of browser environment this is not a problem as browsers can support and render all fonts using various techniques. In case of a desktop environment, we need to generate the bitmap for the fonts and then use them in form of textures. For now I have created a small example that generates these bitmaps from a python API called freetype-py, the fonts are fetched from google fonts and then they are displayed as textures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Starting working on Vertical Layout&lt;/strong&gt;: As majority of PRs are almost done, I started working on Vertical Layout. This will be hihgly inspired from the Grid Layout with obvious differences. The same techniques are being used in the Tree2D so this shouldn’t be difficult to implement.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;The failing CI’s for Grid Layout Pr needed some custom objects to remove circular dependencies. I couldn’t figure out where should these custom objects go but fortunaltely the mentors showed me a quick example of where it should go.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will continue my work on some other UI’s and the remaining Layouts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-26-week-8-antriksh.html"/>
    <summary>This week I had to work on the open PRs specifically work on the bugs that were pointed out in last week’s meeting. Along side the bugs I had to continue the work on Tree2D UI element. Below is the detailed description of what I worked on this week:</summary>
    <category term="google" label="google"/>
    <published>2021-07-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-19-week-7-antriksh.html</id>
    <title>Week #7: Finalizing the stalling PRs, finishing up Tree2D UI.</title>
    <updated>2021-07-19T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-7-finalizing-the-stalling-prs-finishing-up-tree2d-ui"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had limited tasks to do, mostly tasks related to existing PRs. Other than some minor fixes I had to implement some more things in Tree2D which included some minor UI fixes, some changes in tutorial, adding tests. Below is the detailed description of what I worked on this week:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/460"&gt;Tests, tutorial changes, UI fixes for Tree2D&lt;/a&gt; : The Tree2D lacked some things like proper UI resizing, relative indentation, tests for the UI class. These were added with this PR. Currently, the indentation, resizing needs some improvement, which will be fixed after feedback from this week’s meeting. Also, tests for Tree2D, TreeNode2D were added as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/446"&gt;Updating Panel2D tests, re-recording the events&lt;/a&gt; : This PR is almost done with just some tests blocking the PR. The tests were added this week, but tests for some callbacks that are associated with window event are still not added. This is because there is no way to count the WindowResizeEvent without actually using the API of the window provided by the OS. This can become very complicated very soon so, these tests may be added in the future.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/443"&gt;Fixing the failing CI’s for #443&lt;/a&gt; : The CI was failing on this PR and needed some fixing which was done this week. This PR still needs some refactoring before the all CI’s pass. This will hopefully be fixed before this week’s meeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/442"&gt;Addressing all comments regarding #442&lt;/a&gt; : Previously, it was pointed out that the some code can be extracted into a function and can be reused in other methods. So, this week the extracted method was updated to reuse even more code and now almost no code is repeated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/441"&gt;Adding has_border flag in Panel2D&lt;/a&gt; : Adding a has_border flag in Panel2D: Previously, to create the borders 4 Rectangle2D’s were used and they were created every time even when border_width was set to 0. This would take a lot of wasted system resources. To fix this, a flag is added in the the constructor which is by default set to False. If false, the borders are not initialized and the resources are saved.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, this week I didn’t get stuck anywhere.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-19-week-7-antriksh.html"/>
    <summary>This week I had limited tasks to do, mostly tasks related to existing PRs. Other than some minor fixes I had to implement some more things in Tree2D which included some minor UI fixes, some changes in tutorial, adding tests. Below is the detailed description of what I worked on this week:</summary>
    <category term="google" label="google"/>
    <published>2021-07-19T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-12-week-6-antriksh.html</id>
    <title>Week #6: Bug fixes, Working on Tree2D UI</title>
    <updated>2021-07-12T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-6-bug-fixes-working-on-tree2d-ui"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had relatively few tasks and most of them were to fix some bugs/design flaws that were discussed in last week’s meeting. Other than that, I had to implement a few things in the Tree2D UI element that will be discussed in detail below. I also had to update some existing PRs in order to make things work well. Below are the list of things I worked on this week:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/459"&gt;Extracted Button2D class from elements to core&lt;/a&gt; : Button2D was placed in elements during the UI restructuring. The problem with that was that Button2D was needed in other UI elements outside UI elements present in elements in Panel2D. So, it was decided to create a rule that only the UI elements that do not depend on any other UI element are allowed to be placed in core UI elements. Button2D does not depend on any other UI element so it was extracted from elements to core.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/443"&gt;Adapting GridLayout to work with UI elements&lt;/a&gt; : This was a PR that aimed to add support for UI elements to be placed in a grid fashion. the problem was that there still some circular imports even after UI restructuring, primarily because UI was being imported in the layout module that in turn indirectly imported some UI elements making them circularly dependent. To remove the circular imports, it was decided to determine the UI element by checking for a add_to_scene method attribute in the instance. I updated the existing PR to implement the same.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/460"&gt;Continuing my work on Tree2D&lt;/a&gt;: The Tree2D lacked some important things related to design and visual aspect of it. Before, if the children of any node exceeded its height they would just overflow. To prevent this I came up with a few solutions two of which were to either add a scrollbar on the overflowing node or to simply auto resize the parent node. Currently, there is no global API for the scrollbar and it has to be manually setup in a UI element, this will be hopefully implemented in the near future probably using layout management. Till then the auto resizing has been implemented for the nodes. In future, an option for scrollbar will be added.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I am still stuck with adding tests for panel resizing PR. As it needs windows events to be recorded as well. I tried to propagate the event to the interactor first but that just lead to that particular event being registered multiple times. I will try to find a workaround for it.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;If the Tree2D gets merged by this week then I’ll probably work on other UI elements. Other tasks will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-12-week-6-antriksh.html"/>
    <summary>This week I had relatively few tasks and most of them were to fix some bugs/design flaws that were discussed in last week’s meeting. Other than that, I had to implement a few things in the Tree2D UI element that will be discussed in detail below. I also had to update some existing PRs in order to make things work well. Below are the list of things I worked on this week:</summary>
    <category term="google" label="google"/>
    <published>2021-07-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-05-week-5-antriksh.html</id>
    <title>Week #5: Rebasing all PRs w.r.t the UI restructuring, Tree2D, Bug Fixes</title>
    <updated>2021-07-05T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-5-rebasing-all-prs-w-r-t-the-ui-restructuring-tree2d-bug-fixes"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;The UI restructuring was finally merged this week. This means UI is now a submodule in itself and provides different UI elements based on their types which are, core, elements, containers and some helper methods/classes. So, this week my main tasks were to rebase and fix merge conflicts of my open PR’s. Other than that, I had to continue my work on Tree2D UI element and finish the remaining aspects of it. Also, I had to create an example demonstrating how to use the newly added UI element. Many use cases were discussed in the open meeting like, an image gallery which displays preview image on the title and when expanded reveals the full scale image. I am thinking of adding multiple examples for the Tree2D to brainstorm on its certain features. Also, I had this annoying bug in Panel2D which didn’t allow it to be resized from the bottom right corner. It was resizing from the top right corner. I had to address this bug as well. Below are the tasks in detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pulls/antrikshmisri"&gt;Rebasing all PRs w.r.t the UI restructuring&lt;/a&gt;: As discussed in the earlier blogs, due to circular imports and large size of the UI module, a bit of restructuring was required. This week the PR that converts the UI into a sub module was finally merged. This meant I had to fix all the merge conflicts and rebase all UI related PR’s. So, I rebased all the UI related PR’s and fixed the merge conflicts. Currently, there are still some PR’s that need some attention as still some of the imports are circular in nature. This means if the issue is correct then some more restructuring is required, which will be hopefully done in the near future.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/antrikshmisri/fury/blob/86b16ba3f74c3bdcf9aab58f546b37b919254cd1/fury/ui/elements.py#L3278"&gt;Continuing the work on Tree2D&lt;/a&gt; : This week I continued my work on Tree2D, TreeNode2D. I had to fix/add multiple features on both the classes but my priority was to fix the looks of the UI element as well as make it easier for the user to manipulate the UI element. The first thing that I fixed was node offsetting, when a node is collapsed and expanded the nodes below the current node should also offset. Previously, only the child nodes within the same parents were offset and not the nodes/parent beyond that. With some minor adjusting, now the nodes are offset recursively and all child/parent nodes below the current nodes are offset. Secondly, before only a node could be added to a node which meant it wasn’t any easy way to add any other UI element to a node but with some updates/fixes any UI element can be added to a node. Also, the Tree2D lacked some properties/methods to easily manipulate it. So, i added some properties/methods that allow to easily/efficiently manipulate individual node inside the Tree2D. Below is the current state of the Tree2D. In the below tree, two panels are added to a child node after the tree has been initialized. Also, the coordinated of the child elements are totally fluid i.e they can be placed anywhere inside the content panel by passing normalized or absolute coordinates.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://i.imgur.com/rQQvLqs.png" src="https://i.imgur.com/rQQvLqs.png" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fixed Panel2D bottom corner resizing: Previously, the panel would not resize from the bottom left corner but it would resize from top right corner. I didn’t understand what was going wrong and was stuck on this for a long time. But I finally figured out the problem, I was calculating the Y-offset wrong as well as the panel resized from the top side instead of bottom. With some minor tweaking the bug was gone and the panel resizes correctly from the bottom right corner.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I got stuck on recording events for the updated panel UI element. The panel updates w.r.t the window size but I couldn’t figure out how to record the events invoked by the window. Unfortunately, I still haven’t figured out how this will be done. My guess is that I have to propagate the event first to the interactor and then to the UI element.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will probably finish up the GridLayout, Tree2D UI along side some other UI’s. This will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-05-week-5-antriksh.html"/>
    <summary>The UI restructuring was finally merged this week. This means UI is now a submodule in itself and provides different UI elements based on their types which are, core, elements, containers and some helper methods/classes. So, this week my main tasks were to rebase and fix merge conflicts of my open PR’s. Other than that, I had to continue my work on Tree2D UI element and finish the remaining aspects of it. Also, I had to create an example demonstrating how to use the newly added UI element. Many use cases were discussed in the open meeting like, an image gallery which displays preview image on the title and when expanded reveals the full scale image. I am thinking of adding multiple examples for the Tree2D to brainstorm on its certain features. Also, I had this annoying bug in Panel2D which didn’t allow it to be resized from the bottom right corner. It was resizing from the top right corner. I had to address this bug as well. Below are the tasks in detail:</summary>
    <category term="google" label="google"/>
    <published>2021-07-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-06-28-week-4-antriksh.html</id>
    <title>Week #4: Adding Tree UI to the UI module</title>
    <updated>2021-06-28T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-4-adding-tree-ui-to-the-ui-module"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had very few tasks to do, almost all of them revolved around UI elements and adding stuff to the UI module. Earlier, it was pointed out that due to some design issues, importing certain modules into others caused circular imports which led to importing the specific modules inside a class/method which is not the best approach. This will be resolved as soon as the PR that fixes this issue is reviewed/merged in the codebase. In the meantime, all the PR’s related to UI will be on hold, which is why this I had few tasks this week. The tasks are described below in detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/448"&gt;Addition of watcher class in UI&lt;/a&gt; :This is finally done, as described in the previous blogs this was something that was on hold for a long time. Primarily, due to other tasks I couldn’t work on this but this week due to less tasks I was able to complete the watcher class and create a PR. This PR adds support for a watcher class in the UI elements. The purpose of this class is to monitor a particular attribute from the UI element after it has been added to the scene. If the attribute changes in the real time, a user defined callback is triggered and the scene is force rendered. Currently, if any attribute of the UI element changes after it is added to the scene it does not get updated accordingly. The only way to update the UI element would be to add a custom user hook that will be triggered when a particular event that can change the attribute is invoked. This is highly ambiguous as some unmonitored event can easily change many attributes of the UI element. Also it would be really hard to add user hooks for so many events. The watcher class does this automatically, it monitors the attribute for changes and if the attribute changes, a user defined callback is triggered. If this is something that is required in the UI module, then in the future a good addition would be to monitor the UI element instance as a whole instead of a single attribute .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/antrikshmisri/fury/blob/bb45d1c5b6fc0495dfe4d7814fab9aefbf9f7727/fury/ui.py#L5249"&gt;Addition of Tree UI in the UI module&lt;/a&gt; : Another task for this week was to work on either Tree UI or the Accordion UI. I chose to work on Tree UI as it is very interesting to implement and the logic for Tree is almost similar to that of an Accordion. So far, I have managed to implement TreeNode2D. The Tree UI contains several nodes and each node can have its own sub-nodes/children. Also, each node has an expand/collapse button which can be used to chow/hide the underlying children. The Tree UI would take some sort of data structure that contains nodes/sub-nodes and convert each node to TreeNode2D and add all the processed node to the main Panel. So far this the result I have achieved:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://i.imgur.com/WIMWsrp.png" src="https://i.imgur.com/WIMWsrp.png" style="width: 200px; height: 200px;" /&gt;
&lt;img alt="https://i.imgur.com/u33D7Qi.png" src="https://i.imgur.com/u33D7Qi.png" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/446"&gt;Resize Panel2D on window resizing&lt;/a&gt; : This PR adds support for resizing Panel2D on WindowResizeEvent. This means that the Panle2D resizes itself with respect to the changed window size. It also retains its maximum possible size and does not overflow. Also, this PR adds support for resizing the Panel2D for the bottom right corner. A placeholder button is placed at the bottom right corner of the Panel2D and when it is dragged by the placeholder the Panel2D resize accordingly. Below is an example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://i.imgur.com/87PN7TQ.gif" src="https://i.imgur.com/87PN7TQ.gif" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also, I did some testing of GridLayout when placed inside a resizable Panel2D. This will need to be worked on before advancing any further. Currently the elements present in the Panel2D do not resize properly w.r.t the changed panel size. Hopefully, this will be fixed in the future PRs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, I did not get stuck this week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;The tasks for the next week will be decided in this weeks meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-06-28-week-4-antriksh.html"/>
    <summary>This week I had very few tasks to do, almost all of them revolved around UI elements and adding stuff to the UI module. Earlier, it was pointed out that due to some design issues, importing certain modules into others caused circular imports which led to importing the specific modules inside a class/method which is not the best approach. This will be resolved as soon as the PR that fixes this issue is reviewed/merged in the codebase. In the meantime, all the PR’s related to UI will be on hold, which is why this I had few tasks this week. The tasks are described below in detail:</summary>
    <category term="google" label="google"/>
    <published>2021-06-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-06-21-week-3-antriksh.html</id>
    <title>Week #3: Adapting GridLayout to work with UI</title>
    <updated>2021-06-21T00:00:00+00:00</updated>
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;section id="week-3-adapting-gridlayout-to-work-with-ui"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week my tasks revolved around layout and UI elements. The primary goal for this week was to adapt the GridLayout to work with different UI elements. Currently, GridLayout just supports vtk actors and not UI elements, my task was to modify the class to support UI elements. The other tasks for this week are described below in detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/443"&gt;Adapt GridLayout to support UI elements&lt;/a&gt; : This was the main task for the week and the aim for this was to actually modify GridLayout to support UI elements. This was not possible before because GridLayout only supported vtk actors (because of certain methods only being provided by vtk actors). I modified the main class itself along with some utility functions. The problem that I faced during this was circular imports. Currently, the structure of FURY doesn’t allow certain modules to be imported into other modules because of circular imports. A way to get around this was to actually import the modules inside the methods but this is not ideal always. This will be fixed in the future PRs where the UI module will be redesigned. I also added support for grid position offsetting, which basically means that the position of the UI elements that are placed in the Grid can be offset by a global offset passed in the constructor of GridLayout class. Below is an example showing the current state of GridLayout with different UI elements. I also created a brief example to demonstrate how to use GridLayout of different cellshapes with UI elements link to which is &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/443/files#diff-853d17c3134e7d22de88523bb787dc05d52ec798dc2111aa0419dfd5d634350a"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt="https://i.imgur.com/EX2cN1i.png" src="https://i.imgur.com/EX2cN1i.png" style="width: 200px; height: 200px;" /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/294"&gt;Reviewed the FileDialog2D PR&lt;/a&gt; : This PR added support for FileDialog2D in the UI module. The PR needed to be reviewed in order to merge it as soon as other required PRs were merged. One of the mentors already reviewed the PR briefly my job was to review the PR for any remaining bugs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/422"&gt;Study #422 PR to understand contours around the drawn markers&lt;/a&gt; : In my previous week’s tasks I created a PR to add support for borders in Panel2D. The borders were individually customizable just like in CSS which meant 4 Rectangle2D objects were needed to represent border in each direction. This is not ideal for a scenario where a lot of Panel2D are present in the scene as it can be performance taxing. A possible solution for this was to actually look how this was implemented in the #422. This PR allowed drawing millions of markers in one call that too from the GPU. Interestingly, each marker had a contour surrounding it which is exactly what we needed for Panel2D. This is something that can be considered in the future for border implementation in other complex UI elements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also continued my work on the watcher class that I mentioned in the previous week’s blog. The work for this is almost done and just needs some tests implemented, which should be done soon.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, I did not get stuck this week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Next week I would probably continue to work on GridLayout and possibly other layouts as well, other tasks will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-06-21-week-3-antriksh.html"/>
    <summary>This week my tasks revolved around layout and UI elements. The primary goal for this week was to adapt the GridLayout to work with different UI elements. Currently, GridLayout just supports vtk actors and not UI elements, my task was to modify the class to support UI elements. The other tasks for this week are described below in detail:</summary>
    <category term="google" label="google"/>
    <published>2021-06-21T00:00:00+00:00</published>
  </entry>
</feed>
