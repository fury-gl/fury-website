<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog - Posts in gsoc</title>
  <id>https://fury.gl/blog/category/gsoc/atom.xml</id>
  <updated>2021-03-09T00:00:00Z</updated>
  <link href="https://fury.gl/" />
  <link href="https://fury.gl/blog/category/gsoc/atom.xml" rel="self" />
  <generator uri="https://ablog.readthedocs.org" version="0.10.5">ABlog</generator>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Google Summer of Code</title>
    <id>https://fury.gl/posts/2021/2021-03-09-gsoc.html</id>
    <updated>2021-03-09T00:00:00Z</updated>
    <published>2021-03-09T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-03-09-gsoc.html" />
    <author>
      <name>Serge Koudoro</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;google-summer-of-code&quot;&gt;

&lt;p&gt;FURY is participating in the &lt;a class=&quot;reference external&quot; href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code 2021&lt;/a&gt; under the umbrella of the &lt;a class=&quot;reference external&quot; href=&quot;https://python-gsoc.org/&quot;&gt;Python Software Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;FURY is a free and open source software library for scientific visualization and 3D animations. FURY contains many tools for visualizing a series of scientific data including graph and imaging data.&lt;/p&gt;
&lt;p&gt;A list of project ideas and application info is on our &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2021&quot;&gt;GitHub Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in talking to us about projects, applications join us to our &lt;a class=&quot;reference external&quot; href=&quot;https://discord.gg/aXRZmmM&quot;&gt;discord community&lt;/a&gt; or drop us a line on our &lt;a class=&quot;reference external&quot; href=&quot;https://mail.python.org/mailman3/lists/fury.python.org&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be part of our community and Enjoy your summer of code!&lt;/p&gt;
&lt;p&gt;Serge K.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Shader Showcase</title>
    <id>https://fury.gl/posts/2020/2020-08-24-week-13-lenix.html</id>
    <updated>2020-08-24T00:00:00Z</updated>
    <published>2020-08-24T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-24-week-13-lenix.html" />
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;shader-showcase&quot;&gt;

&lt;p&gt;Make sure to check out Project &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury&quot;&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey Everyone!
Today marked the official end of the coding period for Google Summer of Code 2020. On this day I would like to take the opportunity to thank all my mentors and Soham who have shown immense support during this time and helped me grow not only to be a better programmer but also to be a better team member. While the GSoC period ends, I will try my best to be active and contribute to the project and help it grow.
Cheers!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This being the final week of GSoC , my task was to create a PR which showcases not only the shader capabilities of the project but also to create a example which integrates both the UI and shader system of project FURY. This example can help new users to get familiar with both the UI and shaders.
Apart from this i also worked on a Toon Shader.&lt;/p&gt;
&lt;p&gt;The output for the above task is given below :&lt;/p&gt;
&lt;img alt=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-13.gif&quot; src=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-13.gif&quot; /&gt;
&lt;p&gt;The shader demos are available &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/lenixlobo/fury/tree/shader-demos&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;The next week I will work on the final GSoC documentation which explains what I worked on throughout the GSoC period. In case of any changes are requested by the mentors I will also try to implement them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;With the help of Soham and the mentors this week went smoothly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Google Summer of Code Final Work Product</title>
    <id>https://fury.gl/posts/2020/2020-08-24-final-work-soham.html</id>
    <updated>2020-08-24T00:00:00Z</updated>
    <published>2020-08-24T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-24-final-work-soham.html" />
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://summerofcode.withgoogle.com/projects/#6653942668197888&quot;&gt;&lt;div align=&quot;center&quot; class=&quot;align-center&quot;&gt;&lt;img alt=&quot;https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg&quot; height=&quot;50&quot; src=&quot;https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg&quot; /&gt;&lt;/div&gt;
&lt;/a&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/&quot;&gt;&lt;img alt=&quot;https://www.python.org/static/community_logos/python-logo.png&quot; src=&quot;https://www.python.org/static/community_logos/python-logo.png&quot; style=&quot;width: 40%;&quot; /&gt;&lt;/a&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://fury.gl/latest/community.html&quot;&gt;&lt;img alt=&quot;https://python-gsoc.org/logos/FURY.png&quot; src=&quot;https://python-gsoc.org/logos/FURY.png&quot; style=&quot;width: 25%;&quot; /&gt;&lt;/a&gt;
&lt;div class=&quot;section&quot; id=&quot;google-summer-of-code-final-work-product&quot;&gt;

&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Soham Biswas&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; Python Software Foundation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; FURY&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2020&quot;&gt;FURY - Create new UI Widgets &amp;amp; Physics Engine
Integration&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;proposed-objectives&quot;&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;ComboBox&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tab UI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;File Dialog Improvements&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;modified-objectives&quot;&gt;
&lt;h2&gt;Modified Objectives&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Combobox&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tab UI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;File Dialog Improvements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Double Click Callback&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TextBlock2D Improvements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scrollbars as a Standalone Component&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Physics Engine Integration&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;objectives-completed&quot;&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ComboBox2D UI Component&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A combobox is a commonly used graphical user interface widget.
Traditionally, it is a combination of a drop-down list or list box and a
single-line textbox, allowing the user to select a value from the list.
The term “combo box” is sometimes used to mean “drop-down list”.
Respective components, tests and tutorials were created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Combobox UI component:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/240&quot;&gt;https://github.com/fury-gl/fury/pull/240&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Combobox UI Tutorial:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/246&quot;&gt;https://github.com/fury-gl/fury/pull/246&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tab UI Component&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In interface design, a tabbed document interface or Tab is a graphical
control element that allows multiple documents or panels to be contained
within a single window, using tabs as a navigational widget for
switching between sets of documents. Respective components, tests and
tutorials were created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tab UI component:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/252&quot;&gt;https://github.com/fury-gl/fury/pull/252&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tab UI tutorial:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/275&quot;&gt;https://github.com/fury-gl/fury/pull/275&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Double Click Callback&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Double click callbacks aren’t implemented in VTK by default so they need
to be implemented manually. With my mentor’s help I was able to
implement double click callbacks for all the three mouse buttons
successfully.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Adding Double Click Callback:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/231&quot;&gt;https://github.com/fury-gl/fury/pull/231&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;TextBlock2D Improvements&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The previous implementation of &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; was lacking a few
features such as size arguments and text overflow. There was no specific
way to create Texts occupying a said height or width area. Apart from
that UI components like &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ListBoxItem2D&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;FileMenu2D&lt;/span&gt;&lt;/code&gt; etc had an
issue where text would overflow from their specified width. In order to
tackle these problems, a modification was done to &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; to
accept size as an argument and a new method was added to clip
overflowing text based on a specified width and to replace the
overflowing characters with &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;...&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Setting Bounding Box for TextBlock2D:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/248&quot;&gt;https://github.com/fury-gl/fury/pull/248&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clip Text Overflow:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/268&quot;&gt;https://github.com/fury-gl/fury/pull/268&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Physics Engine Integration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Optional support for Physics engine integration of Pybullet was added to
Fury. Pybullet’s engine was used for the simulations and FURY was used
for rendering the said simulations. Exhaustive examples were added to
demonstrate various types of physics simulations possible using pybullet
and fury. The said examples are as follows:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Brick Wall Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Explains how to render and simulate external forces, objects and
gravity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ball Collision Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Explains how collisions work and how to detect said collisions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chain Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Explains how to render and simulate joints.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wrecking Ball Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A more complicated simulation that combines concepts explained by
the other examples.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apart from that, a document was created to explain the integration
process between pybullet and fury in detail.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Physics Simulation Examples:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/287&quot;&gt;https://github.com/fury-gl/fury/pull/287&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fury-Pybullet Integration Docs:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing&quot;&gt;https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;objectives-in-progress&quot;&gt;
&lt;h2&gt;Objectives in Progress&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Scrollbars as a standalone component&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The previous implementation of scrollbars were hard coded into
&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ListBox2D&lt;/span&gt;&lt;/code&gt;. Therefore, it was not possible to use scrollbars with any
other UI component. Apart from that, scrollbars in terms of design were
limited. Creating a horizontal scrollbar was not possible. The objective
of this PR is to make scrollbars separate so that other UI elements can
also make use of it.&lt;/p&gt;
&lt;p&gt;Currently, the skeletal and design aspects of the scrollbars are
implemented but the combination of scrollbars with other UI components
are still in progress.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Scrollbars as a Standalone API:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/285&quot;&gt;https://github.com/fury-gl/fury/pull/285&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;File Dialog Improvements&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Currently, we have access to &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;FileMenu2D&lt;/span&gt;&lt;/code&gt; which allows us to navigate
through the filesystem but it does not provide a user friendly Dialog to
read and write files in Fury. Hence the idea is to create a file dialog
which can easily open or save file at runtime. As of now, &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Open&lt;/span&gt;&lt;/code&gt; and
&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Save&lt;/span&gt;&lt;/code&gt; operations are implemented. Corresponding tests and tutorials
are in progress.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;File Dialog UI component:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/294&quot;&gt;https://github.com/fury-gl/fury/pull/294&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;other-objectives&quot;&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Radio Checkbox Tutorial using FURY API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The objects for Radio button and Checkbox tutorial were rendered using
VTK’s method by a fellow contributor so I decided to replace them with
native FURY API. The methods were rewritten keeping the previous commits
intact.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Radio Checkbox tutorial using FURY API:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/281&quot;&gt;https://github.com/fury-gl/fury/pull/281&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GSoC weekly Blogs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Weekly blogs were added for FURY’s Website.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;First &amp;amp; Second Evaluation:&lt;/strong&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/272&quot;&gt;https://github.com/fury-gl/fury/pull/272&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Third Evaluation:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/286&quot;&gt;https://github.com/fury-gl/fury/pull/286&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;timeline&quot;&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class=&quot;docutils align-default&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 12%&quot; /&gt;
&lt;col style=&quot;width: 35%&quot; /&gt;
&lt;col style=&quot;width: 53%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;th class=&quot;head&quot;&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class=&quot;head&quot;&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class=&quot;head&quot;&gt;&lt;p&gt;Blog Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 1(30-05-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Welcome to my GSoC Blog!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-1-5/&quot;&gt;Weekly Check-in #1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 2(07-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;First Week of Coding!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-2-3/&quot;&gt;Weekly Check-in #2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 3(14-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;ComboBox2D Progress!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-3-4/&quot;&gt;Weekly Check-in #3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 4(21-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;TextBlock2D Progress!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-4-4/&quot;&gt;Weekly Check-in #4&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 5(28-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;May the Force be with you!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-5-4/&quot;&gt;Weekly Check-in #5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 6(05-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Translation, Reposition, Rotation.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-6-7/&quot;&gt;Weekly Check-in #6&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 7(12-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Orientation, Sizing, Tab UI.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-7-4/&quot;&gt;Weekly Check-in #7&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 8(19-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;ComboBox2D, TextBlock2D, ClippingOverflow.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-8-2/&quot;&gt;Weekly Check-in #8&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 9(26-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Tab UI, TabPanel2D, Tab UI Tutorial.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-9-4/&quot;&gt;Weekly Check-in #9&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 10(02-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Single Actor, Physics, Scrollbars.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-10-2/&quot;&gt;Weekly Check-in #10&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 11(09-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Chain Simulation, Scrollbar Refactor,Tutorial Update.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-11-1/&quot;&gt;Weekly Check-in #11&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 12(16-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Wrecking Ball Simulation, ScrollbarsUpdate, Physics Tutorials.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-12/&quot;&gt;Weekly Check-in #12&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 13(23-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Part of the Journey is the end unless itsOpen Source!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-13/&quot;&gt;Weekly Check-in #13&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Detailed weekly tasks and work done can be found
&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/nibba2018s-blog/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Google Summer of Code 2020 Final Work Product</title>
    <id>https://fury.gl/posts/2020/2020-08-24-final-work-lenix.html</id>
    <updated>2020-08-24T00:00:00Z</updated>
    <published>2020-08-24T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-24-final-work-lenix.html" />
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div align=&quot;center&quot; class=&quot;align-center&quot;&gt;&lt;img alt=&quot;https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg&quot; height=&quot;50&quot; src=&quot;https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg&quot; /&gt;&lt;/div&gt;
&lt;img alt=&quot;https://www.python.org/static/community_logos/python-logo.png&quot; src=&quot;https://www.python.org/static/community_logos/python-logo.png&quot; style=&quot;width: 40%;&quot; /&gt;
&lt;img alt=&quot;https://python-gsoc.org/logos/FURY.png&quot; src=&quot;https://python-gsoc.org/logos/FURY.png&quot; style=&quot;height: 30px;&quot; /&gt;
&lt;div class=&quot;section&quot; id=&quot;google-summer-of-code-2020-final-work-product&quot;&gt;

&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Lenix Lobo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; Python Software Foundation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; FURY&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2020&quot;&gt;FURY - Improve Shader Framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;introduction&quot;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The current shader framework for FURY is based on VTK and lacks documentation to get started which can be overwhelming for new users. The objective of this project is to enable users to be easily able to understand and use the shader framework to render stunning visual representations of data. The project involves programming vertex and fragment shaders to generate effects for more immersive visualization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;proposed-objectives&quot;&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Adding SDF actor to the API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This actor uses raymarching to model actors using SDF. The method provides several actors including &lt;cite&gt;ellipsoid&lt;/cite&gt;, &lt;cite&gt;sphere&lt;/cite&gt; and &lt;cite&gt;torus&lt;/cite&gt;.
&lt;strong&gt;Shader demos&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Use the FURY shader system to create and visualize different shading algorithms. Implementations include &lt;cite&gt;SphereMap&lt;/cite&gt;, &lt;cite&gt;Toon&lt;/cite&gt;, &lt;cite&gt;Gooch&lt;/cite&gt; and &lt;cite&gt;Vertex Noise&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;unsubmitted-functionalities&quot;&gt;
&lt;h2&gt;Unsubmitted Functionalities&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spherical Harmonics using Shaders.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The spherical harmonics algorithm is used to generate spherical surfaces using biases and coefficients computed. The general approach to achieve this is computationally expensive. The idea proposed was to leverage the GPU hardware using shaders to provide a faster more efficient alternative to the current implementations. The second month of the coding period was devoted to the same task but unfortunately, the observed performance was quite unsatisfactory than the expected performance. Moreover, the output shape of the geometry was distorted. It was then decided to continue the work after the GSoC period and prioritize the task at hand.&lt;/p&gt;
&lt;p&gt;The Work in Progress can be accessed here. &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/lenixlobo/fury/tree/Spherical-Harmonics&quot;&gt;https://github.com/lenixlobo/fury/tree/Spherical-Harmonics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Texture using Geometry Shader&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Geometry Shaders provide a lot of flexibility to users to create custom geometry behaviors such as instancing. The idea was to create a dynamic Fur/Hair effect on top of a FURY actor. Unfortunately due to missing documentation on VTK geometry shaders and lack of resources, the project was not completed during the GSoC period. However, I will continue to try to solve the issue.&lt;/p&gt;
&lt;p&gt;The source code for the current progress can be accessed here. &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/lenixlobo/fury/tree/Dynamic-Texture&quot;&gt;https://github.com/lenixlobo/fury/tree/Dynamic-Texture&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;objectives-completed&quot;&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SDF based Actor&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;The objective here was to provide an alternative approach to users to use SDF modeled actors in the scene. This actor is modeled using the raymarching algorithm which provides much better performance than conventional polygon-based actors. Currently, the shapes supported include ellipsoid, sphere and torus&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
&lt;strong&gt;SDF Actor method:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/250&quot;&gt;https://github.com/fury-gl/fury/pull/250&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Multiple SDF Actor&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;The objective was to create a method through which multiple SDF primitives are rendered within a single cube. This task helped us explore the limitations of the shader system and also benchmarking the performance.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
&lt;strong&gt;MultiSDF Shader:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/blob/master/docs/experimental/viz_multisdf.py&quot;&gt;https://github.com/fury-gl/fury/blob/master/docs/experimental/viz_multisdf.py&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Shader Demos&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;The task here was to create a pull request showcasing the capabilities of the FURY shader system and to also provide examples or new users to get started with integrating custom shaders into the scenes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
&lt;strong&gt;Shader Demos:&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/296&quot;&gt;https://github.com/fury-gl/fury/pull/296&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;other-objectives&quot;&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tutorials&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Create Tutorials for new users to get familiar with the Shader System&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
- &lt;strong&gt;Shader UI Tutorial&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/296&quot;&gt;https://github.com/fury-gl/fury/pull/296&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-&lt;strong&gt;SDF Actor Tutorial&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/267&quot;&gt;https://github.com/fury-gl/fury/pull/267&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GSoC weekly Blogs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Weekly blogs were added for FURY’s Website.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
- &lt;strong&gt;First &amp;amp; Second Evaluation:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/250&quot;&gt;https://github.com/fury-gl/fury/pull/250&lt;/a&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/267&quot;&gt;https://github.com/fury-gl/fury/pull/267&lt;/a&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Third Evaluation:&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/296&quot;&gt;https://github.com/fury-gl/fury/pull/296&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;timeline&quot;&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class=&quot;docutils align-default&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 11%&quot; /&gt;
&lt;col style=&quot;width: 34%&quot; /&gt;
&lt;col style=&quot;width: 55%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;th class=&quot;head&quot;&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class=&quot;head&quot;&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class=&quot;head&quot;&gt;&lt;p&gt;Blog Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 1(30-05-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Welcome to my GSoC Blog!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/gsoc-blog-week-1/&quot;&gt;Weekly Check-in #1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 2(07-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Geometry Shaders!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-2/&quot;&gt;Weekly Check-in #2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 3(14-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Ray Marching!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-3/&quot;&gt;Weekly Check-in #3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 4(21-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;RayMarching Continued&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-4/&quot;&gt;Weekly Check-in #4&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 5(28-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Spherical Harmonics&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-5/&quot;&gt;Weekly Check-in #5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 6(05-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Spherical Harmonics Continued&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-6/&quot;&gt;Weekly Check-in #6&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 7(12-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Multiple SDF Primitives&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-7/&quot;&gt;Weekly Check-in #7&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 8(19-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Improvements in SDF primitives&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-8/&quot;&gt;Weekly Check-in #8&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 9(26-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Merging SDF Actor and Benchmarks!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-9/&quot;&gt;Weekly Check-in #9&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 10(02-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;More Shaders&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-10/&quot;&gt;Weekly Check-in #10&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 11(08-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Even More Shaders&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-11/&quot;&gt;Weekly Check-in #11&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;p&gt;Week 12(16-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Picking Outline&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-12/&quot;&gt;Weekly Check-in #12&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;p&gt;Week 13(23-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Final Week&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-13/&quot;&gt;Weekly Check-in #13&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Detailed weekly tasks and work done can be found
&lt;a class=&quot;reference external&quot; href=&quot;https://blogs.python-gsoc.org/en/lenixlobos-blog/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Part of the Journey is the end unless its Open Source!</title>
    <id>https://fury.gl/posts/2020/2020-08-23-week-13-soham.html</id>
    <updated>2020-08-23T00:00:00Z</updated>
    <published>2020-08-23T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-23-week-13-soham.html" />
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;part-of-the-journey-is-the-end-unless-its-open-source&quot;&gt;

&lt;p&gt;Hello and welcome to my final weekly check-in. Today officially marks the end of  the coding period for GSoC 2020. I enjoyed every bit of it. This was a life-changing experience for me and now I observe and interpret everything from a different perspective altogether. I have grown into a better developer and a person since GSoC. I would like to thank all my mentors and especially Serge for his immense support and mentorship. I would love to contribute to fury even after GSoC is over but unfortunately my semester break is over so I wont be as active as I was during the summer.&lt;/p&gt;
&lt;p&gt;Now, regarding work I will be sharing my progress with the File Dialog UI component. The official repository of my sub-org can be found &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I worked on the File Dialog UI component. Fury previously had a FileMenu component which could browse through the file system but we needed a dialog like implementation for it so that its easier for the users to read and write files during runtime. I tried implementing a simple design for it. It specifically has two modes, one for saving files and the other for writing files. The implementation can be demonstrated as follows:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;open-dialog&quot;&gt;
&lt;h3&gt;Open Dialog:&lt;/h3&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/90978632-df12c780-e56c-11ea-8517-6243ea06bdd2.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/90978632-df12c780-e56c-11ea-8517-6243ea06bdd2.gif&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;save-dialog&quot;&gt;
&lt;h3&gt;Save Dialog:&lt;/h3&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/90978638-eafe8980-e56c-11ea-835a-3a82ccee2973.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/90978638-eafe8980-e56c-11ea-835a-3a82ccee2973.gif&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will start with my final GSoC documentation and code submission. I will also try to implement the tests and tutorials for File Dialog or any further changes requested by my mentors. If I am not able to finish it within the next week, I will get it done after GSoC.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not face any major issues this week.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Thank&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;love&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;support.&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;❤️😄&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Outline Picker</title>
    <id>https://fury.gl/posts/2020/2020-08-17-week-12-lenix.html</id>
    <updated>2020-08-17T00:00:00Z</updated>
    <published>2020-08-17T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-17-week-12-lenix.html" />
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;outline-picker&quot;&gt;

&lt;p&gt;Make sure to check out Project &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury&quot;&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey !
This week, Picking Outline!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;We needed a Outline feature in FURY to indicate which model we choose in the scene. So the task assigned was to find options to achieve this. There were two ways to do this, 1. Using shader and 2. Using Vtk PolyData Silhouette. Despite trying multiple implementation methods the shader approach was not working . I also tried using VTKs inbuilt function , but there is a bug when i use some models. When i choose a model, it renders outline for every polygon , which is not what we want to achieve. The bug is shown below:&lt;/p&gt;
&lt;p&gt;Below are the outputs of the techniques i worked on :&lt;/p&gt;
&lt;img alt=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-12.gif&quot; src=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-12.gif&quot; /&gt;
&lt;p&gt;The shader demos are available &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/lenixlobo/fury/tree/shader-demos&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;With the end of GSoC approaching soon, the next task is to create a PR which can help new users to test different shaders using UI to get started.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I still was not able to figure out how we can achieve the outline effect. Am currently looking into other approaches we could use&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Wrecking Ball Simulation, Scrollbars Update, Physics Tutorials.</title>
    <id>https://fury.gl/posts/2020/2020-08-16-week-12-soham.html</id>
    <updated>2020-08-16T00:00:00Z</updated>
    <published>2020-08-16T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-16-week-12-soham.html" />
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;wrecking-ball-simulation-scrollbars-update-physics-tutorials&quot;&gt;

&lt;p&gt;Hello and welcome to my 12th weekly check-in. In this blog I will be discussing my progress with the wrecking ball simulation and my scrollbar separation work. Apart from this I have also finalized the physics simulation tutorials and have created a Pull Request to finally get it merged with the official repository. The official repository of my sub-org can be found &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I was mainly focusing on the wrecking ball simulation. This simulation is basically the combination of chain simulation and brick wall simulation. A sphere attached to a chain smashes a “NxNxN” brick wall. The simulation is as follows:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/90336291-84232280-dff8-11ea-869b-21a99b203c31.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/90336291-84232280-dff8-11ea-869b-21a99b203c31.gif&quot; /&gt;
&lt;p&gt;There’s a rendering bug with the cylinders because of which the chain segments look weird. My mentors confirmed that this bug originated from VTK’s &lt;cite&gt;cylinder source&lt;/cite&gt; method and they are currently working on it to fix it. The simulation will render correctly once that bug is fixed.&lt;/p&gt;
&lt;p&gt;Regarding the scrollbar separation task, I was able to fix those callback issues that I was facing. The mouse callbacks on the scrollbar now work correctly:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/90337280-1af2dd80-dfff-11ea-94c4-508121307583.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/90337280-1af2dd80-dfff-11ea-94c4-508121307583.gif&quot; /&gt;
&lt;p&gt;I have also created a pull request to add the following physics simulations with proper documentation to the main repository:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Brick Wall Simulation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ball Collision Simulation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chain Simulation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wrecking Ball Simulation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Currently I am a bit confused with the implementation of scrollbars with UI components. I had a meeting with my mentor and he decided to help me out with this. So most probably I will be working with the scrollbar component and its implementation. Next week will also be the final week for GSoC 2020 before the evaluations start so I would work on getting the final documentation and formalities ready.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Apart from the scrollbar implementation idea, I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Thank&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;reading,&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">More Shaders!!</title>
    <id>https://fury.gl/posts/2020/2020-08-09-week-11-lenix.html</id>
    <updated>2020-08-09T00:00:00Z</updated>
    <published>2020-08-09T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-09-week-11-lenix.html" />
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;more-shaders&quot;&gt;

&lt;p&gt;Make sure to check out Project &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury&quot;&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey !
This week, More Shaders!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;The task assigned for this week was to explore more shader techniques which could be implemented using FURY and which would demonstrate the capability of FURY shader system. So i decided to work on implementing shading examples such as Gooch shading and reflection shader using textures.&lt;/p&gt;
&lt;p&gt;Below are the outputs of the techniques i worked on :&lt;/p&gt;
&lt;img alt=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11a.gif&quot; src=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11a.gif&quot; /&gt;
&lt;img alt=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11b.gif&quot; src=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11b.gif&quot; /&gt;
&lt;img alt=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11c.gif&quot; src=&quot;https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11c.gif&quot; /&gt;
&lt;p&gt;The shader demos are available &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/lenixlobo/fury/tree/shader-demos&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;The next week will involve working on more such demos which can demonstrate the capabilities of FURY&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No issues were faced this week&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Chain Simulation, Scrollbar Refactor, Tutorial Update.</title>
    <id>https://fury.gl/posts/2020/2020-08-09-week-11-soham.html</id>
    <updated>2020-08-09T00:00:00Z</updated>
    <published>2020-08-09T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-09-week-11-soham.html" />
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;chain-simulation-scrollbar-refactor-tutorial-update&quot;&gt;

&lt;p&gt;Hello and welcome to my 11th weekly check-in. In this blog I will be discussing my progress with multiple topics related to physics and ui components. I was actively working on a couple of things, specifically Joint simulations in pyBullet and scrollbar UI component. I also took up the responsibility to complete an incomplete Pull Request which was pending for quite a while. The official repository of my sub-org can be found &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;The first thing that I did this week was to figure out joint simulations in pybullet. Due to lack of proper documentation I was not aware that Joints are kept stiff by default, hence I had no idea what was wrong with my simulations. Thankfully, while I was browsing pybullet forums, I found this &lt;a class=&quot;reference external&quot; href=&quot;https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=24&amp;amp;t=13035&quot;&gt;post&lt;/a&gt; regarding rope simulations when I realized that I had to explicitly set the friction force to prevent stiffness among the Joints. Keeping this point in mind I was able to simulate the following Chain of hexagonal prisms:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/89737601-b7613100-da8f-11ea-947f-a96c66caefae.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/89737601-b7613100-da8f-11ea-947f-a96c66caefae.gif&quot; /&gt;
&lt;p&gt;This week I was mainly supposed to  work on refactoring scrollbars as a standalone component. I have made some progress for now. I am able to render the scrollbars properly, with proper size, orientation and color but I am having some issues regarding its scrolling callbacks. I need to look further into it. Here’s a brief glimpse:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/89738159-28a2e300-da94-11ea-9167-e825f82edf98.png&quot; src=&quot;https://user-images.githubusercontent.com/29832615/89738159-28a2e300-da94-11ea-9167-e825f82edf98.png&quot; /&gt;
&lt;p&gt;This particular &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/208&quot;&gt;PR&lt;/a&gt; by a fellow contributor was pending for quite a while, so I decided to look into it and complete it. The objective of the PR was to add examples for the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;CheckBox&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;RadioButton&lt;/span&gt;&lt;/code&gt; UI components, but the problem was that the objects were not rendered using FURY API in the tutorial, so I decided to complete that. It was already a well made tutorial. I only had to replace the appropriate functions with FURY’s API calls.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;CheckBox&lt;/span&gt;&lt;/code&gt; tutorial:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/89438967-20326b80-d767-11ea-8f47-e7711e900c9f.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/89438967-20326b80-d767-11ea-8f47-e7711e900c9f.gif&quot; /&gt;
&lt;p&gt;There’s still some internal issues while updating the colors of the cube which is currently being worked on by my mentors.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;RadioButton&lt;/span&gt;&lt;/code&gt; tutorial:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/89438999-2e808780-d767-11ea-8b08-2a36a05294bc.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/89438999-2e808780-d767-11ea-8b08-2a36a05294bc.gif&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will continue working on the scrollbar component and try to fix the issues that I am having with its callbacks. I will also try to work on the wrecking ball simulation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Apart from the scrollbar callbacks and stiff joints, I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Thank&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;reading,&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/category/gsoc/atom.xml">
    <title type="text">Single Actor, Physics, Scrollbars.</title>
    <id>https://fury.gl/posts/2020/2020-08-02-week-10-soham.html</id>
    <updated>2020-08-02T00:00:00Z</updated>
    <published>2020-08-02T00:00:00Z</published>
    <link href="https://fury.gl/posts/2020/2020-08-02-week-10-soham.html" />
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;single-actor-physics-scrollbars&quot;&gt;

&lt;p&gt;Hello and welcome to my 10th weekly check-in. Second evaluation ended this week and now we move on to our 3rd and final coding period. In today’s check-in I will be sharing my progress with the single actor physics simulation that I facing some issues with and I will also be discussing my future plans regarding UI components. The official repository of my sub-org, FURY can always be found &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I was able to figure out the uncontrollable spinning problem that I was facing while rendering physics simulations. Specifically the simulation where a brick wall was rendered by a single actor. The spinning problem was as follows:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif&quot; /&gt;
&lt;p&gt;Here’s how the fixed simulation looks like:&lt;/p&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/29832615/89126963-946ed400-d507-11ea-93cd-aad3a9f59ab0.gif&quot; src=&quot;https://user-images.githubusercontent.com/29832615/89126963-946ed400-d507-11ea-93cd-aad3a9f59ab0.gif&quot; /&gt;
&lt;p&gt;I was facing this particular issue because I was directly syncing the orientation of the objects in pyBullet world to the objects in the Fury world. So I decided to apply the change in orientation instead and it worked. In order to achieve this I had to keep track of the bricks’ orientation at each step of the simulation, sync the change and then update the tracked orientation. Thankfully, pybullet had convenient tools to achieve this. Here’s a snippet on how to update individual objects rendered by a single actor:&lt;/p&gt;
&lt;div class=&quot;highlight-python notranslate&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sync_brick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multibody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBasePositionAndOrientation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multibody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;rot_mat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getMatrixFromQuaternion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getDifferenceQuaternion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brick_orns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; \
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;brick_centers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@rot_mat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;brick_centers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;brick_orns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;All the necessary information is updated &lt;a class=&quot;reference external&quot; href=&quot;https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Currently, the scrollbars are native to &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ListBox2D&lt;/span&gt;&lt;/code&gt; only. We are planning to separate scrollbars from &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ListBox2D&lt;/span&gt;&lt;/code&gt; to create a standalone UI component. This was in progress previously but was later discontinued, so I was given the responsibility to complete it. After this we plan to improve File Dialog capabilities later on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not face any major issues but it took me some time to understand and evaluate the existing discontinued &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/222&quot;&gt;PR&lt;/a&gt; regarding scrollbar separation.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Thank&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;reading,&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
