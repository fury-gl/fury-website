<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog - Posts by Antriksh Misri</title>
  <id>https://fury.gl/blog/author/antriksh-misri/atom.xml</id>
  <updated>2021-07-26T00:00:00Z</updated>
  <link href="https://fury.gl/" />
  <link href="https://fury.gl/blog/author/antriksh-misri/atom.xml" rel="self" />
  <generator uri="https://ablog.readthedocs.org" version="0.10.5">ABlog</generator>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #8: Code Cleanup, Finishing up open PRs, Continuing work on Tree2D</title>
    <id>https://fury.gl/posts/2021/2021-07-26-week-8-antriksh.html</id>
    <updated>2021-07-26T00:00:00Z</updated>
    <published>2021-07-26T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-26-week-8-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-8-code-cleanup-finishing-up-open-prs-continuing-work-on-tree2d&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had to work on the open PRs specifically work on the bugs that were pointed out in last week’s meeting. Along side the bugs I had to continue the work on Tree2D UI element. Below is the detailed description of what I worked on this week:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/460&quot;&gt;Added new tutorial, code clean-up, bug fixes&lt;/a&gt; : The Tree2D had some issues with its resizing of child nodes. The size for the nodes was calculated automatically based on the vertical size occupied by its children but this could be problematic when working with sliders or UI elements that take up a lot of vertical size. To avoid this the children sizes are calculated relative to each other and the vertical size is calculated such that all children fit in perfectly. Besides this, a multiselection flag has been added that decides whether multiple child nodes can be selected or not.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/446&quot;&gt;Adding tests for corner resize callback&lt;/a&gt; : This PR is almost done as it was decided that WindowsResizeEvent will be ignored for now. Which leaves us with corner resizing, the callback for corner resizing didn’t have any tests so the recording was redone and tests for the corner resize callback was added.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443&quot;&gt;Fixing the failing CI’s for #443&lt;/a&gt; : The solution that ended up working was creating custom objects for testing of is_ui method. With this update there will be no circular dependencies and no failing CI’s.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/442&quot;&gt;Addressing all comments regarding #442&lt;/a&gt; : In the last meeting, a bug was pointed out wherein the text wouldn’t wrap as expected. The reason for this was some minor calculation mistakes. The whole wrap_overflow method was redone and now everything works as expected. Hopefully, no bugs pop up during this week’s meeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/441&quot;&gt;Addressing some minor comments&lt;/a&gt; : This PR is almost done too, there were some minor changes that were required to be addressed before this could be merged. So, these comments were fixed and hopefully this will be merged soon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using different fonts using FreeType python API: A major thing that FURY needs right now is using different fonts on the fly. This is more complicated than it seems, in case of browser environment this is not a problem as browsers can support and render all fonts using various techniques. In case of a desktop environment, we need to generate the bitmap for the fonts and then use them in form of textures. For now I have created a small example that generates these bitmaps from a python API called freetype-py, the fonts are fetched from google fonts and then they are displayed as textures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Starting working on Vertical Layout&lt;/strong&gt;: As majority of PRs are almost done, I started working on Vertical Layout. This will be hihgly inspired from the Grid Layout with obvious differences. The same techniques are being used in the Tree2D so this shouldn’t be difficult to implement.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;The failing CI’s for Grid Layout Pr needed some custom objects to remove circular dependencies. I couldn’t figure out where should these custom objects go but fortunaltely the mentors showed me a quick example of where it should go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will continue my work on some other UI’s and the remaining Layouts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #7: Finalizing the stalling PRs, finishing up Tree2D UI.</title>
    <id>https://fury.gl/posts/2021/2021-07-19-week-7-antriksh.html</id>
    <updated>2021-07-19T00:00:00Z</updated>
    <published>2021-07-19T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-19-week-7-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-7-finalizing-the-stalling-prs-finishing-up-tree2d-ui&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had limited tasks to do, mostly tasks related to existing PRs. Other than some minor fixes I had to implement some more things in Tree2D which included some minor UI fixes, some changes in tutorial, adding tests. Below is the detailed description of what I worked on this week:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/460&quot;&gt;Tests, tutorial changes, UI fixes for Tree2D&lt;/a&gt; : The Tree2D lacked some things like proper UI resizing, relative indentation, tests for the UI class. These were added with this PR. Currently, the indentation, resizing needs some improvement, which will be fixed after feedback from this week’s meeting. Also, tests for Tree2D, TreeNode2D were added as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/446&quot;&gt;Updating Panel2D tests, re-recording the events&lt;/a&gt; : This PR is almost done with just some tests blocking the PR. The tests were added this week, but tests for some callbacks that are associated with window event are still not added. This is because there is no way to count the WindowResizeEvent without actually using the API of the window provided by the OS. This can become very complicated very soon so, these tests may be added in the future.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443&quot;&gt;Fixing the failing CI’s for #443&lt;/a&gt; : The CI was failing on this PR and needed some fixing which was done this week. This PR still needs some refactoring before the all CI’s pass. This will hopefully be fixed before this week’s meeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/442&quot;&gt;Addressing all comments regarding #442&lt;/a&gt; : Previously, it was pointed out that the some code can be extracted into a function and can be reused in other methods. So, this week the extracted method was updated to reuse even more code and now almost no code is repeated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/441&quot;&gt;Adding has_border flag in Panel2D&lt;/a&gt; : Adding a has_border flag in Panel2D: Previously, to create the borders 4 Rectangle2D’s were used and they were created everytime even when border_width was set to 0. This would take a lot of wasted system resources. To fix this, a flag is added in the the constructor which is by default set to False. If false, the borders are not initialized and the resources are saved.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, this week I didn’t get stuck anywhere.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #6: Bug fixes, Working on Tree2D UI</title>
    <id>https://fury.gl/posts/2021/2021-07-12-week-6-antriksh.html</id>
    <updated>2021-07-12T00:00:00Z</updated>
    <published>2021-07-12T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-12-week-6-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-6-bug-fixes-working-on-tree2d-ui&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had relatively few tasks and most of them were to fix some bugs/design flaws that were discussed in last week’s meeting. Other than that, I had to implement a few things in the Tree2D UI element that will be discussed in detail below. I also had to update some existing PRs in order to make things work well. Below are the list of things I worked on this week:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/459&quot;&gt;Extracted Button2D class from elements to core&lt;/a&gt; : Button2D was placed in elements during the UI restructuring. The problem with that was that Button2D was needed in other UI elements outside UI elements present in elements in Panel2D. So, it was decided to create a rule that only the UI elements that do not depend on any other UI element are allowed to be placed in core UI elements. Button2D does not depend on any other UI element so it was extracted from elements to core.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443&quot;&gt;Adapting GridLayout to work with UI elements&lt;/a&gt; : This was a PR that aimed to add support for UI elements to be placed in a grid fashion. the problem was that there still some circular imports even after UI restructuring, primarily because UI was being imported in the layout module that in turn indirectly imported some UI elements making them circularly dependent. To remove the circular imports, it was decided to determine the UI element by checking for a add_to_scene method attribute in the instance. I updated the existing PR to implement the same.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/460&quot;&gt;Continuing my work on Tree2D&lt;/a&gt;: The Tree2D lacked some important things related to design and visual aspect of it. Before, if the children of any node exceeded its height they would just overflow. To prevent this I came up with a few solutions two of which were to either add a scrollbar on the overflowing node or to simply auto resize the parent node. Currently, there is no global API for the scrollbar and it has to be manually setup in a UI element, this will be hopefully implemented in the near future probably using layout management. Till then the auto resizing has been implemented for the nodes. In future, an option for scrollbar will be added.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I am still stuck with adding tests for panel resizing PR. As it needs windows events to be recorded as well. I tried to propagate the event to the interactor first but that just lead to that particular event being registered multiple times. I will try to find a workaround for it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;If the Tree2D gets merged by this week then I’ll probably work on other UI elements. Other tasks will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #5: Rebasing all PRs w.r.t the UI restructuring, Tree2D, Bug Fixes</title>
    <id>https://fury.gl/posts/2021/2021-07-05-week-5-antriksh.html</id>
    <updated>2021-07-05T00:00:00Z</updated>
    <published>2021-07-05T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-05-week-5-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-5-rebasing-all-prs-w-r-t-the-ui-restructuring-tree2d-bug-fixes&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;The UI restructuring was finally merged this week. This means UI is now a submodule in itself and provides different UI elements based on their types which are, core, elements, containers and some helper methods/classes. So, this week my main tasks were to rebase and fix merge conflicts of my open PR’s. Other than that, I had to continue my work on Tree2D UI element and finish the remaining aspects of it. Also, I had to create an example demonstrating how to use the newly added UI element. Many use cases were discussed in the open meeting like, an image gallery which displays preview image on the title and when expanded reveals the full scale image. I am thinking of adding multiple examples for the Tree2D to brainstorm on its certain features. Also, I had this annoying bug in Panel2D which didn’t allow it to be resized from the bottom right corner. It was resizing from the top right corner. I had to address this bug as well. Below are the tasks in detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pulls/antrikshmisri&quot;&gt;Rebasing all PRs w.r.t the UI restructuring&lt;/a&gt;: As discussed in the earlier blogs, due to circular imports and large size of the UI module, a bit of restructuring was required. This week the PR that converts the UI into a sub module was finally merged. This meant I had to fix all the merge conflicts and rebase all UI related PR’s. So, I rebased all the UI related PR’s and fixed the merge conflicts. Currently, there are still some PR’s that need some attention as still some of the imports are circular in nature. This means if the issue is correct then some more restructuring is required, which will be hopefully done in the near future.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/antrikshmisri/fury/blob/86b16ba3f74c3bdcf9aab58f546b37b919254cd1/fury/ui/elements.py#L3278&quot;&gt;Continuing the work on Tree2D&lt;/a&gt; : This week I continued my work on Tree2D, TreeNode2D. I had to fix/add multiple features on both the classes but my priority was to fix the looks of the UI element as well as make it easier for the user to manipulate the UI element. The first thing that I fixed was node offsetting, when a node is collapsed and expanded the nodes below the current node should also offset. Previously, only the child nodes within the same parents were offset and not the nodes/parent beyond that. With some minor adjusting, now the nodes are offset recursively and all child/parent nodes below the current nodes are offset. Secondly, before only a node could be added to a node which meant it wasn’t any easy way to add any other UI element to a node but with some updates/fixes any UI element can be added to a node. Also, the Tree2D lacked some properties/methods to easily manipulate it. So, i added some properties/methods that allow to easily/efficiently manipulate individual node inside the Tree2D. Below is the current state of the Tree2D. In the below tree, two panels are added to a child node after the tree has been initialized. Also, the coordinated of the child elements are totally fluid i.e they can be placed anywhere inside the content panel by passing normalized or absolute coordinates.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt=&quot;https://i.imgur.com/rQQvLqs.png&quot; src=&quot;https://i.imgur.com/rQQvLqs.png&quot; style=&quot;width: 200px; height: 200px;&quot; /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fixed Panel2D bottom corner resizing: Previously, the panel would not resize from the bottom left corner but it would resize from top right corner. I didn’t understand what was going wrong and was stuck on this for a long time. But I finally figured out the problem, I was calculating the Y-offset wrong as well as the panel resized from the top side instead of bottom. With some minor tweaking the bug was gone and the panel resizes correctly from the bottom right corner.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I got stuck on recording events for the updated panel UI element. The panel updates w.r.t the window size but I couldn’t figure out how to record the events invoked by the window. Unfortunately, I still haven’t figured out how this will be done. My guess is that I have to propagate the event first to the interactor and then to the UI element.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will probably finish up the GridLayout, Tree2D UI along side some other UI’s. This will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #4: Adding Tree UI to the UI module</title>
    <id>https://fury.gl/posts/2021/2021-06-28-week-4-antriksh.html</id>
    <updated>2021-06-28T00:00:00Z</updated>
    <published>2021-06-28T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-06-28-week-4-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-4-adding-tree-ui-to-the-ui-module&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had very few tasks to do, almost all of them revolved around UI elements and adding stuff to the UI module. Earlier, it was pointed out that due to some design issues, importing certain modules into others caused circular imports which led to importing the specific modules inside a class/method which is not the best approach. This will be resolved as soon as the PR that fixes this issue is reviewed/merged in the codebase. In the meantime, all the PR’s related to UI will be on hold, which is why this I had few tasks this week. The tasks are described below in detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/448&quot;&gt;Addition of watcher class in UI&lt;/a&gt; :This is finally done, as described in the previous blogs this was something that was on hold for a long time. Primarily, due to other tasks I couldn’t work on this but this week due to less tasks I was able to complete the watcher class and create a PR. This PR adds support for a watcher class in the UI elements. The purpose of this class is to monitor a particular attribute from the UI element after it has been added to the scene. If the attribute changes in the real time, a user defined callback is triggered and the scene is force rendered. Currently, if any attribute of the UI element changes after it is added to the scene it does not get updated accordingly. The only way to update the UI element would be to add a custom user hook that will be triggered when a particular event that can change the attribute is invoked. This is highly ambiguous as some unmonitored event can easily change many attributes of the UI element. Also it would be really hard to add user hooks for so many events. The watcher class does this automatically, it monitors the attribute for changes and if the attribute changes, a user defined callback is triggered. If this is something that is required in the UI module, then in the future a good addition would be to monitor the UI element instance as a whole instead of a single attribute .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/antrikshmisri/fury/blob/bb45d1c5b6fc0495dfe4d7814fab9aefbf9f7727/fury/ui.py#L5249&quot;&gt;Addition of Tree UI in the UI module&lt;/a&gt; : Another task for this week was to work on either Tree UI or the Accordion UI. I chose to work on Tree UI as it is very interesting to implement and the logic for Tree is almost similar to that of an Accordion. So far, I have managed to implement TreeNode2D. The Tree UI contains several nodes and each node can have its own sub-nodes/children. Also, each node has an expand/collapse button which can be used to chow/hide the underlying children. The Tree UI would take some sort of data structure that contains nodes/sub-nodes and convert each node to TreeNode2D and add all the processed node to the main Panel. So far this the result I have achieved:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt=&quot;https://i.imgur.com/WIMWsrp.png&quot; src=&quot;https://i.imgur.com/WIMWsrp.png&quot; style=&quot;width: 200px; height: 200px;&quot; /&gt;
&lt;img alt=&quot;https://i.imgur.com/u33D7Qi.png&quot; src=&quot;https://i.imgur.com/u33D7Qi.png&quot; style=&quot;width: 200px; height: 200px;&quot; /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/446&quot;&gt;Resize Panel2D on window resizing&lt;/a&gt; : This PR adds support for resizing Panel2D on WindowResizeEvent. This means that the Panle2D resizes itself with respect to the changed window size. It also retains its maximum possible size and does not overflow. Also, this PR adds support for resizing the Panel2D for the bottom right corner. A placeholder button is placed at the bottom right corner of the Panel2D and when it is dragged by the placeholder the Panel2D resize accordingly. Below is an example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt=&quot;https://i.imgur.com/87PN7TQ.gif&quot; src=&quot;https://i.imgur.com/87PN7TQ.gif&quot; style=&quot;width: 200px; height: 200px;&quot; /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also, I did some testing of GridLayout when placed inside a resizable Panel2D. This will need to be worked on before advancing any further. Currently the elements present in the Panel2D do not resize properly w.r.t the changed panel size. Hopefully, this will be fixed in the future PRs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, I did not get stuck this week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;The tasks for the next week will be decided in this weeks meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #3: Adapting GridLayout to work with UI</title>
    <id>https://fury.gl/posts/2021/2021-06-21-week-3-antriksh.html</id>
    <updated>2021-06-21T00:00:00Z</updated>
    <published>2021-06-21T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-06-21-week-3-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-3-adapting-gridlayout-to-work-with-ui&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week my tasks revolved around layout and UI elements. The primary goal for this week was to adapt the GridLayout to work with different UI elements. Currently, GridLayout just supports vtk actors and not UI elements, my task was to modify the class to support UI elements. The other tasks for this week are described below in detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443&quot;&gt;Adapt GridLayout to support UI elements&lt;/a&gt; : This was the main task for the week and the aim for this was to actually modify GridLayout to support UI elements. This was not possible before because GridLayout only supported vtk actors (because of certain methods only being provided by vtk actors). I modified the main class itself along with some utility functions. The problem that I faced during this was circular imports. Currently, the structure of FURY doesn’t allow certain modules to be imported into other modules because of circular imports. A way to get around this was to actually import the modules inside the methods but this is not ideal always. This will be fixed in the future PRs where the UI module will be redesigned. I also added support for grid position offsetting, which basically means that the position of the UI elements that are placed in the Grid can be offset by a global offset passed in the constructor of GridLayout class. Below is an example showing the current state of GridLayout with different UI elements. I also created a brief example to demonstrate how to use GridLayout of different cellshapes with UI elements link to which is &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443/files#diff-853d17c3134e7d22de88523bb787dc05d52ec798dc2111aa0419dfd5d634350a&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;img alt=&quot;https://i.imgur.com/EX2cN1i.png&quot; src=&quot;https://i.imgur.com/EX2cN1i.png&quot; style=&quot;width: 200px; height: 200px;&quot; /&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/294&quot;&gt;Reviewed the FileDialog2D PR&lt;/a&gt; : This PR added support for FileDialog2D in the UI module. The PR needed to be reviewed in order to merge it as soon as other required PRs were merged. One of the mentors already reviewed the PR briefly my job was to review the PR for any remaining bugs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/422&quot;&gt;Study #422 PR to understand contours around the drawn markers&lt;/a&gt; : In my previous week’s tasks I created a PR to add support for borders in Panel2D. The borders were individually customizable just like in CSS which meant 4 Rectangle2D objects were needed to represent border in each direction. This is not ideal for a scenario where a lot of Panel2D are present in the scene as it can be performance taxing. A possible solution for this was to actually look how this was implemented in the #422. This PR allowed drawing millions of markers in one call that too from the GPU. Interestingly, each marker had a contour surrounding it which is exactly what we needed for Panel2D. This is something that can be considered in the future for border implementation in other complex UI elements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also continued my work on the watcher class that I mentioned in the previous week’s blog. The work for this is almost done and just needs some tests implemented, which should be done soon.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, I did not get stuck this week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Next week I would probably continue to work on GridLayout and possibly other layouts as well, other tasks will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #2: Feature additions in UI and IO modules</title>
    <id>https://fury.gl/posts/2021/2021-06-13-week-2-antriksh.html</id>
    <updated>2021-06-13T00:00:00Z</updated>
    <published>2021-06-13T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-06-13-week-2-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-2-feature-additions-in-ui-and-io-modules&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had to work on 3 PRs as well as some documentation. I really enjoyed this week’s work as the tasks were really interesting. The aim for these PRs were to actually add a couple of features in the UI as well as the IO module, which includes, adding support for border in Panel2D, adding support for network/URL images in load_image method in IO module, adding resizing Panel2D from bottom right corner, completing the document with layout solutions provided by Unity/Unreal engine. Below are the PRs that I worked on:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/440&quot;&gt;Added support for URL image in load_image&lt;/a&gt; : The load_image of IO module didn’t support network /URL images, so I made this PR to add support for the same.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/441&quot;&gt;Added support for border in Panel2D&lt;/a&gt; : This PR was made in association with the Card2D PR. This PR adds support for border in Panel2D. The borders are individually customizable just like in CSS. This PR needs a little tweaking in terms of getters/setters. The same support needs to be added in Rectangle2D.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://docs.google.com/document/d/1zo981_cyXZUgMDA9QdkVQKAHTuMmKaixDRudkQi4zlc/edit?usp=sharing&quot;&gt;Complete the document with layout solutions provided by Unity/Unreal engine&lt;/a&gt; : Completed the document with layout solutions provided by Unity/Unreal Engine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Behind the scenes I also worked on a Watcher class for the UI elements. The purpose of the watcher would be to monitor the UI elements for any changes after they have been added to the scene. A PR should be up by 2-3 days.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I had a minor issue with the tests for the &lt;strong&gt;IO&lt;/strong&gt; module. When running the tests for IO module using &lt;strong&gt;pytest 5.0.0&lt;/strong&gt; resulted in Window fatal error, this was a sideeffect of pytest 5.0.0 wherein support for &lt;strong&gt;faulthandler&lt;/strong&gt; was added. This error was suppressed by using certain flags while running the tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Next week I would probably work on adapting the &lt;strong&gt;GridLayout&lt;/strong&gt; with UI elements, some other tasks that will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/author/antriksh-misri/atom.xml">
    <title type="text">Week #1: Welcome to my weekly Blogs!</title>
    <id>https://fury.gl/posts/2021/2021-06-08-week-1-antriksh.html</id>
    <updated>2021-06-08T00:00:00Z</updated>
    <published>2021-06-08T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-06-08-week-1-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-1-welcome-to-my-weekly-blogs&quot;&gt;

&lt;p&gt;Hi everyone! I am &lt;strong&gt;Antriksh Misri&lt;/strong&gt;. I am a Pre-Final year student at MIT Pune. This summer, I will be working on &lt;strong&gt;Layout Management&lt;/strong&gt; under FURY’s &lt;a class=&quot;reference external&quot; href=&quot;https://fury.gl/latest/reference/fury.ui.html&quot;&gt;UI&lt;/a&gt; module as my primary goal. This includes addition of different classes under Layout Management to provide different layouts/arrangements in which the UI elements can be arranged. As my stretch goals, I will be working on a couple of UI components for FURY’s UI module. These 2D and 3D components will be sci-fi like as seen in the movie “&lt;strong&gt;Guardians of The Galaxy&lt;/strong&gt;”. My objective for the stretch goals would be to develop these UI components with their respective test and tutorials such that it adds on to the UI module of FURY and doesn’t hinder existing functionalities/performance.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;During the community bonding period I got to know the mentors as well as other participants. We had an introductory meeting, in which the rules and code of conduct was explained. Also, my proposal was reviewed and modified slightly. Initially, I had to develop UI elements as my primary goal and I had to work on layout management as my stretch goals but the tasks were switched. Now I have to work on Layout Management as my primary task and develop UI in the stretch goals period. I also started coding before hand to actually make use of this free period. I worked on different PR’s which are described below:-&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/434&quot;&gt;Added tests for Layout module&lt;/a&gt; : The layout module of FURY didn’t had any tests implemented, so I made this PR to add tests for &lt;strong&gt;Layout&lt;/strong&gt; &amp;amp; &lt;strong&gt;GridLayout&lt;/strong&gt; class.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://docs.google.com/document/d/1zo981_cyXZUgMDA9QdkVQKAHTuMmKaixDRudkQi4zlc/edit&quot;&gt;Complied available classes for Layout Management in different libraries&lt;/a&gt; : In order to decide the behavior and functionality of Layout Management in FURY, I made a document that has all classes available in different libraries to manage layout of UI elements. This document also contains code snippets for these classes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/antrikshmisri/fury/tree/panel-resize&quot;&gt;Resize Panel2D UI on WindowResizeEvent&lt;/a&gt; : Currently, the &lt;strong&gt;Panel2D&lt;/strong&gt; UI is not responsive to window resizing which means its size is static. In this branch I implemented this feature.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I got stuck at Panel resizing feature. I couldn’t figure out how to propagate the window invoked events to a specific actor. Fortunately, the mentors helped me to solve this problem by using &lt;strong&gt;partial&lt;/strong&gt; from &lt;strong&gt;functools&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;The next tasks will be decided in this week’s open meeting with the mentors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
