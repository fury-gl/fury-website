<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts in gsoc</title>
  <updated>2024-08-28T05:09:19.476471+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/category/gsoc/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.10">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-21-final-report-robin.html</id>
    <title>Google Summer of Code Final Work Product</title>
    <updated>2024-08-21T00:00:00+00:00</updated>
    <author>
      <name>Robin Roy</name>
    </author>
    <content type="html">&lt;a class="reference external image-reference" href="https://summerofcode.withgoogle.com/programs/2023/projects/ED0203De"&gt;&lt;img alt="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" src="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" style="height: 40px;" /&gt;
&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://summerofcode.withgoogle.com/programs/2023/organizations/python-software-foundation"&gt;&lt;img alt="https://www.python.org/static/img/python-logo&amp;#64;2x.png" src="https://www.python.org/static/img/python-logo&amp;#64;2x.png" style="height: 40px;" /&gt;
&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://fury.gl/latest/index.html"&gt;&lt;img alt="https://python-gsoc.org/logos/fury_logo.png" src="https://python-gsoc.org/logos/fury_logo.png" style="width: 40px;" /&gt;
&lt;/a&gt;
&lt;section id="google-summer-of-code-final-work-product"&gt;

&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organization:&lt;/strong&gt; &lt;a class="reference external" href="https://www.python.org/psf-landing/"&gt;Python Software Foundation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organization:&lt;/strong&gt; &lt;a class="reference external" href="https://fury.gl/latest/index.html"&gt;FURY&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2024-(GSOC2024)#project-2-improving-community-engagement-ai-communication-automation-using-llm"&gt;Improving Community Engagement: AI communication automation using LLM&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;The goal of this project was to implement a &lt;a class="reference external" href="https://developers.google.com/machine-learning/resources/intro-llms"&gt;Large Language Model (LLM)&lt;/a&gt; chatbot that understands the FURY repository. The purpose of the project is to reduce the barrier of entry to scientific visualization. &lt;a class="reference external" href="https://www.pinecone.io/learn/retrieval-augmented-generation/"&gt;Retrieval Augmented Generation (RAG)&lt;/a&gt; was used to get the necessary context for every user query. Multiple variations were explored, including Fine-Tuning models, mixing Fine-Tuning and RAG and RAG alone. Multiple &lt;a class="reference external" href="https://github.com/FullStackRetrieval-com/RetrievalTutorials/blob/main/tutorials/LevelsOfTextSplitting/5_Levels_Of_Text_Splitting.ipynb"&gt;chunking strategies&lt;/a&gt; were also explored for data collection and storage. The models are served to the user through a Discord Bot and a GitHub App. All the API endpoints are hosted using &lt;a class="reference external" href="https://huggingface.co/robinroy03"&gt;HuggingFace Spaces&lt;/a&gt;. &lt;a class="reference external" href="https://www.pinecone.io/"&gt;Pinecone&lt;/a&gt; was used as the database for storing embeddings. Benchmarking, data collection, and testing were done on &lt;a class="reference external" href="https://github.com/robinroy03/FURY-data-script"&gt;another repository&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="proposed-objectives"&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;p&gt;The objectives of the GSoC project could be broadly classified as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;Figuring out hosting.&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;We were constrained by the need to minimize hosting costs. We managed to complete the whole project with 100% free hosting. Work here included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Experiments with &lt;a class="reference external" href="https://colab.research.google.com/"&gt;Google Colab&lt;/a&gt; notebook hosting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments with &lt;a class="reference external" href="https://www.kaggle.com/"&gt;Kaggle&lt;/a&gt; notebook hosting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments with &lt;a class="reference external" href="https://huggingface.co/"&gt;HuggingFace&lt;/a&gt; spaces hosting.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;Choosing the technologies to use.&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Work here included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Experiments with local &lt;a class="reference external" href="https://vickiboykis.com/2024/02/28/gguf-the-long-way-around/"&gt;GGUF (GPT-Generated Unified Format)&lt;/a&gt; models.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments with different quantizations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments with &lt;a class="reference external" href="https://ollama.com/"&gt;Ollama&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments with &lt;a class="reference external" href="https://github.com/ggerganov/llama.cpp"&gt;LlamaCPP.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments with &lt;a class="reference external" href="https://groq.com/"&gt;Groq&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments with &lt;a class="reference external" href="gemini.google.com"&gt;Google Gemini&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;Work on the backend architecture.&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Backend architecture was heavily influenced by HuggingFace and its limitations. Work here included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Choosing the API architecture.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integrating different models.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improving concurrent requests support.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improving the UX of the endpoints.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;Work on improving model accuracy.&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This was a recurring work and kept happening on most weeks. It included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Model Benchmarking&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Collection&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments on Retrieval Augmented Generation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments on Fine-Tuning.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments on Chunking.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Experiments on Retrieval quantity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;Discord Bot integration.&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;The work included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Building the Discord Bot.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improving the UX of the bot.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improving the performance of the bot.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;GitHub App integration.&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;The work included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Building the GitHub App integration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improving the UX of the integration.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-completed"&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Figuring out hosting.&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;As mentioned, we had a constraint on the cost. We explored different options for free hosting. This took us to explore interesting directions like Google Colab and Kaggle Notebooks. In the end, HuggingFace was decided to be the best place. Everything is containerized and currently hosted on HuggingFace.&lt;/p&gt;
&lt;p&gt;This also meant that all the upcoming design/architectural choices would have to be based on HuggingFace. This will cause some challenges on the Discord bot hosting but overall HuggingFace was a solid choice.&lt;/p&gt;
&lt;p&gt;A very detailed blog on hosting is available &lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-05-28-week-0-robin.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The plan is to move all the HuggingFace repositories from my account to FURY’s account. But here, I’ll link to all my repositories which are currently active as I’m writing this report.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/fury-embeddings-endpoint/tree/main"&gt;Embeddings Endpoint&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This endpoint converts natural language to embeddings. The model is loaded using HuggingFace SentenceTransformer.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/ollama-server-backend/tree/main"&gt;Ollama Endpoint&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This endpoint could be used to communicate with the Ollama models. The perk of using this is it is more convenient and generally faster. A separate repository was required because a single free HuggingFace Space cannot allocate more than 16 GB RAM and 2vCPUs. Token generation speed will be hit if it’s not a separate repository.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/fury-db-endpoint/tree/main"&gt;Database Endpoint&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This endpoint was used to get the K-Nearest (or Approximate) embeddings based on cosine similarity. The parameter K could be passed to adjust it. We used Pinecone as the database.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/Fury-Discord-Bot/tree/main"&gt;FURY Discord Bot&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;The repository for the Discord bot. It was required to use threading here which is a side-effect of HuggingFace Spaces. HuggingFace server only activates once there is an active live endpoint. Discord did not need an endpoint, but we had to make one to get the server activated. The Discord bot ran on a separate thread while a server ran on the main thread.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/fury-bot/tree/main"&gt;FURY external cloud endpoints&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This repository orchestrated external APIs from 3rd party providers like Groq and Gemini. We made it a separate repo to abstract the logic and simplify calling different endpoints as required. You can hot-swap multiple LLM models by changing the REST API parameters.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/github-bot/tree/main"&gt;GitHub App&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Repository for the GitHub application. Receives webhooks from GitHub and acts upon them using GraphQL queries.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/fury-engine/tree/main"&gt;FURY Engine&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This is the main endpoint both Discord and GitHub frontend applications hit. It orchestrates all the other endpoints. The architecture of how it works is detailed later below.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/robinroy03/FURY-data-script"&gt;FURY Data Parsing/Benchmarking/Testing Repo (GitHub)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This is a GitHub repository and contains all the parsing, benchmarking and testing scripts.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Choosing the technologies to use&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Choosing the technology depended largely on HuggingFace hardware support. We experimented with inferencing LlamaCPP directly, inferencing Ollama, tested different quantizations and so on. Phi-3-mini-4k-instruct was chosen initially as the LLM. We rolled with it using Ollama for a few weeks. But as luck has it, I ended up discovering Groq is a cloud provider that provides free LLM endpoints. We used Groq from then on, and later also integrated Gemini since they also have a free tier.&lt;/p&gt;
&lt;p&gt;You can hot-swap between a local model, a Groq model, a Gemini normal model or a Gemini Fine-Tuned model as you wish using the FURY Engine endpoint. it’ll all integrate cleanly with the Pinecone database outputs and give a standard API response.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Work on the backend architecture&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This is the present backend architecture.&lt;/p&gt;
&lt;img alt="Present backend architecture" src="https://fury.gl/_images/gsoc_llm_robin_week5.jpg" /&gt;
&lt;p&gt;You’re only hitting the FURY Engine endpoint, the remaining are all abstracted away. You can tell the engine you need to use Gemini and it’ll do that for you. This is also expandable, if you have a new provider, you can add a new endpoint and connect it to FURY Engine.&lt;/p&gt;
&lt;p&gt;The data to the REST endpoint will look like this&lt;/p&gt;
&lt;div class="highlight-json notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;query&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Render a cube in fury&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;llm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;llama3-70b-8192&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;knn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;stream&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Every output response will look like this&lt;/p&gt;
&lt;div class="highlight-json notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;response&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Yes, this is how it would be done python import fury....&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;references&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1, 2, 3&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So if you do&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;curl -X POST https://robinroy03-fury-engine.hf.space/api/groq/generate -H “Content-Type: application/json” -d ‘{“query”: “How do I create a sphere in FURY?”, “llm”: “llama3-70b-8192”, “knn”: “3”, “stream”: false}’&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;You’ll get a response from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;llama3-70b-8192&lt;/span&gt;&lt;/code&gt; using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Groq&lt;/span&gt;&lt;/code&gt;. If you do &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;https://robinroy03-fury-engine.hf.space/api/google/generate&lt;/span&gt;&lt;/code&gt; you can call any Google Gemini models like &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gemini-1.5-pro&lt;/span&gt;&lt;/code&gt; or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gemini-1.5-flash&lt;/span&gt;&lt;/code&gt;. Same for &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Ollama&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A detailed blog on architecture is available &lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-01-week-5-robin.html"&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Work on improving model accuracy&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;The initial version had major issues of hallucination and was unable to retrieve relevant context. We fix them by collecting more data, improving RAG, setting up a benchmark and so on.&lt;/p&gt;
&lt;p&gt;The Initial version used a naive parser to parse code, later my mentors told me to use an AST parser. I chunked the entire repo using this and it performed relatively better. For model benchmarking, we had 2 tests, one QnA testing and one code testing. If the code compiles, the model gets one point.&lt;/p&gt;
&lt;p&gt;All the benchmarking, data parsing, and database upsertion scripts are &lt;a class="reference external" href="https://github.com/robinroy03/FURY-data-script"&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We used an image model called &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;moondream2&lt;/span&gt;&lt;/code&gt; to validate the output generated by the model. Since FURY is a graphics library, we need to judge the image to see whether it is correct or not.&lt;/p&gt;
&lt;p&gt;Fine-tuning was done on Google AI Studio. We Fine-Tuned using question/answer pairs from Discord and GitHub discussions. We later tried mixing RAG + Fine-Tuning. A detailed blog on Fine-Tuning is available &lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-27-week-8-robin.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A detailed blog on benchmarking is available &lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-01-week-5-robin.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A detailed blog on chunking is available &lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-16-week-2-robin.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Discord Bot integration&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This included building the Discord bot and connecting it with the backend API. As mentioned above, threading was used to get the bot running on the server. But this won’t affect any other part of the bot and it’ll work as usual.&lt;/p&gt;
&lt;p&gt;This is what the discord integration looks like:&lt;/p&gt;
&lt;img alt="Present Discord Bot UI." src="https://fury.gl/_images/gsoc_robin_discord.jpg" /&gt;
&lt;p&gt;The code runs! This is the output of the code:&lt;/p&gt;
&lt;img alt="Output of the code." src="https://fury.gl/_images/gsoc_robin_discord_demo.jpg" /&gt;
&lt;p&gt;Work was also done on improving the UX of the bot. There are 👍 and 👎 options available for the user to rate the answer. We’ll use those signals to improve the bot further. There are reference links at the bottom that lead to the exact places where the answers are sourced from. You can technically also use the Discord bot as a search engine if you want to.&lt;/p&gt;
&lt;p&gt;Initially, the bot had a sync over async problem. It was later fixed. Now multiple people can converse with the bot simultaneously.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;GitHub App integration&lt;/strong&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This included building the GitHub app and figuring out how to setup the UX for it. GitHub used GraphQL, but we didn’t use a separate GraphQL library for this. We used a custom setup to query GraphQL endpoints. For us who only work with 1 or 2 commands, it works well. The code is &lt;a class="reference external" href="https://huggingface.co/spaces/robinroy03/github-bot/tree/main"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GitHub App UI looks like this:&lt;/p&gt;
&lt;img alt="Present GitHub App UI." src="https://fury.gl/_images/robin_gsoc_github_ui.jpg" /&gt;
&lt;p&gt;It is similar to Discord because the results come from the same backend. Refer to the backend architecture above for reference.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="other-objectives"&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;Improving the LLM output&lt;/strong&gt; (ongoing)&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This will continue till I’m satisfied. It’s a never ending journey :) Much of this GSoC was setting up things and getting it all to work as one piece. There are tons of new ideas coming up every day to increase LLM accuracy. I’ll explore them and try interesting ones.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;Tests for all endpoints&lt;/strong&gt; (ongoing)&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;It’s important to have tests for all endpoints. Testing includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Check the endpoints with valid data to see the response. Validate the JSON format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the endpoints with incorrect schema and record the response.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test by adjusting parameters like KNN.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="simple"&gt;
&lt;dt&gt;&lt;strong&gt;X Bot&lt;/strong&gt; (Optional Goal, deferred for now)&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;I had a talk about this with my mentors. This can be done by plugging the LLM backend into an X bot frontend, but they suggested spending my time improving model accuracy rather than simply adding another frontend for the LLM application.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="other-open-source-tasks"&gt;
&lt;h2&gt;Other Open Source tasks&lt;/h2&gt;
&lt;p&gt;GSoC isn’t all about what I do with my project. It exists along with the 3 other cool projects my peers - &lt;a class="reference external" href="https://github.com/WassCodeur"&gt;Wachiou&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav&lt;/a&gt;   did. I learnt a lot through them reviewing my PRs and me reviewing their PRs. I attended all the weekly meetings of Wachiou to learn about his progress and to learn new stuff. He attended all my meetings too, which was awesome :)&lt;/p&gt;
&lt;dl class="simple"&gt;
&lt;dt&gt;Contributions to FURY apart from the ones directly part of GSoC:&lt;/dt&gt;&lt;dd&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/862"&gt;fury-gl/fury#862&lt;/a&gt; - Rendering videos on a cube&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/861"&gt;fury-gl/fury#861&lt;/a&gt; - docstring improvements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/891"&gt;fury-gl/fury#891&lt;/a&gt; - Codespell fix&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/893"&gt;fury-gl/fury#893&lt;/a&gt; - .gitignore modification&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/issues/924"&gt;fury-gl/fury#924&lt;/a&gt; - Raised issue&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Contributions to other repositories during this time, due to GSoC work:&lt;/dt&gt;&lt;dd&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/langchain-ai/langchain/issues/23515"&gt;langchain-ai/langchain#23515&lt;/a&gt; - Langchain issue raised&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/github/docs/issues/34258"&gt;github/docs#34258&lt;/a&gt; - GitHub issue raised&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/github/docs/pull/34259"&gt;github/docs#34259&lt;/a&gt; - PR for the raised GitHub issue&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/orgs/community/discussions/136436"&gt;orgs/community#136436&lt;/a&gt; - GitHub feature request&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;
&lt;section id="acknowledgement"&gt;
&lt;h2&gt;Acknowledgement&lt;/h2&gt;
&lt;p&gt;I am very thankful to my mentors &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/m-agour"&gt;Mohamed Abouagour&lt;/a&gt;. They were awesome and provided me with a comfortable environment to work in. Also got to thank &lt;a class="reference external" href="https://www.linkedin.com/in/3v3ryone"&gt;Beleswar Prasad Padhi&lt;/a&gt; who gave me a very good introduction to opensource. The good thing about open source is I can still work on this (and other FURY projects) till I’m satisfied. I’m excited to continue contributing to the open source community.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="timeline"&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class="table" id="id1"&gt;
&lt;caption&gt;&lt;span class="caption-text"&gt;GSoC 2024 Weekly Reports&lt;/span&gt;&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style="width: 13.0%" /&gt;
&lt;col style="width: 43.5%" /&gt;
&lt;col style="width: 43.5%" /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class="row-odd"&gt;&lt;th class="head"&gt;&lt;p&gt;Week&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Blog Post Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 0&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Community Bonding!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-05-28-week-0-robin.html"&gt;Blog 0&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 1&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;It officially begins…&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-06-week-1-robin.html"&gt;Blog 1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 2&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;The first iteration!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-16-week-2-robin.html"&gt;Blog 2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 3&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Data Data Data!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-16-week-3-robin.html"&gt;Blog 3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 4&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Pipeline Improvements and Taking The Bot Public!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-01-week-4-robin.html"&gt;Blog 4&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 5&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;LLM Benchmarking &amp;amp; Architecture Modifications&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-01-week-5-robin.html"&gt;Blog 5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 6&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;UI Improvements and RAG performance evaluation&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-27-week-6-robin.html"&gt;Blog 6&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 7&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Surviving final examinations&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-27-week-7-robin.html"&gt;Blog 7&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 8&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Gemini Finetuning&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-27-week-8-robin.html"&gt;Blog 8&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 9&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Hosting FineTuned Models&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-15-week-9-robin.html"&gt;Blog 9&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 10&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Learning GraphQL&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-16-week-10-robin.html"&gt;Blog 10&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 11&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Getting the App Live&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-17-week-11-robin.html"&gt;Blog 11&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 12&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Wrapping things up&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-20-week-12-robin.html"&gt;Blog 12&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-21-final-report-robin.html"/>
    <summary>Name: Robin Roy</summary>
    <category term="google" label="google"/>
    <published>2024-08-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-21-wachiou-final-report.html</id>
    <title>Google Summer of Code Final Work Product</title>
    <updated>2024-08-21T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;a class="reference external image-reference" href="https://summerofcode.withgoogle.com/programs/2023/projects/ED0203De"&gt;&lt;img alt="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" src="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" style="height: 40px;" /&gt;
&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://summerofcode.withgoogle.com/programs/2023/organizations/python-software-foundation"&gt;&lt;img alt="https://www.python.org/static/img/python-logo&amp;#64;2x.png" src="https://www.python.org/static/img/python-logo&amp;#64;2x.png" style="height: 40px;" /&gt;
&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://fury.gl/latest/index.html"&gt;&lt;img alt="https://python-gsoc.org/logos/fury_logo.png" src="https://python-gsoc.org/logos/fury_logo.png" style="width: 40px;" /&gt;
&lt;/a&gt;
&lt;section id="google-summer-of-code-final-work-product"&gt;

&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/WassCodeur"&gt;Wachiou BOURAIMA&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; &lt;a class="reference external" href="https://www.python.org/psf-landing/"&gt;Python Software Foundation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; &lt;a class="reference external" href="https://fury.gl/latest/index.html"&gt;FURY&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mentor:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2024-(GSOC2024)#project-1-modernize-fury-codebase"&gt;Modernization of Codebase FURY.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The Google Summer of Code (GSoC) 2024 was an enriching journey where I had the opportunity to work on modernizing the codebase of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt; project, an open-source Python library for scientific visualization and 3D rendering. My project focused on optimizing the performance, improving documentation, and enhancing the overall user experience.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This project focused on modernizing the FURY codebase through the implementation of key features aimed at improving performance, maintainability, and usability. The initial phase involved the introduction of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator, which enforces keyword-only arguments to ensure robust and future-proof API usage. Following this, the project moved to the implementation of lazy loading across various FURY modules, significantly optimizing the import process by deferring module loading until it is actually needed.
Additionally, considerable effort was directed towards addressing and resolving Sphinx documentation warnings caused by inconsistencies in the docstrings. The solution involved aligning the documentation with the “numpydoc” standard, ensuring smooth compilation and enhancing the clarity and comprehensiveness of the project’s documentation. These enhancements culminated in a more efficient, well-organized FURY library, offering an improved developer experience and a solid foundation for future developments.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="proposed-objectives"&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;p&gt;The primary objectives of my GSoC project were:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Implement &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Keyword-Only&lt;/span&gt;&lt;/code&gt; Arguments Decorator: Ensure backward compatibility by warning users when positional arguments are passed instead of keyword arguments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implement &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Lazy&lt;/span&gt; &lt;span class="pre"&gt;Loading&lt;/span&gt;&lt;/code&gt;: Introduce lazy loading to optimize module imports and reduce the memory footprint.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enhance Documentation: Address documentation warnings and improve the structure and clarity of the documentation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modernize Codebase: Refactor existing code to ensure compatibility with the latest Python standards and improve maintainability.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-completed"&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Implement &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; Decorator in FURY:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first phase of this project was to develop the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator. This decorator is designed to check that all arguments after the first are passed as named arguments, and to ensure that users respect this convention.
The decorator works by inspecting the signature of the decorated function using the inspect module’s signature function. It identifies function arguments that must be passed as named arguments (&lt;cite&gt;KEYWORD_ONLY_ARGS&lt;/cite&gt;) and positional arguments (&lt;cite&gt;POSITIONAL_ARGS&lt;/cite&gt;).
When a decorated function is called, the decorator compares the arguments supplied with those expected by the signature. If mandatory named arguments are missing, or if positional arguments are used where named arguments are expected, the decorator attempts to correct these errors by transforming the remaining positional arguments into named arguments.
In addition, the decorator issues a warning (&lt;cite&gt;UserWarning&lt;/cite&gt;) if the current version of FURY is within a certain range (&lt;cite&gt;from_version&lt;/cite&gt; to &lt;cite&gt;until_version&lt;/cite&gt;). This warning informs the user that the current function call method will no longer be supported in future versions of FURY. If the FURY version exceeds until_version, an error is raised to indicate that the calling method is obsolete.&lt;/p&gt;
&lt;p&gt;This decorator was applied to several key FURY modules, including &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;actors&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ui&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;animation&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;shares&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;data&lt;/span&gt;&lt;/code&gt;, and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;stream&lt;/span&gt;&lt;/code&gt;. This enhanced the robustness and maintainability of the code, minimizing potential errors due to incorrect use of arguments.&lt;/p&gt;
&lt;p&gt;code source: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/blob/master/fury/decorators.py"&gt;fury-gl/fury&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests&lt;/em&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Applied the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator to multiple modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;actors: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/898"&gt;fury-gl/fury#898&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;animation: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/899"&gt;fury-gl/fury#899&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/900"&gt;fury-gl/fury#900&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;shares: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/901"&gt;fury-gl/fury#901&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ui: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/902"&gt;fury-gl/fury#902&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;stream: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/909"&gt;fury-gl/fury#909&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initial implementation of the decorator: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/888"&gt;fury-gl/fury#888&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Implement Lazy loading in FURY&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-21-wachiou-final-report.rst&lt;/span&gt;, line 16)&lt;/p&gt;
&lt;p&gt;Enumerated list start value not ordinal-1: “2” (ordinal 2)&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Overview:
The implementation of lazy loading in FURY was a key enhancement aimed at optimizing performance by delaying the loading of modules until they are actually needed. This approach reduces startup time and memory usage by only loading modules when they are accessed.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Implementation of lazy loading: Lazy loading was applied to various FURY modules using the lazy_loader module. This technique ensures that modules are only loaded into memory when their functionalities are first accessed, rather than during the initial import of the package.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reading &lt;a class="reference external" href="https://scientific-python.org/specs/spec-0001/"&gt;SPEC1&lt;/a&gt;: To ensure best practices, I reviewed the &lt;a class="reference external" href="https://scientific-python.org/specs/spec-0001/"&gt;SPEC1&lt;/a&gt; document from Scientific Python. This document offered valuable insights and guidelines on implementing lazy loading effectively.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.py&lt;/span&gt;&lt;/code&gt; Files: The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.py&lt;/span&gt;&lt;/code&gt; files were modified to support lazy loading. By leveraging &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;lazy_loader&lt;/span&gt;&lt;/code&gt;, these files were configured to load modules only when accessed. This change helps in managing dependencies efficiently and improves the overall performance of the package.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Examples Implementation&lt;/em&gt;:&lt;/p&gt;
&lt;div class="literal-block-wrapper docutils container" id="id1"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;fury/__init__.py&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lazy_loader&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;lazy&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fury.pkg_info&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;__version__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pkg_commit_hash&lt;/span&gt;

&lt;span class="c1"&gt;# Configure lazy loading&lt;/span&gt;
&lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="fm"&gt;__dir__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__all__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach_stub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Append additional attributes&lt;/span&gt;
&lt;span class="n"&gt;__all__&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;__version__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;disable_warnings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;enable_warnings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;get_info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# other functions and classes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="literal-block-wrapper docutils container" id="id2"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;fury/__init__.pyi&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Type stub file for the fury package to support type-checking tools&lt;/span&gt;

&lt;span class="n"&gt;__all__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;actor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;actors&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;animation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;colormap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="c1"&gt;# ... (other modules)&lt;/span&gt;
   &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;actors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;colormap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="c1"&gt;# ... (other modules)&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ... code block&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Added Type Stubs (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.pyi&lt;/span&gt;&lt;/code&gt;):&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Type stubs (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.pyi&lt;/span&gt;&lt;/code&gt; files) were added to provide type &lt;cite&gt;hints&lt;/cite&gt; for the lazy loaded modules. This helps with type checking tools like &lt;cite&gt;mypy&lt;/cite&gt; and enhances the development experience by offering better autocompletion and documentation in code editors.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Improved Module Organization:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;dl class="simple"&gt;
&lt;dt&gt;The organization of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.py&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.pyi&lt;/span&gt;&lt;/code&gt; files was refined to better support lazy loading. This included restructuring imports and ensuring that module dependencies were managed efficiently.&lt;/dt&gt;&lt;dd&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Import Simplification: One significant change was simplifying how FURY is imported in example modules. Previously, the import statements were more complex, like from fury &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;import&lt;/span&gt; &lt;span class="pre"&gt;....&lt;/span&gt;&lt;/code&gt; To align with the lazy loading principles and reduce unnecessary overhead, I updated these statements to a more straightforward import fury This change ensures that only the necessary components are loaded when they are actually needed, improving performance.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;em&gt;Pull Requests&lt;/em&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/907"&gt;fury-gl/fury#907&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/919"&gt;fury-gl/fury#919&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Simpply imports in FURY’s examples: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/918"&gt;fury-gl/fury#918&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic" start="3"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Handling Sphinx Warnings and Footer Deformation Issues&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Addressing Sphinx Warnings:
During the third phase, significant focus was placed on resolving Sphinx warnings related to documentation inconsistencies. The core issue stemmed from a mismatch between the documentation conventions used in the docstrings and the configuration settings in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conf.py&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Problem Identification:&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mismatch between &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;napoleon&lt;/span&gt;&lt;/code&gt;: The docstrings in the modules followed the numpydoc convention, while the conf.py file was configured to use sphinx.ext.napoleon. This discrepancy caused Sphinx to struggle with parsing and generating documentation correctly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Solutions Explored:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Documentation Style Review: Examined the differences between &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;napoleon&lt;/span&gt;&lt;/code&gt; documentation styles to understand the root of the issues.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configuration Update vs. Docstring Conversion: Evaluated whether to update docstrings to match napoleon style or configure Sphinx to support numpydoc.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Decision and Implementation:&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configuration Update: Chose to update the Sphinx configuration to support the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt; style, aligning it with the existing docstrings. This adjustment resolved the conflicts and allowed Sphinx to compile the documentation without warnings.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Updated Configuration in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conf.py&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="literal-block-wrapper docutils container" id="id3"&gt;
&lt;div class="code-block-caption"&gt;&lt;span class="caption-text"&gt;conf.py&lt;/span&gt;&lt;/div&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;sphinx.ext.autodoc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;numpydoc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;sphinx.ext.autosummary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;sphinx.ext.githubpages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;sphinx.ext.intersphinx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic" start="2"&gt;
&lt;li&gt;&lt;p&gt;Investigating and Fixing the Footer Deformation Issue (&lt;a class="github reference external" href="https://github.com/fury-gl/fury/issues/874"&gt;fury-gl/fury#874&lt;/a&gt; (closed)):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Issue Identification: The footer on the FURY website deformed when hovering over elements due to size increases, which affected the padding of its container and the layout of subsequent elements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initial Approach: Bold Styling: Attempted to resolve the issue by making the elements bold on hover instead of changing font size. While this approach fixed the deformation, it did not meet the design requirements for the homepage footer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Final Fix: CSS Adjustments: Added properties to the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.class-columns&lt;/span&gt;&lt;/code&gt; in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;styles.css&lt;/span&gt;&lt;/code&gt; to better manage the footer style and prevent layout issues, ensuring that the design integrity was maintained.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Video Demonstrations:
Before Fixing the Footer Issue:&lt;/p&gt;
&lt;p&gt;Video demonstrating the footer deformation before the fix.&lt;/p&gt;
&lt;iframe src="https://github.com/user-attachments/assets/2f5d4021-b661-4be9-944f-7a2638376f2c" width="640" height="390" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;After Fixing the Footer Issue:&lt;/p&gt;
&lt;p&gt;Video showing the footer after applying the fix.&lt;/p&gt;
&lt;iframe src="https://github.com/user-attachments/assets/b0ec74df-827b-4280-b3e4-bf968b97a654" width="640" height="390" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-21-wachiou-final-report.rst&lt;/span&gt;, line 16)&lt;/p&gt;
&lt;p&gt;Enumerated list start value not ordinal-1: “2” (ordinal 2)&lt;/p&gt;
&lt;/aside&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-21-wachiou-final-report.rst&lt;/span&gt;, line 16)&lt;/p&gt;
&lt;p&gt;Enumerated list start value not ordinal-1: “3” (ordinal 3)&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;em&gt;Pull Requests&lt;/em&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Addressed Sphinx warnings and updated configuration: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/922"&gt;fury-gl/fury#922&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/915"&gt;fury-gl/fury#915&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fix typos in blog posts: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/911"&gt;fury-gl/fury#911&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix footer deformation issue: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/925"&gt;fury-gl/fury#925&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="other-objectives"&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Peer Review Contributions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Reviewed and provided feedback on PRs from other contributors to the FURY and DIPY projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Assisted in resolving issues and improving code quality in the PRs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Pull Requests&lt;/em&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/913"&gt;fury-gl/fury#913&lt;/a&gt; (merged)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-in-progress"&gt;
&lt;h2&gt;Objectives in Progress&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Enhancing Documentation:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Ongoing work to improve the documentation structure and content.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Addressing additional Sphinx warnings.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modernizing Codebase:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Refactoring existing code to align with the latest Python standards.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implementing best practices for code maintainability and readability.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Separating FURY’s codebase and website.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Community Engagement:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Engaging with the FURY community through discussions, feedback, and contributions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Participating in community events and meetings to share progress and gather insights.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="gsoc-weekly-blogs"&gt;
&lt;h2&gt;GSoC Weekly Blogs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;My blog posts can be found at &lt;a class="reference external" href="https://fury.gl/latest/blog/author/wachiou-bouraima.html"&gt;FURY website&lt;/a&gt; and &lt;a class="reference external" href="https://social.python-gsoc.org/&amp;#64;wasscodeur"&gt;Python GSoC Mastodon server&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="timeline"&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;colgroup&gt;
&lt;col style="width: 20.0%" /&gt;
&lt;col style="width: 60.0%" /&gt;
&lt;col style="width: 20.0%" /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class="row-odd"&gt;&lt;th class="head"&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Blog Post Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 0 (28-05-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;The beginning of my journey in Google Summer of Code&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-05-28-week0-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 1 (06-06-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Progress and challenges at Google Summer of Code&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-06-week1-wachiou-bouraima.html"&gt;Blog Post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 2 (15-06-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Refinements and Further Enhancements&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-15-week2-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 3 (19-06-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Refinements and Further Enhancements&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-26-week3-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 4 (26-06-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Updating Decorator, Exploring Lazy Loading, and Code Reviews&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-06-26-week4-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 5 (06-07-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Implementing Lazy Loading in FURY with lazy_loader&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-07-06-week5-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 6 (06-08-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Code reviews, relining and crush challenges&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-06-week6-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 7 (06-08-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Fixing Sphinx Warnings in Blog Posts&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-06-week7-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 8 (12-08-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Refining Lazy Loading Implementation and Simplifying Imports in FURY&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-12-week8-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 9 (13-08-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Fixing Sphinx Warnings and Investigating Web Footer Issues&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-13-week9-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 10 (15-08-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Investigating Footer Deformation and Limited Progress on Warnings&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-15-week10-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 11 (14-08-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Resolving the Footer Issue and Addressing Sphinx Warnings&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-15-week11-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 12 (17-08-2024)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;The final straight&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2024/2024-08-17-week12-wachiou-bouraima.html"&gt;Blog post&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-21-wachiou-final-report.html"/>
    <summary>Name: Wachiou BOURAIMA</summary>
    <category term="google" label="google"/>
    <published>2024-08-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-20-week-12-robin.html</id>
    <title>Week 12: Wrapping things up</title>
    <updated>2024-08-20T00:00:00+00:00</updated>
    <author>
      <name>Robin Roy</name>
    </author>
    <content type="html">&lt;section id="week-12-wrapping-things-up"&gt;

&lt;p&gt;Hi, I’m &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin&lt;/a&gt; and this is my blog about week 12.&lt;/p&gt;
&lt;p&gt;As the final official week, I spent my time wrapping things up and also improving the UX of the GitHub Application.&lt;/p&gt;
&lt;section id="things-i-did-in-week-12"&gt;
&lt;h2&gt;Things I did in Week 12&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Improving GitHub App UX&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Previously the bot responded to every discussion post. It was not a good approach and we tried stuff like &amp;#64;mentions. The problem is GitHub does not support bot mentions natively. Actually &lt;a class="reference external" href="https://github.com/skoudoro/"&gt;Serge&lt;/a&gt; had a better approach that is using Discussion Templates. I integrated that. Right now, you have a checkbox that you can tick to get the LLM answer as the first response.&lt;/p&gt;
&lt;p&gt;The new UI looks like this:&lt;/p&gt;
&lt;img alt="Present GitHub Discussions Template" src="https://fury.gl/_images/robin_gsoc_FURY_DISCUSSIONS_TEMPLATE.jpg" /&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-20-week-12-robin.rst&lt;/span&gt;, line 2)&lt;/p&gt;
&lt;p&gt;Enumerated list start value not ordinal-1: “2” (ordinal 2)&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Some of the API endpoints had no documentation, the documentation work is still ongoing. But I worked on adding basic info like how to test locally and stuff. It was added directly to the README.md files. I’ll also make a separate GitHub Gists where I’ll detail all the components and how they integrate with each other.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;API testing&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-20-week-12-robin.rst&lt;/span&gt;, line 2)&lt;/p&gt;
&lt;p&gt;Enumerated list start value not ordinal-1: “3” (ordinal 3)&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;I plan to have testing for every endpoint. Testing includes the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Check the endpoints with valid data to see the response. Validate the JSON format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the endpoints with incorrect schema and record the response.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test by adjusting parameters like KNN.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testing will be a separate file, it’ll be production testing. We’ll hit the live endpoints directly.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;I’m working on the final report. Also, I’m working on finishing testing, documentation and updating the LLM response. The plan is to use a Re-Ranker to rerank the KNN references and filter ones not in context.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I did not get stuck. I was having some health issues this week so was unable to make a lot of progress. But the general plan is prepared, and now I’ll have to compile everything.&lt;/p&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-20-week-12-robin.html"/>
    <summary>Hi, I’m Robin and this is my blog about week 12.</summary>
    <category term="google" label="google"/>
    <published>2024-08-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-17-week-11-robin.html</id>
    <title>Week 11: Getting the App Live</title>
    <updated>2024-08-17T00:00:00+00:00</updated>
    <author>
      <name>Robin Roy</name>
    </author>
    <content type="html">&lt;section id="week-11-getting-the-app-live"&gt;

&lt;p&gt;Hi, I’m &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin&lt;/a&gt; and this is my blog about week 11.&lt;/p&gt;
&lt;p&gt;This week I worked on Getting the GitHub App live.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Getting the App Live&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Last week I prototyped and got to know the language and the API. But I can’t use my account as an automated bot account. So it was required to make a GitHub App. The architecture for it is as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Make a GitHub App to listen to Discussion posts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Send a webhook to &lt;a class="reference external" href="https://robinroy03-github-bot.hf.space/github"&gt;https://robinroy03-github-bot.hf.space/github&lt;/a&gt; whenever any change happens.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Respond to the webhook as required.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was told by &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge&lt;/a&gt; to try and fit the endpoint inside the Discord Bot script. I tried but it was weird so I left it. The Discord Bot is set up using threading which is a hack (although it is how every discord bot is set up in HuggingFace). Placing it inside any other repository won’t be good so I ended up making another new repository.&lt;/p&gt;
&lt;p&gt;I faced an issue while trying to get the app live. I had another documentation rabbit hole situation. So what ended up happening was I was unable to authenticate myself with the GitHub app to send commands. To command an app you have to authenticate as a &lt;cite&gt;GitHub App Installation&lt;/cite&gt;. To authenticate as an App installation, you need 3 key things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Installation ID&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;App ID&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Private Key of the App&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You use the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;App&lt;/span&gt; &lt;span class="pre"&gt;ID&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Private&lt;/span&gt; &lt;span class="pre"&gt;Key&lt;/span&gt;&lt;/code&gt; to make a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;JWT&lt;/span&gt;&lt;/code&gt;. You use the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;JWT&lt;/span&gt;&lt;/code&gt; with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Installation&lt;/span&gt; &lt;span class="pre"&gt;ID&lt;/span&gt;&lt;/code&gt; to make an &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Installation&lt;/span&gt; &lt;span class="pre"&gt;Access&lt;/span&gt; &lt;span class="pre"&gt;Token&lt;/span&gt;&lt;/code&gt;. You’ll now use this &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Installation&lt;/span&gt; &lt;span class="pre"&gt;Access&lt;/span&gt; &lt;span class="pre"&gt;Token&lt;/span&gt;&lt;/code&gt; to authorize you and then send commands to the GitHub App. The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Access&lt;/span&gt; &lt;span class="pre"&gt;Token&lt;/span&gt;&lt;/code&gt; will expire after 1 hour, so we’ll have to regenerate it.&lt;/p&gt;
&lt;p&gt;The problem was that the documentation didn’t mention how to generate &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Installation&lt;/span&gt; &lt;span class="pre"&gt;Access&lt;/span&gt; &lt;span class="pre"&gt;Token&lt;/span&gt;&lt;/code&gt; and it kept confusing everyone with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Installation&lt;/span&gt; &lt;span class="pre"&gt;ID&lt;/span&gt;&lt;/code&gt;. Even the names were misleading, since it isn’t an &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Installation&lt;/span&gt; &lt;span class="pre"&gt;Token&lt;/span&gt;&lt;/code&gt; in the real sense cause it is already installed. I ended up fixing it by landing at &lt;a class="reference external" href="https://stackoverflow.com/questions/77325437/how-do-i-get-an-github-app-installation-token-to-authenticate-cloning-a-reposito"&gt;this StackOverflow Post&lt;/a&gt; which took me to this &lt;a class="reference external" href="https://github.com/orgs/community/discussions/48186"&gt;Discussions Post&lt;/a&gt;. I think the majority uses &lt;cite&gt;Octokit.js SDK&lt;/cite&gt; to generate Access Tokens and regenerate JWTs. Sadly Python has no library so we had to go all manual.&lt;/p&gt;
&lt;p&gt;So I ended up sending a PR to GitHub Docs :)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Issue: &lt;a class="github reference external" href="https://github.com/github/docs/issues/34258"&gt;github/docs#34258&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PR: &lt;a class="github reference external" href="https://github.com/github/docs/pull/34259"&gt;github/docs#34259&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can test the GitHub App today! Checkout &lt;a class="github reference external" href="https://github.com/robinroy03/FURY-data-script/discussions"&gt;robinroy03/FURY-data-script#discussions&lt;/a&gt;&lt;/p&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Week 12 :) I’ll be finalizing stuff.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make the GitHub App respond to mentions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Was stuck with the documentation but got it fixed.&lt;/p&gt;
&lt;p&gt;LINKS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/77325437/how-do-i-get-an-github-app-installation-token-to-authenticate-cloning-a-reposito"&gt;StackOverflow Post&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-17-week-11-robin.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “discussions post”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/orgs/community/discussions/48186"&gt;Discussions Post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/github/docs/issues/34258"&gt;github/docs#34258&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="github reference external" href="https://github.com/github/docs/pull/34259"&gt;github/docs#34259&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-17-week-11-robin.html"/>
    <summary>Hi, I’m Robin and this is my blog about week 11.</summary>
    <category term="google" label="google"/>
    <published>2024-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-17-week12-wachiou-bouraima.html</id>
    <title>WEEK 12: The final straight</title>
    <updated>2024-08-17T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-12-the-final-straight"&gt;

&lt;p&gt;Hello👋🏾
I’m &lt;a class="reference external" href="https://github.com/WassCodeur"&gt;Wachiou BOURAIMA&lt;/a&gt;,
All good things must come to an end, and it’s with a mixture of satisfaction and nostalgia that I end this final week of my GSoC 2024 mission.  It’s been an incredible journey, and I can’t wait to share the progress I’ve made in my final week.&lt;/p&gt;
&lt;section id="addressing-sphinx-warnings"&gt;
&lt;h2&gt;Addressing Sphinx Warnings&lt;/h2&gt;
&lt;p&gt;In my final week, I focused on addressing the remaining Sphinx warnings related to the documentation. The primary challenge was understanding and resolving issues that arose from the documentation format.
The core issue stemmed from a conflict between the documentation conventions used. Specifically, the docstrings in our modules followed the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt; convention, while our &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conf.py&lt;/span&gt;&lt;/code&gt; file was set up for &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;sphinx.ext.napoleon&lt;/span&gt;&lt;/code&gt;. Since these two conventions have different structures and expectations, Sphinx struggled to compile the docstrings correctly, leading to numerous warnings.&lt;/p&gt;
&lt;p&gt;Here’s a snippet of the configuration in our &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conf.py&lt;/span&gt;&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;sphinx.ext.autodoc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;sphinx.ext.autosummary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;sphinx.ext.githubpages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;sphinx.ext.intersphinx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;sphinx.ext.napoleon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="to-address-this"&gt;
&lt;h2&gt;To address this:&lt;/h2&gt;
&lt;p&gt;1- Identified the Problem:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Discovered that the mismatch between the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt; style and the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;napoleon&lt;/span&gt;&lt;/code&gt; extension caused Sphinx to fail in parsing and generating documentation properly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2- Explored Solutions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;I reviewed the documentation styles and configurations to understand the differences between &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;napoleon&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Evaluated whether to convert the docstrings to match the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;napoleon&lt;/span&gt;&lt;/code&gt; style or update the configuration to align with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3- Decided on a Path Forward:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;After careful consideration, I chose to update the configuration to support the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpydoc&lt;/span&gt;&lt;/code&gt; style, as it was more consistent with our existing docstrings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By making this change, I was able to resolve the conflicts and successfully compile the documentation without warnings.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here’s a snippet of the updated configuration in our &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conf.py&lt;/span&gt;&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;sphinx.ext.autodoc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;numppydoc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;sphinx.ext.autosummary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;sphinx.ext.githubpages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;sphinx.ext.intersphinx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck"&gt;
&lt;h2&gt;Did I get stuck?&lt;/h2&gt;
&lt;p&gt;No, I didn’t get stuck. I was able to solve the problems by carefully analyzing them and choosing the most appropriate solution with the help of my mentor &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt;. This experience further enhanced my troubleshooting skills and deepened my understanding of documentation conventions.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="acknowledgements"&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;I’d like to sincerely thank my mentor, &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt;, my peers: &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo Tellaetxe Elorriaga&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka&lt;/a&gt;  and the entire &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt; team and community for their support and advice throughout this adventure. Your help has been essential to the success of this project.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="looking-ahead"&gt;
&lt;h2&gt;Looking Ahead&lt;/h2&gt;
&lt;p&gt;As &lt;cite&gt;GSoC 2024&lt;/cite&gt; comes to an end, I’m filled with gratitude for this incredible learning experience. While my official time in &lt;cite&gt;GSoC&lt;/cite&gt; is concluding, my journey with open source and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt; is far from over. I look forward to continuing to contribute and grow alongside the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt; community.
Thank you for following along with my &lt;cite&gt;GSoC&lt;/cite&gt; journey.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="links"&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/922"&gt;PR #922&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.sphinx-doc.org/"&gt;Sphinx&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://numpydoc.readthedocs.io/en/latest/"&gt;numpydoc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://sphinxcontrib-napoleon.readthedocs.io/en/latest/"&gt;napoleon&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/WassCodeur"&gt;Wachiou BOURAIMA&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stay tuned for more updates as I continue to explore the world of open source software!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-17-week12-wachiou-bouraima.html"/>
    <summary>Hello👋🏾
I’m Wachiou BOURAIMA,
All good things must come to an end, and it’s with a mixture of satisfaction and nostalgia that I end this final week of my GSoC 2024 mission.  It’s been an incredible journey, and I can’t wait to share the progress I’ve made in my final week.</summary>
    <category term="google" label="google"/>
    <published>2024-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-16-week-10-robin.html</id>
    <title>Week 10: Learning GraphQL</title>
    <updated>2024-08-16T00:00:00+00:00</updated>
    <author>
      <name>Robin Roy</name>
    </author>
    <content type="html">&lt;section id="week-10-learning-graphql"&gt;

&lt;p&gt;Hi, I’m &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin&lt;/a&gt; and this is my blog about week 10.&lt;/p&gt;
&lt;p&gt;This week I worked on the GitHub GraphQL implementation. I tested out things and was learning GraphQL properly since I have never used it before.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Learning and testing GraphQL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I spent time learning and implementing prototypes of the GitHub app. Initially, I tested using &lt;a class="reference external" href="https://docs.github.com/en/graphql/overview/explorer"&gt;GitHub Explorer&lt;/a&gt; to control my account. I initially spent some time searching for other GitHub libraries but later gave up and made my custom scripts. There are no Python GraphQL libraries available, and the ones available do not integrate with Discussion tabs.&lt;/p&gt;
&lt;p&gt;I used Explorer to mainly focus only on the query language, and not on implementation. The plan was to use a GitHub app to send webhooks to the HuggingFace server, which will respond to it.&lt;/p&gt;
&lt;p&gt;We use &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;query&lt;/span&gt;&lt;/code&gt; to fetch discussions and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;mutation&lt;/span&gt;&lt;/code&gt; to send a reply. They are GraphQL operations.&lt;/p&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Working GitHub App&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I did not get stuck anywhere. I was learning new things and experimenting with stuff.&lt;/p&gt;
&lt;p&gt;LINKS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-16-week-10-robin.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “github explorer”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.github.com/en/graphql/overview/explorer"&gt;GitHub Explorer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-16-week-10-robin.html"/>
    <summary>Hi, I’m Robin and this is my blog about week 10.</summary>
    <category term="google" label="google"/>
    <published>2024-08-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-15-week-9-robin.html</id>
    <title>Week 9: Hosting FineTuned Models</title>
    <updated>2024-08-15T00:00:00+00:00</updated>
    <author>
      <name>Robin Roy</name>
    </author>
    <content type="html">&lt;section id="week-9-hosting-finetuned-models"&gt;

&lt;p&gt;Hi, I’m &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin&lt;/a&gt; and this is my blog about week 9.&lt;/p&gt;
&lt;p&gt;This week I worked on hosting the Finetuned model as an API and started work on GitHub GraphQL.&lt;/p&gt;
&lt;section id="things-i-did-in-week-9"&gt;
&lt;h2&gt;Things I did in Week 9&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hosting the fine-tuned API&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Last week we fine-tuned the Gemini model, but it didn’t have an endpoint which we could use to connect with Discord/other frontend applications. I thought it would be a simple task until I realized it wasn’t. Some features are still in beta phase, like this one :)&lt;/p&gt;
&lt;p&gt;Fine-tuned models need more permissions to be used under an API, cause it is your data (as per Google policy). Google Gemini API provides only 1 way to achieve this right now, and that is by using a short-lived token. Short-lived tokens can’t be used on a server cause we’ll have to rotate it, and to rotate them I’ll need to sign in to my Google account every time, and I can’t program it.&lt;/p&gt;
&lt;p&gt;The way we generally solve this is by using a token with no expiry - but the Gemini API does not support that. I tried making service accounts to bypass expiry but it was all failing. The documentation does not mention anywhere how to fix this issue either.&lt;/p&gt;
&lt;p&gt;After a lot of googling, I ended up checking the &lt;a class="reference external" href="https://github.com/google-gemini/cookbook/"&gt;Google Gemini Cookbook repo&lt;/a&gt;, here we have a notebook which talks about this problem! I was so happy seeing &lt;a class="reference external" href="https://github.com/google-gemini/cookbook/blob/main/quickstarts/Authentication_with_OAuth.ipynb"&gt;this Authentication_with_OAuth.ipynb file&lt;/a&gt;. The solution is to essentially add permission to the fine-tuned model through a REST call. There is no UI/SDK way to do this. You’ll have to trigger a certain REST endpoint to update the permissions to “EVERYONE” so anyone can access the fine-tuned model. For FURY it’s fine since FURY does not contain any sensitive information.&lt;/p&gt;
&lt;dl class="simple"&gt;
&lt;dt&gt;So right now our workflow is as follows:&lt;/dt&gt;&lt;dd&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Fine-tune a model on Google AI Studio.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update model permissions using a separate script.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Call through the FURY-Engine API as usual.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GraphQL work&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-15-week-9-robin.rst&lt;/span&gt;, line 2)&lt;/p&gt;
&lt;p&gt;Enumerated list start value not ordinal-1: “2” (ordinal 2)&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;The next thing I did was start working on GitHub integration. The Discord Bot is hosted and stable, now it was time to do the same with GitHub. For GitHub, the aim is to use the LLM to give a first response to discussions posts. GitHub uses GraphQL instead of REST APIs.&lt;/p&gt;
&lt;p&gt;If you do not know GraphQL you can learn about it in detail from &lt;a class="reference external" href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9gUxtblNUahcsg0WLxmrK_y"&gt;this YouTube playlist&lt;/a&gt; and later from the &lt;a class="reference external" href="https://graphql.org/"&gt;official docs&lt;/a&gt;. But I’ll give you a quick explanation anyway since I think the playlist and docs miss this part:&lt;/p&gt;
&lt;p&gt;GraphQL is essentially HTTP POST/GET calls. We’ll avoid all the jargon here and talk from first principles. REST API philosophy is to provide multiple endpoints &lt;cite&gt;/google&lt;/cite&gt;, &lt;cite&gt;/groq&lt;/cite&gt;, etc (these are FURY-engine endpoints). They do different things. Now these are just styles, remember that. At the end of the day you’re still sending network packets to the server, these just dictate which URL you send it to and what data it contains.&lt;/p&gt;
&lt;p&gt;GraphQL is different in the sense it does not have multiple endpoints. There’s only one endpoint (example: &lt;a class="reference external" href="https://api.github.com/graphql"&gt;https://api.github.com/graphql&lt;/a&gt; for GitHub). We send all our requests to this endpoint and then the server uses it to do an action and return results. So you may ask “Why” do we need to follow the GraphQL syntax, why not just modify REST API to follow our custom style? You can do that. GraphQL is just a style of doing things that smart people at Meta decided to standardize.&lt;/p&gt;
&lt;p&gt;The reason people use GraphQL is because it reduces the number of queries required. You can read the docs to see example GraphQL queries, it is compact and you can easily get a lot of information with one single call. Different people have different opinions about how to make and consume APIs. But fundamentally it’s just another layer of abstraction.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Work on GitHub App.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I was stuck with the Gemini API part but it was fixed. It was also a learning experience to not trust documentation always :)&lt;/p&gt;
&lt;p&gt;LINKS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-15-week-9-robin.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “google gemini cookbook repo”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/google-gemini/cookbook/"&gt;Google Gemini Cookbook repo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/google-gemini/cookbook/blob/main/quickstarts/Authentication_with_OAuth.ipynb"&gt;Authentication_with_OAuth.ipynb file&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9gUxtblNUahcsg0WLxmrK_y"&gt;GraphQL YouTube playlist&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://graphql.org/"&gt;GraphQL official docs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-15-week-9-robin.html"/>
    <summary>Hi, I’m Robin and this is my blog about week 9.</summary>
    <category term="google" label="google"/>
    <published>2024-08-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-15-week11-wachiou-bouraima.html</id>
    <title>WEEK 11: Resolving the Footer Issue and Addressing Sphinx Warnings</title>
    <updated>2024-08-15T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-11-resolving-the-footer-issue-and-addressing-sphinx-warnings"&gt;

&lt;p&gt;Hello everyone,
welcome to the update for Week 11 of my Google Summer of Code (GSoC) 2024 journey. This week, I focused on finalizing the footer issue on the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt; website and tackling some Sphinx warnings related to attribute and property naming conflicts. Here’s a detailed look at what I accomplished and the challenges faced.&lt;/p&gt;
&lt;section id="fixing-the-footer-issue"&gt;
&lt;h2&gt;Fixing the Footer Issue&lt;/h2&gt;
&lt;p&gt;In the previous week, I identified the root cause of the footer deformation. The problem arose when hovering over elements, which caused their size to increase, thereby affecting the padding of their container and subsequently the entire footer layout.
To illustrate the issue and the resolution, I have included the following videos:&lt;/p&gt;
&lt;p&gt;Before Fixing the Footer Issue:
Video demonstrating the footer deformation before the fix.&lt;/p&gt;
&lt;iframe src="https://github.com/user-attachments/assets/2f5d4021-b661-4be9-944f-7a2638376f2c" width="640" height="390" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;After Fixing the Footer Issue:
Video showing the footer after applying the fix.&lt;/p&gt;
&lt;iframe src="https://github.com/user-attachments/assets/b0ec74df-827b-4280-b3e4-bf968b97a654" width="640" height="390" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;To address this, I experimented with different approaches. Initially, I tried adjusting the &lt;cite&gt;font-size&lt;/cite&gt; of the elements on hover by making them bold instead. This resolved the deformation issue but did not align with the design specifications of the homepage footer.
After reconsidering, I added some properties to the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.class-columns&lt;/span&gt;&lt;/code&gt; in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;styles.css&lt;/span&gt;&lt;/code&gt; file to better adapt the footer style and prevent any layout issues. This approach aimed to maintain the design integrity while addressing the layout problem effectively.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="handling-sphinx-warnings"&gt;
&lt;h2&gt;Handling Sphinx Warnings&lt;/h2&gt;
&lt;p&gt;In addition to fixing the footer, I worked on resolving warnings caused by Sphinx due to naming conflicts between attributes and properties. To mitigate these warnings, I initially added &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;:no-index:&lt;/span&gt;&lt;/code&gt; directives in the .rst files for functions and classes to prevent indexing issues.
However, during our weekly meeting with my mentor &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt;, it became clear that this solution might hinder the indexing and referencing of functions, modules, and classes on the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt; site and the web. Therefore, I need to re-evaluate the issue and find a more suitable solution that ensures proper indexing while addressing the warnings.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I Get Stuck Anywhere ?&lt;/h2&gt;
&lt;p&gt;While addressing the Sphinx warnings, I encountered some challenges related to the naming conflicts between attributes and properties. The warnings were triggered by the use of the same name for both an attribute and a property in the codebase. This conflict led to Sphinx warnings, which I am currently working to resolve. The complexity of this issue requires a more in-depth analysis to develop an appropriate solution that aligns with the project’s requirements and Sphinx guidelines.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="acknowledgements"&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-08-15-week11-wachiou-bouraima.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “serge koudoro”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;I am deeply grateful to my peers &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo Tellaetxe Elorriaga&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka&lt;/a&gt;  for their continuous support and insightful suggestions. Special thanks to my mentor, &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt; , whose expertise and guidance have been invaluable in navigating these technical challenges.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="whats-next"&gt;
&lt;h2&gt;What’s Next ?&lt;/h2&gt;
&lt;p&gt;For the upcoming week, I plan to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Delve deeper into the Sphinx warnings related to attribute and property naming conflicts to develop a more appropriate solution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Continue to refine the footer styling to ensure it meets design specifications while maintaining functionality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start writing my &lt;cite&gt;GSOC’2024&lt;/cite&gt; final report.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you for following my progress. I look forward to sharing further updates and solutions in the coming weeks!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-15-week11-wachiou-bouraima.html"/>
    <summary>Hello everyone,
welcome to the update for Week 11 of my Google Summer of Code (GSoC) 2024 journey. This week, I focused on finalizing the footer issue on the FURY website and tackling some Sphinx warnings related to attribute and property naming conflicts. Here’s a detailed look at what I accomplished and the challenges faced.</summary>
    <category term="google" label="google"/>
    <published>2024-08-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-15-week10-wachiou-bouraima.html</id>
    <title>WEEK 10: Investigating Footer Deformation and Limited Progress on Warnings</title>
    <updated>2024-08-15T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-10-investigating-footer-deformation-and-limited-progress-on-warnings"&gt;

&lt;p&gt;Welcome to the week 10 of my Google Summer of Code (GSoC) 2024 journey. This week, I focused on resolving an issue with the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt;  website’s footer and made limited progress on fixing documentation warnings. Here’s a detailed overview of my activities and challenges.&lt;/p&gt;
&lt;section id="investigating-footer-deformation-issue-874"&gt;
&lt;h2&gt;Investigating Footer Deformation Issue: &lt;a class="reference external" href="https://github.com/fury-gl/fury/issues/874"&gt;#874&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;During this week, I identified the root cause of the footer deformation on the FURY website. The problem arose when hovering over an element, which caused the element’s size to increase. This, in turn, increased the padding of its container and subsequently affected the layout of following elements.
To address this, I initially considered avoiding changes in font size on hover and opted to make elements bold instead. While this approach resolved the deformation issue, it did not align with the design requirements for the homepage footer.
Due to health constraints, I was unable to continue this work. I plan to explore alternative solutions to align with the design specifications in the upcoming week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="limited-progress-on-documentation-warnings"&gt;
&lt;h2&gt;Limited Progress on Documentation Warnings&lt;/h2&gt;
&lt;p&gt;I also aimed to make progress on fixing Sphinx warnings related to documentation typos. Unfortunately, I could not advance significantly in this area due to the time constraints imposed by the footer issue and my health.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-s-next"&gt;
&lt;h2&gt;What’s Next ?&lt;/h2&gt;
&lt;p&gt;For week 11, I plan to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Explore alternative solutions to address the footer deformation issue while aligning with the design requirements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Continue fixing Sphinx warnings in the documentation and address any remaining issues.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-15-week10-wachiou-bouraima.html"/>
    <summary>Welcome to the week 10 of my Google Summer of Code (GSoC) 2024 journey. This week, I focused on resolving an issue with the FURY  website’s footer and made limited progress on fixing documentation warnings. Here’s a detailed overview of my activities and challenges.</summary>
    <category term="google" label="google"/>
    <published>2024-08-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-08-13-week9-wachiou-bouraima.html</id>
    <title>WEEK 9: Fixing Sphinx Warnings and Investigating Web Footer Issues</title>
    <updated>2024-08-13T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-9-fixing-sphinx-warnings-and-investigating-web-footer-issues"&gt;

&lt;p&gt;Hello everyone,
welcome to my Google Summer of Code (GSoC) 2024 journey! Week 9 was devoted to fixing Sphinx warnings caused by indentation errors in some docstrings of some examples in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;auto_examples&lt;/span&gt;&lt;/code&gt; folder. I also started investigating why the footer of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FURY&lt;/span&gt;&lt;/code&gt; site distorts when you try to move the mouse over an element.&lt;/p&gt;
&lt;section id="continuing-the-fight-against-sphinx-warnings"&gt;
&lt;h2&gt;Continuing the Fight Against Sphinx Warnings&lt;/h2&gt;
&lt;p&gt;My main task this week has been to continue dealing with the Sphinx warnings in our documentation. I focused on the 188 warnings related to the main documentation, as well as 2 warnings in the blog posts.
I fixed 19 warnings caused by the docstring of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;viz_**.py&lt;/span&gt;&lt;/code&gt; modules in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;source/auto_examples&lt;/span&gt;&lt;/code&gt; folder
by fixing the indentation errors in the docstrings of the examples.&lt;/p&gt;
&lt;p&gt;Here is an example of indentation error in the docstring of the example &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;auto_examples/04_demos/viz_animated_surfaces.py&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;Code&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="c1"&gt;###############################################################################&lt;/span&gt;
&lt;span class="c1"&gt;# Variables and their usage:&lt;/span&gt;
&lt;span class="c1"&gt;# :time - float: initial value of the time variable i.e. value of the time variable at&lt;/span&gt;
&lt;span class="c1"&gt;#               the beginning of the program; (default = 0)&lt;/span&gt;
&lt;span class="c1"&gt;# dt: float&lt;/span&gt;
&lt;span class="c1"&gt;#     amount by which ``time`` variable is incremented for every iteration&lt;/span&gt;
&lt;span class="c1"&gt;#     of timer_callback function (default = 0.1)&lt;/span&gt;
&lt;span class="c1"&gt;# lower_xbound: float&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;Code&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="investigating-web-footer-issues"&gt;
&lt;h2&gt;Investigating Web Footer Issues&lt;/h2&gt;
&lt;p&gt;In parallel, I started investigating an issue with the FURY website’s footer, which deforms when hovering over an element with the mouse. This problem affects the user experience and visual consistency of the site. My work this week has focused on diagnosing the underlying cause of this issue and planning the necessary steps to fix it. This task has been both technically intriguing and a great opportunity to sharpen my web development skills.&lt;/p&gt;
&lt;p&gt;issue number: &lt;a class="reference external" href="https://github.com/fury-gl/fury/issues/874"&gt;#874&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere ?&lt;/h2&gt;
&lt;p&gt;I encountered some challenges while fixing the indentation errors in the docstrings of the examples. The errors were caused by inconsistent indentation in the docstrings, which made it difficult to identify the root cause of the warnings. However, I was able to resolve these issues and make progress in addressing the Sphinx warnings.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-s-next"&gt;
&lt;h2&gt;What’s next ?&lt;/h2&gt;
&lt;p&gt;For week 10, I plan to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Continue fixing the Sphinx warnings in the documentation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start fixing the issue with the footer of the FURY website.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-08-13-week9-wachiou-bouraima.html"/>
    <summary>Hello everyone,
welcome to my Google Summer of Code (GSoC) 2024 journey! Week 9 was devoted to fixing Sphinx warnings caused by indentation errors in some docstrings of some examples in the auto_examples folder. I also started investigating why the footer of the FURY site distorts when you try to move the mouse over an element.</summary>
    <category term="google" label="google"/>
    <published>2024-08-13T00:00:00+00:00</published>
  </entry>
</feed>
