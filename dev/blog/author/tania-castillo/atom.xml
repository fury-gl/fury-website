<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts by Tania Castillo</title>
  <updated>2023-12-05T17:26:23.271073+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/author/tania-castillo/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.6">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2023/2023-08-24-week-12-tvcastillod.html</id>
    <title>Week 12 : Experimenting with ODFs implementation</title>
    <updated>2023-08-24T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-12-experimenting-with-odfs-implementation"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;There were different issues I needed to address for the ODF implementation. Even though I could not solve any of them completely, I did check each of the issues and made some progress. All the work in progress is being recorded in the following branch &lt;a class="reference external" href="https://github.com/tvcastillod/fury/tree/SH-for-ODF-impl"&gt;SH-for-ODF-impl&lt;/a&gt;, which when ready will be associated with a well-structured PR.&lt;/p&gt;
&lt;p&gt;First, about the scaling, I was suggested to check Generalized Fractional Anisotropy &lt;strong&gt;gfa&lt;/strong&gt; metric to adjust the scaling depending on the shape of the ODF glyph, i.e., the less the &lt;strong&gt;gfa&lt;/strong&gt; the more sphere-shaped and smaller, so I had to associate a greater scaling for those. However, this did not work very well as I was unable to define an appropriate scale relation that would give an equitable result for each glyph. For this reason, I opted to use peak values which are extracted from the ODFs, setting the scales as 1/peak_value*0.4 and I got a more uniformly sized glyph without the need of setting it manually. That is a temporal solution as I would like to see better why this happens and if possible do the adjustment inside the shader instead of a precalculation.&lt;/p&gt;
&lt;p&gt;Second, for the direction, I made a small adjustment to the spherical coordinates which affected the direction of the ODF glyph. As you can see below,&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/263122770-b9ee19d2-d82b-4d7f-a5bb-1cbbf5907049.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/263122770-b9ee19d2-d82b-4d7f-a5bb-1cbbf5907049.png" style="width: 400px;" /&gt;
&lt;p&gt;All the glyphs are aligned over the y-axis but not over the z-axis, to correct this I precalculated the main direction of each glyph using peaks and passed it to the shader as a &lt;em&gt;vec3&lt;/em&gt;, then used &lt;em&gt;vec2vecrotmat&lt;/em&gt; to align the main axis vector of the ODF to the required direction vector, the only problem with this is that not all the glyps are equally aligned to the axis, i.e., the first 3 glyphs are aligned with the x-axis but the last one is aligned with the y-axis, so the final rotation gives a different result for that one.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/263122752-b2aa696f-62a5-4b09-b8dd-0cb1ec49431c.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/263122752-b2aa696f-62a5-4b09-b8dd-0cb1ec49431c.png" style="width: 400px;" /&gt;
&lt;p&gt;As with the first small adjustment of the coordinates the direction was partially correct, I need to double check the theta, phi and r definitions to see if I can get the right direction without the need of the additional data of direction. Also, there might be a way to get the specific rotation angles associated to each individual glyph from the data associated with the ODFs.&lt;/p&gt;
&lt;p&gt;Third, about passing the coefficients data through textures, I understand better now how to pass textures to the shaders but I still have problems understanding how to retrieve the data inside the shader. I used &lt;a class="reference external" href="https://github.com/fury-gl/fury/blob/master/docs/experimental/viz_shader_texture.py"&gt;this base implementation&lt;/a&gt;, suggested by one of my mentors, to store the data as a &lt;a class="reference external" href="http://www.khronos.org/opengl/wiki/Cubemap_Texture#:~:text=A%20Cubemap%20Texture%20is%20a,the%20value%20to%20be%20accessed."&gt;texture cubemap&lt;/a&gt;, “a texture, where each mipmap level consists of six 2D images which must be square. The 6 images represent the faces of a cube”. I had 4x15 coefficients and inside the function, a grid of RGB colors is made so then it can be mapped as a texture. To check if was passing the data correctly, I used the same value, .5, for all the textures, so then I could pick a random texel get a specific color (gray), and pass it as &lt;em&gt;fragOutput0&lt;/em&gt; to see if the value was correct. However, it didn’t appear to work correctly as I couldn’t get the expected color. To get the specific color I used &lt;a class="reference external" href="https://registry.khronos.org/OpenGL-Refpages/gl4/html/texture.xhtml"&gt;texture(sampler, P)&lt;/a&gt; which samples texels from the texture bound to sampler at texture coordinate P. Now, what I still need to figure out is which should be the corresponding texture coordinate. I have tried with random coordinates, as they are supposed to correspond to a point on the cube and since the information I have encoded in the texture is all the same, I assumed that I would get the expected result for any set of values. It might be a problem with the data normalization, or maybe there is something failing on the texture definition, but I need to review it in more detail to see where is the problem.&lt;/p&gt;
&lt;p&gt;Lastly, about the colormapping, I created the texture based on a generic colormap from &lt;a class="reference external" href="https://matplotlib.org/stable/tutorials/colors/colormaps.html"&gt;matplotlib&lt;/a&gt;. I was able to give some color to the glyph but it does not match correctly its shape. Some adjustment must be done regarding the texels, as the colormap is mapped on a cube, but I need it to fit the shape of the glyph correctly.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/263122760-7d1fff5e-7787-473c-8053-ea69f3009fb4.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/263122760-7d1fff5e-7787-473c-8053-ea69f3009fb4.png" style="width: 250px;" /&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will continue to explore more on how to handle textures so I can solve the issues related to the coefficient data and colormapping. Also, take a deeper look at the SH implementation and check what is the information needed to adjust the main direction of the ODF correctly.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;As I mentioned I had some drawbacks in understanding the use of textures and how to retrieve the data inside the shaders. This is a topic that might take some time to manage properly but if I can master it and understand it better, it is a tool that can be useful later. Additionally, there are details of the SH implementation that I still need to understand and explore better in order to make sure I get exactly the same result as the current &lt;em&gt;odf_slicer&lt;/em&gt; implementation.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-08-24-week-12-tvcastillod.html" rel="alternate"/>
    <summary>There were different issues I needed to address for the ODF implementation. Even though I could not solve any of them completely, I did check each of the issues and made some progress. All the work in progress is being recorded in the following branch SH-for-ODF-impl, which when ready will be associated with a well-structured PR.</summary>
    <category term="google" label="google"/>
    <published>2023-08-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-08-16-week-11-tvcastillod.html</id>
    <title>Week 11 : Adjusting ODF implementation and looking for solutions on issues found</title>
    <updated>2023-08-16T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-11-adjusting-odf-implementation-and-looking-for-solutions-on-issues-found"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I continued to experiment with the ODF glyph implementation. Thanks to one of my mentors I figured out how to get the missing data corresponding to the SH coefficients &lt;span class="math notranslate nohighlight"&gt;\(a^l_m\)&lt;/span&gt; part of the function &lt;span class="math notranslate nohighlight"&gt;\(f(\theta, \phi)\)&lt;/span&gt; described &lt;a class="reference external" href="https://dipy.org/documentation/1.7.0/theory/sh_basis/"&gt;here&lt;/a&gt;. I also was told to make sure to implement the correct SH basis since there are different definitions from the literature, I have to focus now in the one proposed by Descoteaux, described in &lt;a class="reference external" href="https://onlinelibrary.wiley.com/doi/10.1002/mrm.21277"&gt;this paper&lt;/a&gt;, which is labeled in &lt;em&gt;dipy&lt;/em&gt; as &lt;em&gt;descoteaux07&lt;/em&gt;. To do this I had to make a small adjustment to the base implementation that I took as a reference, from which I obtained a first result using SH of order 4.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/260909561-fd90033c-018a-465b-bd16-3586bb31ca36.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/260909561-fd90033c-018a-465b-bd16-3586bb31ca36.png" style="width: 600px;" /&gt;
&lt;p&gt;It appears that the results on the shape are about the same, except for the direction, but there is still work to be done.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;For now, there are 3 things I will continue to work on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The color and lighting. As these objects present curvatures with quite a bit of detail in some cases, this is something that requires more specific lighting work, in addition to having now not only one color but a color map.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The scaling. This is something I still don’t know how to deal with. I had to adjust it manually for now, but the idea is to find a relationship between the coefficients and the final object size so it can be automatically scaled, or maybe there is a proper way to pre-process this data before passing it to the shaders to get the right result at once.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-08-16-week-11-tvcastillod.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “here”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;How to pass the information of the coefficients efficiently. Right now I’m creating one actor per glyph since I’m using a uniform array to pass the coefficients, but the idea is to pass all the data at once. I found several ideas &lt;a class="reference external" href="https://stackoverflow.com/questions/7954927/passing-a-list-of-values-to-fragment-shader"&gt;here&lt;/a&gt; of how to pass a list of values to the fragment shader directly, I just need to explore deeper how this can be done on &lt;strong&gt;FURY&lt;/strong&gt;, and see which option is most suitable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;All the points mentioned above are things that I tried to fix, however, it is something that I need to look at in much more detail and that I know is going to take me some time to understand and test before I get to the expected result. I hope to get some ideas from my mentors and fellow GSoC contributors on how I can proceed to deal with each of the problems.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-08-16-week-11-tvcastillod.html" rel="alternate"/>
    <summary>I continued to experiment with the ODF glyph implementation. Thanks to one of my mentors I figured out how to get the missing data corresponding to the SH coefficients a^l_m part of the function f(\theta, \phi) described here. I also was told to make sure to implement the correct SH basis since there are different definitions from the literature, I have to focus now in the one proposed by Descoteaux, described in this paper, which is labeled in dipy as descoteaux07. To do this I had to make a small adjustment to the base implementation that I took as a reference, from which I obtained a first result using SH of order 4.</summary>
    <category term="google" label="google"/>
    <published>2023-08-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-08-08-week-10-tvcastillod.html</id>
    <title>Week 10 : Start of SH implementation experiments</title>
    <updated>2023-08-08T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-10-start-of-sh-implementation-experiments"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I started formally working on SH implementation. I was told to start first doing a simple program where I can modify in real-time the order &lt;span class="math notranslate nohighlight"&gt;\(l\)&lt;/span&gt; and degree &lt;span class="math notranslate nohighlight"&gt;\(m\)&lt;/span&gt;, parameters corresponding to the &lt;a class="reference external" href="https://dipy.org/documentation/1.7.0/theory/sh_basis/"&gt;Spherical Harmonics function&lt;/a&gt; &lt;span class="math notranslate nohighlight"&gt;\(Y^m_l(\theta,\phi)=\)&lt;/span&gt;, based on &lt;a class="reference external" href="https://github.com/lenixlobo/fury/commit/2b7ce7a71fd422dc5a250d7b49e1eea2db9d3bce"&gt;previous work&lt;/a&gt;. That is just one part of the final ODF calculation, but here is what a first experimental script looks like.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/260910073-10b0edd4-40e3-495c-85ad-79993aef3b19.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/260910073-10b0edd4-40e3-495c-85ad-79993aef3b19.png" style="width: 600px;" /&gt;
&lt;p&gt;I did it in order to make sure it was visually correct and also to understand better how those 2 parameters are related and need to be incorporated into the final calculation. There is one issue at first sight that needs to be addressed, and that is the scaling, since for SH with a degree near 0, the object gets out of bounds.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will keep polishing details from my current open PRs, hopefully, I will get another PR merged before the last GSoC week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not sure about how to use the current implementation I have to get similar visualizations made with &lt;em&gt;odf_slicer&lt;/em&gt;, since the parameters that the function receive are different, so I need to take a deeper look and see where it might be the connection or if I should make some adjustments on the parameters.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-08-08-week-10-tvcastillod.html" rel="alternate"/>
    <summary>I started formally working on SH implementation. I was told to start first doing a simple program where I can modify in real-time the order l and degree m, parameters corresponding to the Spherical Harmonics function Y^m_l(\theta,\phi)=, based on previous work. That is just one part of the final ODF calculation, but here is what a first experimental script looks like.</summary>
    <category term="google" label="google"/>
    <published>2023-08-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-31-week-9-tvcastillod.html</id>
    <title>Week 9: Tutorial done and polishing DTI uncertainty</title>
    <updated>2023-07-31T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-9-tutorial-done-and-polishing-dti-uncertainty"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I addressed the comments from the tutorial of &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/818"&gt;PR #818&lt;/a&gt;  related to how to display specific visualizations I wanted to make. I was suggested to use &lt;em&gt;ShowManager&lt;/em&gt; to handle the zoom of the scene and also to use &lt;em&gt;GridUI&lt;/em&gt; to display several actors at the same time for a visual quality comparison of the tensors. Below are some images generated for the tutorial that is almost done.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/260906510-d422e7b4-3ba3-4de6-bfd0-09c04bec8876.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/260906510-d422e7b4-3ba3-4de6-bfd0-09c04bec8876.png" style="width: 600px;" /&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;There are some issues with the tests of the uncertainty implementation, specifically a segmentation problem that has to be with the shaders, so I expect to correct the problem by next week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I’m still thinking about how to approach the implementation of the spherical harmonics for ODF glyphs. Most of the implementations I have found are static so my task would be to try to parametrize the existing functions, so I can pass data from Python to the shaders properly so that I can obtain the same result as the current &lt;em&gt;odf_slicer&lt;/em&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-31-week-9-tvcastillod.html" rel="alternate"/>
    <summary>I addressed the comments from the tutorial of PR #818  related to how to display specific visualizations I wanted to make. I was suggested to use ShowManager to handle the zoom of the scene and also to use GridUI to display several actors at the same time for a visual quality comparison of the tensors. Below are some images generated for the tutorial that is almost done.</summary>
    <category term="google" label="google"/>
    <published>2023-07-31T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-25-week-8-tvcastillod.html</id>
    <title>Week 8: Working on Ellipsoid Tutorial and exploring SH</title>
    <updated>2023-07-25T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-8-working-on-ellipsoid-tutorial-and-exploring-sh"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I mainly worked on the ellipsoid actor tutorial, as &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;PR #791&lt;/a&gt; is finally merged, so I was able to complete the tutorial by adding my implementation. In addition, during the weekly meeting, I received a good overview of the next issue I will be working on, which is using raymarching SDFs to display spherical harmonics (SH) for visualizing ODF glyphs for DTI. I got several ideas and resources which I can start experimenting with, such as &lt;a class="reference external" href="https://www.shadertoy.com/results?query=Spherical+Harmonics"&gt;Shadertoy&lt;/a&gt; and some base implementations from other FURY contributors. The main drawback when creating these objects is the amount of data required to create them, because depending on the SH order, the number of parameters that the function receives may vary, also unlike the tensors, which are represented only with a 3x3 matrix, here we could have more than 9 values associated with a single glyph, so passing the information from python to the shaders is not so trivial, besides requiring more resources as there is more information that needs to be processed. Some ideas I received were using matrixes instead of vectors, using templating, or even using texture to pass the data. I started to explore these options further, as well as to review in more detail the existing implementations of SH with raymarching, in order to understand them better.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I currently have two PRs under review, so I will address the comments I receive and update them accordingly. I also will continue to explore and start working on the implementation of these objects so that I can start making adjustments and further discuss possible improvements to the implementation I will make.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, I did not encounter any drawbacks this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-25-week-8-tvcastillod.html" rel="alternate"/>
    <summary>I mainly worked on the ellipsoid actor tutorial, as PR #791 is finally merged, so I was able to complete the tutorial by adding my implementation. In addition, during the weekly meeting, I received a good overview of the next issue I will be working on, which is using raymarching SDFs to display spherical harmonics (SH) for visualizing ODF glyphs for DTI. I got several ideas and resources which I can start experimenting with, such as Shadertoy and some base implementations from other FURY contributors. The main drawback when creating these objects is the amount of data required to create them, because depending on the SH order, the number of parameters that the function receives may vary, also unlike the tensors, which are represented only with a 3x3 matrix, here we could have more than 9 values associated with a single glyph, so passing the information from python to the shaders is not so trivial, besides requiring more resources as there is more information that needs to be processed. Some ideas I received were using matrixes instead of vectors, using templating, or even using texture to pass the data. I started to explore these options further, as well as to review in more detail the existing implementations of SH with raymarching, in order to understand them better.</summary>
    <category term="google" label="google"/>
    <published>2023-07-25T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-17-week-7-tvcastillod.html</id>
    <title>Week 7: Adjustments on the Uncertainty Cones visualization</title>
    <updated>2023-07-17T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-7-adjustments-on-the-uncertainty-cones-visualization"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I was told to refactor some parts of the uncertainty PR, since I was relying too much on &lt;strong&gt;dipy&lt;/strong&gt; functions which is not good because it makes maintenance more difficult as &lt;strong&gt;dipy&lt;/strong&gt; requires &lt;strong&gt;FURY&lt;/strong&gt; for some functionalities. So I did some adjustments on the uncertainty function parameters and the corresponding tests, hopefully I managed to get with the most appropriate definition but I need to receive a first feedback to see how much I have to adjust the implementation. As I had to delete some relevant code lines inside the uncertainty calculation which consisted of preprocessing the data in order to define the necessary variables for the uncertainty formula, I was also suggested to make a tutorial of this new feature, so I can explain in detail how to obtain and adjust the necessary information, before passing it to the actor, and in general how and what is the purpose of this new function.&lt;/p&gt;
&lt;p&gt;I also continued working on the ellipsoid tutorial, which I hope to finish this week so that I can ask for a first revision.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will finish defining some details of the tutorial so that it is ready for review, and now I will start working on the tutorial related to the uncertainty, while I receive feedback on the other PRs. Also, as preparation for the next step I will start exploring on how to address visualization of spherical harmonics for ODF glyphs visualization, I found that a previous GSoC participant at FURY started working on that and also did several work with raymarching and SDF (&lt;span class="xref std std-doc"&gt;here is a summary of the work&lt;/span&gt;), so I will take a deeper look on that to see if I can get something useful I can start with.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not this week, but I foresee some problems with the uncertainty PR, we will see how it goes.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-17-week-7-tvcastillod.html" rel="alternate"/>
    <summary>I was told to refactor some parts of the uncertainty PR, since I was relying too much on dipy functions which is not good because it makes maintenance more difficult as dipy requires FURY for some functionalities. So I did some adjustments on the uncertainty function parameters and the corresponding tests, hopefully I managed to get with the most appropriate definition but I need to receive a first feedback to see how much I have to adjust the implementation. As I had to delete some relevant code lines inside the uncertainty calculation which consisted of preprocessing the data in order to define the necessary variables for the uncertainty formula, I was also suggested to make a tutorial of this new feature, so I can explain in detail how to obtain and adjust the necessary information, before passing it to the actor, and in general how and what is the purpose of this new function.</summary>
    <category term="google" label="google"/>
    <published>2023-07-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-10-week-6-tvcastillod.html</id>
    <title>Week 6: First draft of the Ellipsoid tutorial</title>
    <updated>2023-07-10T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-6-first-draft-of-the-ellipsoid-tutorial"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/818"&gt;#PR 818: Tutorial on using ellipsoid actor to visualize tensor ellipsoids for DTI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I created the PR for the tutorial that will show the use that can be made of the &lt;em&gt;ellipsoid&lt;/em&gt; actor in the visualization of diffusion tensor ellipsoids. It is still in its most basic stage, but the structure that I have thought of for now consists of: displaying a slice using &lt;em&gt;tensor_slicer&lt;/em&gt; with spheres of 100, 200, and 724 vertices, and using &lt;em&gt;ellipsoid&lt;/em&gt; actor, and show a comparison of the visual quality of the tensor ellipsoids. Then, display a ROI using both actors and a whole brain using the &lt;em&gt;ellipsoid&lt;/em&gt; actor, to show that this new actor gives the possibility to display more data.&lt;/p&gt;
&lt;p&gt;I also submitted the &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/810"&gt;uncertainty PR&lt;/a&gt; for review, in order to start making the necessary corrections.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I need &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;#PR 791&lt;/a&gt; to be merged first, but meanwhile, I will start working on the explanation of the tutorial, since I already have the code structure and the idea of what I want to illustrate. I will discuss further work with my mentors at the upcoming meeting, so I can organize myself better and plan how I’m going to address the pending parts of my project.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I found no major difficulties this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-10-week-6-tvcastillod.html" rel="alternate"/>
    <summary>#PR 818: Tutorial on using ellipsoid actor to visualize tensor ellipsoids for DTI</summary>
    <category term="google" label="google"/>
    <published>2023-07-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-03-week-5-tvcastillod.html</id>
    <title>Week 5: Preparing the data for the Ellipsoid tutorial</title>
    <updated>2023-07-03T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-5-preparing-the-data-for-the-ellipsoid-tutorial"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;During the weekly meeting with my mentors, there was a small discussion over the naming of the actor and its usage. On the one hand, although the purpose of the actor is to visualize diffusion tensor ellipsoids, the idea is that it can also be used for any other type of visualization that requires the use of ellipsoids, so in the end, we decided to keep the name &lt;em&gt;ellipsoid&lt;/em&gt; as it is more generic. On the other hand, as there is already an actor made for the purpose of tensor visualization, namely &lt;a class="reference external" href="https://github.com/fury-gl/fury/blob/e595bad0246899d58d24121dcc291eb050721f9f/fury/actor.py#L1172"&gt;tensor_slicer&lt;/a&gt;, it might not be obvious how and why one would use this new ellipsoid actor for this purpose, thus it was proposed to make a tutorial that can clarify this. The main difference between both actors relies on the quality and the amount of data that can be displayed, so the idea is to show the difference between both alternatives so the user can choose which one to use depending on their needs. To prepare the tutorial the first step was to &lt;a class="reference external" href="https://github.com/fury-gl/fury-data/pull/12"&gt;add the data&lt;/a&gt; I will use on &lt;a class="reference external" href="https://github.com/fury-gl/fury-data"&gt;fury-data&lt;/a&gt; so I can then fetch and load the datasets I need to work on the tutorial.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I need &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;#PR 791&lt;/a&gt; to be reviewed by my GSoC fellows at FURY, so I will address their comments, and additionally make adjustments on &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/810"&gt;#PR 810&lt;/a&gt; based on the feedback I receive. I will also start working on the tutorial, the idea is to show the use that can be made of the ellipsoid actor in the visualization of diffusion tensor ellipsoids, compared to the &lt;em&gt;tensor_slicer&lt;/em&gt; actor. I plan to create a WIP PR to start getting feedback on the general structure of the tutorial and the way everything will be explained.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not encounter any obstacles this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-03-week-5-tvcastillod.html" rel="alternate"/>
    <summary>During the weekly meeting with my mentors, there was a small discussion over the naming of the actor and its usage. On the one hand, although the purpose of the actor is to visualize diffusion tensor ellipsoids, the idea is that it can also be used for any other type of visualization that requires the use of ellipsoids, so in the end, we decided to keep the name ellipsoid as it is more generic. On the other hand, as there is already an actor made for the purpose of tensor visualization, namely tensor_slicer, it might not be obvious how and why one would use this new ellipsoid actor for this purpose, thus it was proposed to make a tutorial that can clarify this. The main difference between both actors relies on the quality and the amount of data that can be displayed, so the idea is to show the difference between both alternatives so the user can choose which one to use depending on their needs. To prepare the tutorial the first step was to add the data I will use on fury-data so I can then fetch and load the datasets I need to work on the tutorial.</summary>
    <category term="google" label="google"/>
    <published>2023-07-03T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-27-week-4-tvcastillod.html</id>
    <title>Week 4: First draft of the DTI uncertainty visualization</title>
    <updated>2023-06-27T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-4-first-draft-of-the-dti-uncertainty-visualization"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/810"&gt;#PR 810: DTI uncertainty visualization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I made a second PR with the implementation of DTI uncertainty calculation and visualization. Below is an image of diffusion tensor ellipsoids and their associated uncertainty cones.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/254747296-09a8674e-bfc0-4b3f-820f-8a1b1ad8c5c9.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/254747296-09a8674e-bfc0-4b3f-820f-8a1b1ad8c5c9.png" style="width: 530px;" /&gt;
&lt;p&gt;I had to use some &lt;strong&gt;dipy&lt;/strong&gt; functions, specifically: &lt;a class="reference external" href="https://github.com/dipy/dipy/blob/321e06722ef42b5add3a7f570f6422845177eafa/dipy/denoise/noise_estimate.py#L272"&gt;estimate_sigma&lt;/a&gt; for the noise variance calculation, &lt;a class="reference external" href="https://github.com/dipy/dipy/blob/321e06722ef42b5add3a7f570f6422845177eafa/dipy/reconst/dti.py#L2112"&gt;design_matrix&lt;/a&gt; to get the b-matrix, and &lt;a class="reference external" href="https://github.com/dipy/dipy/blob/321e06722ef42b5add3a7f570f6422845177eafa/dipy/reconst/dti.py#L639"&gt;tensor_prediction&lt;/a&gt; for the signal estimation. The details of this calculations can be found &lt;a class="reference external" href="https://onlinelibrary.wiley.com/doi/full/10.1002/mrm.21111"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will continue working on the uncertainty PR which is still in its early stage, I’m going to make a couple of adjustments to the description of the parameters and the actor, and keep working on based on the feedback I receive. There are also minor details to be discussed with my mentors about the first PR, which I hope to finish refining.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;It took me a while to make the PR because I had some problems with the uncertainty function definition. I tried to use the least amount of parameters for the function, since with data, bvals and bvecs it is possible to obtain the rest of the parameters needed to generate the cones, which led me to readjust some calculations from the base implementation I had, to keep everything working correctly.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-27-week-4-tvcastillod.html" rel="alternate"/>
    <summary>#PR 810: DTI uncertainty visualization</summary>
    <category term="google" label="google"/>
    <published>2023-06-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-19-week-3-tvcastillod.html</id>
    <title>Week 3: Working on uncertainty and details of the first PR</title>
    <updated>2023-06-19T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-3-working-on-uncertainty-and-details-of-the-first-pr"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I made some adjustments to the ellipsoid actor definition, now called &lt;em&gt;tensor&lt;/em&gt;. This was something discussed in the weekly meeting as the coming changes are related to this actor, the idea now is to have a tensor actor that allows choosing between displaying the tensor ellipsoids or the uncertainty cones (later on). I also worked on the uncertainty calculation, and the cone SDF for the visualization, so I plan to do a WIP PR next to start getting feedback on this new addition.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;As for the uncertainty calculation, other data is needed such as the noise variance and the design matrix (check &lt;a class="reference external" href="https://onlinelibrary.wiley.com/doi/full/10.1002/mrm.21111"&gt;this&lt;/a&gt; article for more details), I need to identify which should be the parameters for the function definition. I also have to work on the documentation, so the function and its purpose are clear. I plan to make some final adjustments related to the uncertainty so that the next PR is ready for submission this week. I also expect to make final changes to the first PR so that it can be merged soon.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not this week, I will wait for feedback to see if there is anything I need to review or correct.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-19-week-3-tvcastillod.html" rel="alternate"/>
    <summary>I made some adjustments to the ellipsoid actor definition, now called tensor. This was something discussed in the weekly meeting as the coming changes are related to this actor, the idea now is to have a tensor actor that allows choosing between displaying the tensor ellipsoids or the uncertainty cones (later on). I also worked on the uncertainty calculation, and the cone SDF for the visualization, so I plan to do a WIP PR next to start getting feedback on this new addition.</summary>
    <category term="google" label="google"/>
    <published>2023-06-19T00:00:00+00:00</published>
  </entry>
</feed>
