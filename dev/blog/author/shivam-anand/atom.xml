<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts by Shivam Anand</title>
  <updated>2024-07-14T06:09:05.045293+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/author/shivam-anand/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.10">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2023/2023-01-29-final-report-shivam.html</id>
    <title>Google Summer of Code Final Work Product</title>
    <updated>2023-01-29T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;center&gt;&lt;a href="https://summerofcode.withgoogle.com/programs/2022/projects/ZZQ6IrHq"&gt;&lt;img src="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" alt="gsoc" height="50"/&gt;&lt;/a&gt;&lt;/center&gt;&lt;center&gt;
&lt;a href="https://summerofcode.withgoogle.com/projects/#6653942668197888"&gt;&lt;img src="https://www.python.org/static/community_logos/python-logo.png" height="45"/&gt;&lt;/a&gt;
&lt;a href="https://fury.gl/latest/community.html"&gt;&lt;img src="https://python-gsoc.org/logos/FURY.png" alt="fury" height="45"/&gt;&lt;/a&gt;
&lt;/center&gt;&lt;section id="google-summer-of-code-final-work-product"&gt;

&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Shivam Anand&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; Python Software Foundation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; FURY&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2022"&gt;FURY - glTF
Integration&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="proposed-objectives"&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Ability to load glTF models&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Should be able to load static glTF models&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Should be able to add model to the scene.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exporting scene data as glTF file&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Materials &amp;amp; Textures&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Textures&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PBRs&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Animations&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Simple Actor animations&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Skinning&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Morphing&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stretch Goals&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ability to load &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.glb&lt;/span&gt;&lt;/code&gt; files&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-completed"&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;section id="loading-static-gltf-models"&gt;
&lt;h3&gt;Loading Static glTF models&lt;/h3&gt;
&lt;p&gt;A glTF file is a JSON like file format containing required data for 3D scenes. VTK has two built-in glTF loaders. However, they lack ability to animate and apply materials. Added methods to load binary
data and create actors from them. These actors can be added directly
to the scene. The glTF class reads texture data from either
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;base64&lt;/span&gt;&lt;/code&gt; encoded string or from the image file, and maps the
texture to the actor using the given UV data. It is capable of doing
the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Loading both &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gltf&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glb&lt;/span&gt;&lt;/code&gt; files. Get actors from the
model.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applying textures and colors from materials.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setting cameras if the model contains multiple cameras.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apply normals (for a smoother surface).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="align-default"&gt;
&lt;img alt="image" src="https://user-images.githubusercontent.com/74976752/174492510-b9f10816-3058-4a7b-a260-0627406354ba.png" /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Importing glTF files: (Merged)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/600"&gt;fury-gl/fury#600&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Loading glTF Demo (with textures) (Merged):&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/600"&gt;fury-gl/fury#600&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="exporting-scene-as-a-gltf"&gt;
&lt;h3&gt;Exporting Scene as a glTF&lt;/h3&gt;
&lt;p&gt;The fury scene can contain multiple objects such as actors, cameras,
textures, etc. We need to get the primitive information (such as
Vertices, Triangles, UVs, Normals, etc.) from these objects and store
them into a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.bin&lt;/span&gt;&lt;/code&gt; file. Added methods that export these
information to a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.gltf&lt;/span&gt;&lt;/code&gt; or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.glb&lt;/span&gt;&lt;/code&gt; file format.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Exporting scene as glTF: (Merged)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/630"&gt;fury-gl/fury#630&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Exporting scene as glTF Tutorial: (Merged)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/630"&gt;fury-gl/fury#630&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="simple-actor-animations"&gt;
&lt;h3&gt;Simple Actor Animations&lt;/h3&gt;
&lt;p&gt;Added simple actor animations (translation, rotation &amp;amp; scale of
actors) support. The animation data (transformation and timestamp) is
stored in buffers. It converts the binary data to ndarrays and
creates a timleline for each animation in glTF animations. This
timeline contains actors an can be added to the scene. We can animate
the scene by updating timeline inside a timer callback.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/74976752/217645594-6054ea83-12e5-4868-b6a1-eee5a154bd26.gif" class="align-center" src="https://user-images.githubusercontent.com/74976752/217645594-6054ea83-12e5-4868-b6a1-eee5a154bd26.gif" style="width: 480px;" /&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Simple Animations in glTF: (Merged)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/643"&gt;fury-gl/fury#643&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Simple Animations in glTF Tutorial: (Merged)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/643"&gt;fury-gl/fury#643&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="morphing-in-gltf"&gt;
&lt;h3&gt;Morphing in glTF&lt;/h3&gt;
&lt;p&gt;glTF allows us to animate meshes using morph targets. A morph target
stores displacements or differences for certain mesh attributes. At
runtime, these differences may be added to the original mesh, with
different weights, to animate parts of the mesh. Added methods to
extract this information, update the timeline and apply morphing to
each actor in the scene.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/74976752/217645485-153ec403-6c87-4282-8907-30d921106b34.gif" class="align-center" src="https://user-images.githubusercontent.com/74976752/217645485-153ec403-6c87-4282-8907-30d921106b34.gif" style="width: 480px;" /&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Morphing support in glTF: (Under Review)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/700"&gt;fury-gl/fury#700&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Morphing in glTF demo: (Under Review)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/700"&gt;fury-gl/fury#700&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="skeletal-animations-skining"&gt;
&lt;h3&gt;Skeletal Animations (Skining)&lt;/h3&gt;
&lt;p&gt;Another way of animating a glTF is by skinning. It allows the
geometry (vertices) of a mesh to be deformed based on the pose of a
skeleton. This is essential in order to give animated geometry. It
combines every parameter of a glTF file. While working with skinning,
we need to keep track of the parent-child hierarchy of
transformations. Vertex Skinning takes full advantage of newly
implemented &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Timeline&lt;/span&gt;&lt;/code&gt; &amp;amp; &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Animation&lt;/span&gt;&lt;/code&gt; modules to track
hierarchical transformation order. Though the current version of the
skinning implementation works with most of the glTF sample modes, It
struggles with models that have multiple actors (e.g. BrainStem). It
can be fixed by using the vertex shader to update the vertices. The
current implementation of skinning supports the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Multiple animation support&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple node and multiple actor animation with textures&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Show or hide bones/skeleton of the model.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="https://user-images.githubusercontent.com/74976752/217645367-f901c6ed-ca20-40d6-92dd-f1cd8899ac7a.gif" class="align-center" src="https://user-images.githubusercontent.com/74976752/217645367-f901c6ed-ca20-40d6-92dd-f1cd8899ac7a.gif" style="width: 480px;" /&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Skinning support in glTF: (Under Review)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/685"&gt;fury-gl/fury#685&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Skinning in glTF demo: (Under Review)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/685"&gt;fury-gl/fury#685&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="objectives-in-progress"&gt;
&lt;h2&gt;Objectives in Progress&lt;/h2&gt;
&lt;section id="pbr-and-emission-materials-in-gltf"&gt;
&lt;h3&gt;PBR and emission materials in glTF&lt;/h3&gt;
&lt;p&gt;The glTF format supports Physically based rendering also. PBR allow
renderers to display objects with a realistic appearance under
different lighting conditions, the shading model has to take the
physical properties of the object surface into account. There are
different representations of these physical material properties. One
that is frequently used is the metallic-roughness-model. We have
various material properties already in FURY, we need to apply it to
glTF models as well.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="skinning-for-models-with-no-indices"&gt;
&lt;h3&gt;Skinning for models with no indices&lt;/h3&gt;
&lt;p&gt;The glTF format supports non-indexed geometry (e.g., the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Fox&lt;/span&gt;&lt;/code&gt;
model). We currently do not know how to render the model without
indices. I tried estimating it in this
&lt;a class="reference external" href="https://github.com/xtanion/fury/blob/gltf-indices-fix/fury/gltf.py"&gt;branch&lt;/a&gt;.
However, It fails to render in skinning.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Branch URL:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rendering glTF with no indices: (in-progress)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/xtanion/fury/blob/gltf-indices-fix/fury/gltf.py"&gt;xtanion/fury&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="other-objectives"&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;section id="fetcher-for-importing-gltf-files-from-khronos-gltf-samples"&gt;
&lt;h3&gt;Fetcher for importing glTF files from Khronos-glTF-Samples&lt;/h3&gt;
&lt;p&gt;The
&lt;a class="reference external" href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/"&gt;KhronosGroup/gltf-samples&lt;/a&gt;
contain multiple glTF sample models to test a glTF viewer for free.
Implemented new methods in fetcher that can load all of these models
by (using type) asynchronously. The glTF fetcher is capable
of the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Downloading multiple models asynchronously.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get the path to the downloaded model using it   -  Download any model using the URL of the model.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fetching glTF sample models from github: (Merged)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/602"&gt;fury-gl/fury#602&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fixing github API limit: (Merged)&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/616"&gt;fury-gl/fury#616&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="other-pull-requests"&gt;
&lt;h3&gt;Other Pull Requests&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sphere actor uses repeat_primitive by default&lt;/strong&gt;:
&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/533"&gt;fury-gl/fury/#533&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cone actor uses repeat primitive by default&lt;/strong&gt;:
&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/547"&gt;fury-gl/fury/#547&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Updated code of viz_network_animated to use fury.utils&lt;/strong&gt;:
&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/556"&gt;fury-gl/fury/#556&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Added simulation for Tesseract&lt;/strong&gt;:
&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/559"&gt;fury-gl/fury/#559&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GLTF actor colors from material&lt;/strong&gt;
&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/689"&gt;fury-gl/fury/#689&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="gsoc-weekly-blogs"&gt;
&lt;h3&gt;GSoC weekly blogs&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;My blog posts can be found on the &lt;a class="reference external" href="https://fury.gl/latest/blog/author/Shivam-Anand.html"&gt;FURY
website&lt;/a&gt;
and the &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/"&gt;Python GSoC
blog&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="timeline"&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr class="row-odd"&gt;&lt;th class="head"&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Blog Post Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 0 &lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(24-05-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;My journey to GSoC 2022&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-05-24-my-journey-to-gsoc-2022-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/my-journey-to-gsoc-2022-1/"&gt;Python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 1&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(20-06-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;A basic glTF Importer&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-06-20-week1-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-1-a-basic-gltf-importer/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 2&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(29-06-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Improving Fetcher and Exporting glTF&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id3"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id4"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-06-29-week2-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-2-improving-fetcher-and-exporting-gltf/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 3&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(04-07-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Fixing fetcher adding tests and docs&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id5"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id6"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-07-04-week3-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-3-fixing-fetcher-adding-tests-and-docs/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 4&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(12-07-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Finalizing glTF loader&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id7"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id8"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-07-12-week4-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-4-finalizing-gltf-loader/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 5&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(19-07-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Creating PR for glTF exporter and fixing the loader&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id9"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id10"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-07-19-week5-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-5-creating-pr-for-gltf-exporter-and-fixing-the-loader/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 6&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(25-07-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Extracting the animation data&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id11"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id12"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-07-25-week-6-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-6-extracting-the-animation-data/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 7&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(01-08-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Fixing bugs in animations&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id13"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id14"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-08-01-week-7-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-7-fixing-bugs-in-animations/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 8&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(09-08-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Fixing animation bugs&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id15"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id16"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-08-09-week-08-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-8-fixing-animation-bugs/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 9&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(17-08-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;First working skeletal animation prototype&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id17"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id18"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-08-17-week-09-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-9-first-working-skeletal-animation-prototype/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 10&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(25-08-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Multi-node skinning support&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id19"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id20"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-08-25-week-10-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-10-multi-node-skinning-support/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 11&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(31-08-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Multiple transformations support and adding tests&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id21"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id22"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-08-31-week-11-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-11-multiple-transformations-support-and-adding-tests/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 12&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(08-09-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Adding skeleton as actors and fix global transformation&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id23"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id24"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-09-08-week-12-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-12-adding-skeleton-as-actors-and-fix-global-transformation/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 13&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(15-09-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Multi bone skeletal animations&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id25"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id26"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-09-15-week-13-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-13-multi-bone-skeletal-animation-support/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 14&lt;span class="raw-html"&gt;&lt;br&gt;&lt;/span&gt;(28-09-2022)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Morphing is here !&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id27"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “fury”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-01-29-final-report-shivam.rst&lt;/span&gt;, line 18); &lt;em&gt;&lt;a href="#id28"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “python”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fury.gl/latest/posts/2022/2022-09-28-week-14-shivam.html"&gt;FURY&lt;/a&gt; - &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/xtanions-blog/week-14-morphing-is-here/"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-01-29-final-report-shivam.html"/>
    <summary>Name: Shivam Anand</summary>
    <category term="google" label="google"/>
    <published>2023-01-29T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-09-28-week-14-shivam.html</id>
    <title>Week 14 - Morphing is here!</title>
    <updated>2022-09-28T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-14-morphing-is-here"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;This week, I started with multiple actor support in skinning and managed to do it
successfully. Here’s the preview using the BrainStem model.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe id="player" type="text/html"   width="600" height="340" src="https://user-images.githubusercontent.com/74976752/195650455-927a0238-5db1-4349-99d4-c021db356b66.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Implementing multiple animation channels support (as seen in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Fox&lt;/span&gt;&lt;/code&gt; model). The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;get_skin_timelines()&lt;/span&gt;&lt;/code&gt; method now returns a dictionary of all animation channels with Timeline as their value.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We merged two PRs, &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/689/"&gt;#689&lt;/a&gt; (colors from Material) and &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/643/"&gt;#643&lt;/a&gt; (simple animations).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added ability to load morphing information and create timelines from it. Here’s a preview of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;AnimatedMorphCube&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;AnimatedMorphSphere&lt;/span&gt;&lt;/code&gt; models:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe id="player" type="text/html"   width="600" height="340" src="https://user-images.githubusercontent.com/74976752/195654414-b290900c-b80f-40c7-a49d-5ea8413e906a.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Cleaning and Rebasing Skinning animation PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/685/"&gt;#685&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Creating a PR for morphing code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multi primitive (actor) support in morphing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;No, I didn’t get stuck this week.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-09-28-week-14-shivam.html"/>
    <summary>This week, I started with multiple actor support in skinning and managed to do it
successfully. Here’s the preview using the BrainStem model.</summary>
    <category term="google" label="google"/>
    <published>2022-09-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-09-15-week-13-blog.html</id>
    <title>Week 13 - Multi-bone skeletal animation support</title>
    <updated>2022-09-15T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-13-multi-bone-skeletal-animation-support"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I fixed all the issues with skeletal animations, and we got to see our first render of skeletal animation :).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Implemented a hierarchical timeline system (i.e., one timeline for each bone, and the timeline will contain its parent timeline in a hierarchy).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I figured out that we don’t need to apply the parent transform as we’re applying it to the vertex data while forming the actor. So the skin matrix becomes&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2022/2022-09-15-week-13-blog.rst&lt;/span&gt;, line 18)&lt;/p&gt;
&lt;p&gt;Bullet list ends without a blank line; unexpected unindent.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SkinMatrix&lt;/span&gt; &lt;span class="pre"&gt;=&lt;/span&gt; &lt;span class="pre"&gt;InverseBindPose&lt;/span&gt; &lt;span class="pre"&gt;*&lt;/span&gt; &lt;span class="pre"&gt;BoneDeform&lt;/span&gt;&lt;/code&gt; where &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;BoneDeform&lt;/span&gt; &lt;span class="pre"&gt;=&lt;/span&gt; &lt;span class="pre"&gt;CurrentBoneTransform&lt;/span&gt; &lt;span class="pre"&gt;*&lt;/span&gt; &lt;span class="pre"&gt;ParentBonetransform&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here’s a preview using the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CesiumMan&lt;/span&gt;&lt;/code&gt; model:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;iframe id="player" type="text/html"   width="1280" height="600" src="https://user-images.githubusercontent.com/74976752/190474528-9d66651b-032f-4c7d-9bb6-5ad140017d0c.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Add tests for simple animation PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/643/"&gt;#643&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple actor support for skeletal animation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take a look at Morphing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;No, I didn’t get stuck this week.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-09-15-week-13-blog.html"/>
    <summary>This week I fixed all the issues with skeletal animations, and we got to see our first render of skeletal animation :).</summary>
    <category term="google" label="google"/>
    <published>2022-09-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-09-08-week-12-shivam.html</id>
    <title>Week 12 - Adding skeleton as actors and fix global transformation</title>
    <updated>2022-09-08T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-12-adding-skeleton-as-actors-and-fix-global-transformation"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;I started this week by fixing the segmentation fault for the skinning test. I could not fix this as of now.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I imported the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;RiggedFigure&lt;/span&gt;&lt;/code&gt; model into the Blender and I was quite impressed with how it visualizes each bone. So, I created a function that creates an arrow actor in place of a bone, and by applying the correct transformation, we get the bones of a model in place. Here’s a quick preview of bones in Blender vs bones in FURY:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="https://user-images.githubusercontent.com/74976752/189194609-e55f6285-b5ed-4eb3-9e78-5fb462fb2dee.png" class="align-center" src="https://user-images.githubusercontent.com/74976752/189194609-e55f6285-b5ed-4eb3-9e78-5fb462fb2dee.png" style="width: 500px;" /&gt;
&lt;img alt="https://user-images.githubusercontent.com/74976752/189195853-5b1f8945-9822-48f5-8d55-f13e822a43a7.png" class="align-center" src="https://user-images.githubusercontent.com/74976752/189195853-5b1f8945-9822-48f5-8d55-f13e822a43a7.png" style="width: 500px;" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;After having the bones actor, I noticed that some bones are not aligned correctly. It was happening due to multiplication of the same transformation matrix twice.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also created a function that calculates the total transformation of a node, it eliminates the need to use &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;timeline.get_value&lt;/span&gt;&lt;/code&gt; in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;get_skin_timeline&lt;/span&gt;&lt;/code&gt; function.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;It seems like I fixed everything, but we are not getting the correct model at timestamp 0. We need to find the cause and fix it!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cleaning the Simple Animation PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/643/"&gt;#643&lt;/a&gt;, and merging it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;While applying the timeline, we were getting the identity matrix for timestamp 0.0s, it was set to a new value before. We figured this in our meeting that it’s happening due to some model’s animation not starting from 0.0s.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="https://user-images.githubusercontent.com/74976752/189196234-b28f86f7-223b-40e4-94bf-2ec18d914487.png" class="align-center" src="https://user-images.githubusercontent.com/74976752/189196234-b28f86f7-223b-40e4-94bf-2ec18d914487.png" style="width: 400px;" /&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-09-08-week-12-shivam.html"/>
    <summary>I started this week by fixing the segmentation fault for the skinning test. I could not fix this as of now.</summary>
    <category term="google" label="google"/>
    <published>2022-09-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-08-31-week-11-shivam.html</id>
    <title>Week 11 - Multiple transformations support and adding tests</title>
    <updated>2022-08-31T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-11-multiple-transformations-support-and-adding-tests"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;As decided last week, I added support for multiple animations at the same timestamp. But this didn’t solve the animation problems of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;RiggedSimple&lt;/span&gt;&lt;/code&gt; model.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I figured out that I was not applying the global transform of joints in the skinning matrix causing the joints to move to a new position. I referred to this &lt;a class="reference external" href="https://www.gamedev.net/forums/topic/703803-gltf-skinning-matrix-calculation/"&gt;answer by irradicator&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We had to invert the multiplication order  (ie, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;np.dot(skin_mat,&lt;/span&gt; &lt;span class="pre"&gt;vertex)&lt;/span&gt;&lt;/code&gt; instead of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;np.dot(vertex,&lt;/span&gt; &lt;span class="pre"&gt;skin_mat)&lt;/span&gt;&lt;/code&gt;) for this model. We still need to figure out from where we get the multiplication order of the two.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;iframe id="player" type="text/html"   width="600" height="390" src="https://user-images.githubusercontent.com/74976752/187798821-7306cb13-dfc8-477c-8f86-1f5a6181f08a.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also tried to create a custom Interpolator that does all calculations required for vertex skinning. However, we couldn’t get this working. I got a few suggestions from Mohamed in our meeting, I’ll try to implement those.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added tests for animations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Adding more tests.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fixing the Interpolator.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Order of multiplication in the skinning matrix.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I didn’t get stuck this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-08-31-week-11-shivam.html"/>
    <summary>As decided last week, I added support for multiple animations at the same timestamp. But this didn’t solve the animation problems of RiggedSimple model.</summary>
    <category term="google" label="google"/>
    <published>2022-08-31T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-08-25-week-10-shivam.html</id>
    <title>Week 10 - Multi-node skinning support</title>
    <updated>2022-08-25T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-10-multi-node-skinning-support"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;As we figured out that the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SimpleSkin&lt;/span&gt;&lt;/code&gt; model is not animated as intended. This week I started working with that model;
I figured out that we need to apply the InverseBindMatrix to each timer callback. I had a hard time figuring out what inverse bind matrix actually does.
Here’s a good &lt;a class="reference external" href="https://stackoverflow.com/questions/17127994/opengl-bone-animation-why-do-i-need-inverse-of-bind-pose-when-working-with-gp"&gt;blog&lt;/a&gt; that answers that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In short: The InverseBindMatrix “undoes” any transformation that has already been applied to your model in its bind pose.&lt;/strong&gt; Note: Inverse bind matrix shouldn’t be applied with weights.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I got the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SimpleSkin&lt;/span&gt;&lt;/code&gt; model to work perfectly. Here’s a preview:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;iframe id="player" type="text/html"   width="600" height="390" src="https://user-images.githubusercontent.com/74976752/186712241-eaf8d1b3-f983-4e21-8264-c191b3eb6e4b.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for multiple transformations is still missing. However &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;RiggedSimple&lt;/span&gt;&lt;/code&gt; is also working fine, except that It doesn’t interpolate translation and scaling matrices.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;iframe id="player" type="text/html"   width="600" height="390" src="https://user-images.githubusercontent.com/74976752/186712256-af02c902-f60f-43b9-b257-f706c999557e.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Adding tests and adding support for combining transformation matrices for the same timestamp.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write an Interpolator that applies skinning to the mesh internally.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I didn’t get stuck this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-08-25-week-10-shivam.html"/>
    <summary>As we figured out that the SimpleSkin model is not animated as intended. This week I started working with that model;
I figured out that we need to apply the InverseBindMatrix to each timer callback. I had a hard time figuring out what inverse bind matrix actually does.
Here’s a good blog that answers that.</summary>
    <category term="google" label="google"/>
    <published>2022-08-25T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-08-17-week-09-shivam.html</id>
    <title>Week 9 - First working skeletal animation prototype</title>
    <updated>2022-08-17T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-9-first-working-skeletal-animation-prototype"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This week I had the first working &lt;a class="reference external" href="https://github.com/xtanion/fury/blob/gltf-skin-test/docs/tutorials/01_introductory/viz_skinning.py"&gt;example&lt;/a&gt; of skeletal animation ready. I was able to render the &lt;a class="reference external" href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/SimpleSkin"&gt;SimpleSkin&lt;/a&gt; model. Here’s a quick preview:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;iframe id="player" type="text/html"   width="600" height="390" src="https://user-images.githubusercontent.com/74976752/184981715-a83a8a36-f2bf-4ff1-9366-0c302dcf3f9b.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I wrote a custom &lt;a class="reference external" href="https://github.com/xtanion/fury/blob/e5b2b9b4984f244fb4a8e8b410d494ba7d17cb49/fury/gltf.py#L684"&gt;interpolator&lt;/a&gt; (just like the tangent cubic spline interpolator) for interpolating two transformation matrices.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Generalising the skinning code to work with other models as well (it supports only the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SimpleSkin&lt;/span&gt;&lt;/code&gt; model as of now).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Creating a custom interpolator to interpolate more than 4 matrices at once.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I didn’t get stuck this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-08-17-week-09-shivam.html"/>
    <summary>This week I had the first working example of skeletal animation ready. I was able to render the SimpleSkin model. Here’s a quick preview:</summary>
    <category term="google" label="google"/>
    <published>2022-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-08-09-week-08-shivam.html</id>
    <title>Week 8 - Fixing animation bugs</title>
    <updated>2022-08-10T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-8-fixing-animation-bugs"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I had to fix the transformation issue in glTF animation. As discussed in the last meeting, I disabled vertex transformation and applied the transformation after the actor was formed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Creating transformation matrix using the TRS data from nodes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extract Translation, Rotation, and Scale matrices from the transformation matrix.&lt;/p&gt;
&lt;iframe id="player" type="text/html"   width="640" height="360" src="https://user-images.githubusercontent.com/74976752/184015060-48d79f0d-1377-4f69-b147-cd53448ccf02.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also started investigating more on the skinning animation.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;I created functions to extract and apply the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;InvertBindMatrices&lt;/span&gt;&lt;/code&gt; to the vertices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also, applying the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;globalTransformMatrices&lt;/span&gt;&lt;/code&gt; to the mesh.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Skeletal animations support&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Even after applying the transformation to the actor, after it’s created. Some models did not behave as intended. We still need to figure this issue out and fix it.&lt;/p&gt;
&lt;iframe id="player" type="text/html"   width="640" height="360" src="https://user-images.githubusercontent.com/74976752/184015110-035f1ce7-5a5c-4480-b49c-ae575d4b7ccd.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-08-09-week-08-shivam.html"/>
    <summary>This week I had to fix the transformation issue in glTF animation. As discussed in the last meeting, I disabled vertex transformation and applied the transformation after the actor was formed.</summary>
    <category term="google" label="google"/>
    <published>2022-08-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-08-01-week-7-shivam.html</id>
    <title>Week 7 - Fixing bugs in animations</title>
    <updated>2022-08-01T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-7-fixing-bugs-in-animations"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This week I started with implementing scaling to the animation example.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I had a meeting with Mohamed in which we discussed the rotation issue, and we found out that glTF uses &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Slerp&lt;/span&gt;&lt;/code&gt; interpolator instead of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;LinearInterpolator&lt;/span&gt;&lt;/code&gt;. Using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Slerp&lt;/span&gt;&lt;/code&gt; interpolator for rotation fixed the rotation issue.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another issue we faced was with the multi-actor system. Some actors weren’t rotating or translating as intended. This was caused because the transformations were applied to the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;polydata&lt;/span&gt;&lt;/code&gt; before creating an actor; Mohamed suggested applying transformation after the actor is created from polydata (keeping the center to origin).&lt;/p&gt;
&lt;iframe id="player" type="text/html"   width="640" height="360" src="https://user-images.githubusercontent.com/74976752/182166133-585d06ef-55ff-48db-8ce7-98b377ebf8ec.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Expected animation: &lt;a class="reference external" href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/InterpolationTest"&gt;Interpolation Test Sample&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Created functions to return a list of animation timelines and apply them to the main timeline for keyframe animations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CubicSpline&lt;/span&gt;&lt;/code&gt; has not been implemented to glTF animation yet since it works differently than other Interpolators (takes tangent input to smoothen the curve) but it’ll be done before our next meeting.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Adding skinning animations support&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I still need to figure out how to apply the transformation matrix to the actor and not to the polydata.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-08-01-week-7-shivam.html"/>
    <summary>This week I started with implementing scaling to the animation example.</summary>
    <category term="google" label="google"/>
    <published>2022-08-01T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2022/2022-07-25-week-6-shivam.html</id>
    <title>Week 6 - Extracting the animation data</title>
    <updated>2022-07-25T00:00:00+00:00</updated>
    <author>
      <name>Shivam Anand</name>
    </author>
    <content type="html">&lt;section id="week-6-extracting-the-animation-data"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This week, it was all about reading docs and extracting the animation data from buffers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Currently, the glTF class can extract simple node transformation and morphing data, as they are stored in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Animations&lt;/span&gt;&lt;/code&gt; of the glTF file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Skinning (Skeletal Animation) data is stored in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Nodes&lt;/span&gt;&lt;/code&gt; inside the skin parameter. We shall be able to load that before our next meeting on Wednesday.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Created a &lt;a class="reference external" href="https://github.com/xtanion/fury/blob/gltf-anim-merge-kf/docs/tutorials/01_introductory/viz_simple_gltf_animation.py"&gt;tutorial&lt;/a&gt; using keyframe animations (&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/626"&gt;#626&lt;/a&gt;) and adding multiple &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;timelines&lt;/span&gt;&lt;/code&gt; into a main &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;timeline&lt;/span&gt;&lt;/code&gt; as suggested by Mohamed.&lt;/p&gt;
&lt;iframe id="player" type="text/html"   width="550" height="400" src="https://user-images.githubusercontent.com/74976752/180841262-7356204e-2097-4ea4-ab71-39f04a1e7a07.mp4" frameborder="0"&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;As of now, we’ve decided the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Create a custom Interpolator (for simple node transformations, morph and Skeletal animations).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I didn’t get stuck this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2022/2022-07-25-week-6-shivam.html"/>
    <summary>This week, it was all about reading docs and extracting the animation data from buffers.</summary>
    <category term="google" label="google"/>
    <published>2022-07-25T00:00:00+00:00</published>
  </entry>
</feed>
