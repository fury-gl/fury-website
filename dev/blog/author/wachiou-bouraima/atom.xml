<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts by Wachiou BOURAIMA</title>
  <updated>2024-07-14T05:59:00.594840+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/author/wachiou-bouraima/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.10">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2024/2024-07-06-week5-wachiou-bouraima.html</id>
    <title>WEEK 5: Implementing Lazy Loading in FURY with lazy_loader</title>
    <updated>2024-07-06T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-5-implementing-lazy-loading-in-fury-with-lazy-loader"&gt;

&lt;section id="hello-everyone"&gt;
&lt;h2&gt;Hello everyone,&lt;/h2&gt;
&lt;p&gt;Welcome back to my Google Summer of Code (GSoC) 2024 journey! This week has been particularly exciting as I introduced a significant performance optimization feature: lazy loading. Here’s an overview of my progress and contributions.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="introduction-of-lazy-loading"&gt;
&lt;h2&gt;&lt;strong&gt;Introduction of lazy loading&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;This week, I focused on implementing the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;lazy_loader&lt;/span&gt;&lt;/code&gt; feature of &lt;a class="reference external" href="https://scientific-python.org/"&gt;Scientific Python&lt;/a&gt; to optimize module loading in FURY. Lazy loading improves performance by deferring the loading of modules until they are actually needed, thus reducing start-up times and memory footprint.&lt;/p&gt;
&lt;p&gt;The implementation involved:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Implementation of Lazy Loading:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Application of lazy loading in several FURY modules using the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;lazy_loader&lt;/span&gt;&lt;/code&gt; module to improve performance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.py&lt;/span&gt;&lt;/code&gt; files:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Modified &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.py&lt;/span&gt;&lt;/code&gt; files to support lazy loading where necessary. This ensures that modules are only loaded when they are accessed for the first time&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added Type Stubs (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.pyi&lt;/span&gt;&lt;/code&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Adding type stubs (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.pyi&lt;/span&gt;&lt;/code&gt;) provides type hints for lazy-loading modules, improving code readability and maintainability&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Improved module organization:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Improved module organization in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.py&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.pyi&lt;/span&gt;&lt;/code&gt; files, to effectively support lazy loading.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="example-implementation"&gt;
&lt;h2&gt;&lt;strong&gt;Example Implementation&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To give you an idea, here’s the actual implementation of how lazy loading was done using the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;lazy_loader&lt;/span&gt;&lt;/code&gt; module in FURY:&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.py&lt;/span&gt;&lt;/code&gt; File:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lazy_loader&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;lazy&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fury.pkg_info&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;__version__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pkg_commit_hash&lt;/span&gt;

&lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="fm"&gt;__dir__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;__all__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach_stub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;_all__&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;__version__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;disable_warnings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;enable_warnings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;get_info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# ... (functions)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__.pyi&lt;/span&gt;&lt;/code&gt; File:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# This file is a stub type for the fury package. It provides information about types&lt;/span&gt;
&lt;span class="c1"&gt;# to help type-checking tools like mypy and improve the development experience&lt;/span&gt;
&lt;span class="c1"&gt;# with better autocompletion and documentation in code editors.&lt;/span&gt;

&lt;span class="n"&gt;__all__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;actor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;actors&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;animation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;colormap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# ... (other modules)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;actors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;colormap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;# ... (other modules)&lt;/span&gt;
        &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# ... (other functions)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can review the implementation in &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/907/"&gt;this pull request&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="reading-spec1"&gt;
&lt;h2&gt;Reading &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SPEC1&lt;/span&gt;&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;To align myself with best practice, I read the &lt;a class="reference external" href="https://scientific-python.org/specs/spec-0001/"&gt;SPEC1&lt;/a&gt; document available at Scientific Python SPEC1. This document provided valuable hints and guidelines that I took into account when implementing the lazy loading feature.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, I didn’t encounter any major blockers this week. The implementation of lazy loading went smoothly, and I was able to complete the task.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-s-next"&gt;
&lt;h2&gt;&lt;strong&gt;What’s Next?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;For the next week, I plan to:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Review all my Pull Requests with my mentor &lt;a class="reference external" href="https://github.com/skoudoro/"&gt;Serge Koudoro&lt;/a&gt;, to ensure everything is up to FURY’s standards.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start working on the redesign of the FURY website, making it more user-friendly and visually appealing.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thank you for reading. Stay tuned for more updates on my progress!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-07-06-week5-wachiou-bouraima.html"/>
    <summary>Welcome back to my Google Summer of Code (GSoC) 2024 journey! This week has been particularly exciting as I introduced a significant performance optimization feature: lazy loading. Here’s an overview of my progress and contributions.</summary>
    <category term="google" label="google"/>
    <published>2024-07-06T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-06-26-week4-wachiou-bouraima.html</id>
    <title>WEEK 4: Updating Decorator, Exploring Lazy Loading, and Code Reviews</title>
    <updated>2024-06-26T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-4-updating-decorator-exploring-lazy-loading-and-code-reviews"&gt;

&lt;section id="hello-everyone"&gt;
&lt;h2&gt;Hello everyone,&lt;/h2&gt;
&lt;p&gt;Welcome again to my Google summer of code 2024 (GSoC’ 2024) journey 2024!.
This week, I focused on updating the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator, applying it across multiple modules, exploring lazy loading, and continuing with code reviews.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="updating-the-warn-on-args-to-kwargs-decorator"&gt;
&lt;h2&gt;Updating the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator&lt;/h2&gt;
&lt;p&gt;Based on feedback from my mentor &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt;  and peers  &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo Tellaetxe Elorriaga&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka&lt;/a&gt;, I refined the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator and its associated unit tests:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Improvements:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Added conditions to verify if the values of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;from_version&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;until_version&lt;/span&gt;&lt;/code&gt;, and the current version of FURY are respected. This includes handling cases where &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;from_version&lt;/span&gt;&lt;/code&gt; is greater than the current version of FURY, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;until_version&lt;/span&gt;&lt;/code&gt; is less than the current version of FURY, and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;until_version&lt;/span&gt;&lt;/code&gt; is greater than or equal to the current version of FURY.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensured the decorator and tests cover a broader range of edge cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enhanced the warning messages for better clarity and guidance.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Doctest Updates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Updated the doctest considering the values of &lt;cite&gt;from_version&lt;/cite&gt; and &lt;cite&gt;until_version&lt;/cite&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Moved the doctest from the &lt;cite&gt;def decorator()&lt;/cite&gt; function to the root function.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unit Tests:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_warn_on_args_to_kwargs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nd"&gt;@warn_on_args_to_kwargs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;

&lt;span class="c1"&gt;# if FURY_CURRENT_VERSION is less than from_version&lt;/span&gt;
&lt;span class="n"&gt;fury&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.0.0&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;npt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;npt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;npt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_raises&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;This ensures robust validation and helps catch potential issues early.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="applying-the-warn-on-args-to-kwargs-decorator"&gt;
&lt;h2&gt;Applying the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; Decorator&lt;/h2&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-06-26-week4-wachiou-bouraima.rst&lt;/span&gt;, line 51)&lt;/p&gt;
&lt;p&gt;Title underline too short.&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Applying the ``warn_on_args_to_kwargs`` Decorator
-----------------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;
&lt;p&gt;This week, I applied the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator to several modules, ensuring consistent usage and improved code quality. The modules updated include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;actors&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;ui&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;animation&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;shares&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;data&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each module, I opened a pull request to track the changes and facilitate reviews:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;actors&lt;/cite&gt;: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/898"&gt;fury-gl/fury#898&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;animation&lt;/cite&gt;: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/899"&gt;fury-gl/fury#899&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;data&lt;/cite&gt;: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/900"&gt;fury-gl/fury#900&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;shares&lt;/cite&gt;: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/901"&gt;fury-gl/fury#901&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;ui&lt;/cite&gt;: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/902"&gt;fury-gl/fury#902&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="exploring-lazy-loading"&gt;
&lt;h2&gt;Exploring lazy loading&lt;/h2&gt;
&lt;p&gt;In order to optimize performance, I’ve started exploring and implementing lazy loading. This week, the focus was on the following points:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Getting to grips with how the lazy loader works&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implementing some small script to understand how the lazy loader works&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also read the SPEC1 document available at &lt;a class="reference external" href="https://scientific-python.org/specs/spec-0001/"&gt;SPEC1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understanding the benefits of lazy loading and how it can be applied to the FURY code base&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Planning the integration of lazy loading into the FURY code base&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code sample: &lt;a class="reference external" href="https://gist.github.com/WassCodeur/98297d7a59b27979d27945760e3ffb10"&gt;https://gist.github.com/WassCodeur/98297d7a59b27979d27945760e3ffb10&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="peer-code-review"&gt;
&lt;h2&gt;Peer Code Review&lt;/h2&gt;
&lt;p&gt;This week, I continued to dedicate time to reviewing the code of my peers. Specifically, I reviewed Kaustav Deka’s work, providing constructive feedback and suggestions for improvement. You can view the pull request here: &lt;a class="github reference external" href="https://github.com/dipy/dipy/pull/3239"&gt;dipy/dipy#3239&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="acknowledgements"&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-06-26-week4-wachiou-bouraima.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “iñigo tellaetxe elorriaga”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-06-26-week4-wachiou-bouraima.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “robin roy”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-06-26-week4-wachiou-bouraima.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id3"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “kaustav deka”.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-06-26-week4-wachiou-bouraima.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id4"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “serge koudoro”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;I am deeply grateful to my classmates &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo Tellaetxe Elorriaga&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka&lt;/a&gt;  for their continuous support and insightful suggestions. Special thanks to my mentor, &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt; , whose expertise and guidance have been invaluable in navigating these technical challenges.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck"&gt;
&lt;h2&gt;Did I get stuck?&lt;/h2&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-06-26-week4-wachiou-bouraima.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id5"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “serge koudoro”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Yes, I was a bit confused about understanding lazy loader, but thanks to the help of my mentor &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt; , I was able to understand it better.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-s-next"&gt;
&lt;h2&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;For the upcoming week, I plan to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Implement lazy loading in the FURY code base&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Continue refining the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator based on feedback&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engage in more code reviews to support my peers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare to working on the FURY website to improve the documentation and user experience&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you for following my progress. Your feedback is always welcome.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-06-26-week4-wachiou-bouraima.html"/>
    <summary>Welcome again to my Google summer of code 2024 (GSoC’ 2024) journey 2024!.
This week, I focused on updating the warn_on_args_to_kwargs decorator, applying it across multiple modules, exploring lazy loading, and continuing with code reviews.</summary>
    <category term="google" label="google"/>
    <published>2024-06-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-06-26-week3-wachiou-bouraima.html</id>
    <title>WEEK 3: Refinements and Further Enhancements</title>
    <updated>2024-06-26T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-3-refinements-and-further-enhancements"&gt;

&lt;section id="hello-everyone"&gt;
&lt;h2&gt;Hello everyone,&lt;/h2&gt;
&lt;p&gt;Welcome to the fourth week of my Google Summer of Code (GSoC) 2024 journey!
This week I’ve been delving into the technical aspects of my project,
focusing on the consistent application of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator and the initial implementation of lazy loading.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="consistent-application-of-warn-on-args-to-kwargs"&gt;
&lt;h2&gt;Consistent application of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This week I continued to apply the decorator to functions.
To ensure consistency across the code base, I audited all functions that could benefit from the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator.
To do this, I had to:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Identify target functions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Identify functions that could benefit from the decorator.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;continue reviewing the code base to identify functions that accept both positional and keyword arguments.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applying the Decorator:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;For each identified function, I added the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Example:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@warn_on_args_to_kwargs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_actor_from_primitive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;triangles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;normals&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;backface_culling&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;prim_count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;p&gt;Updating Unit Tests:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2024/2024-06-26-week3-wachiou-bouraima.rst&lt;/span&gt;, line 2)&lt;/p&gt;
&lt;p&gt;Enumerated list start value not ordinal-1: “3” (ordinal 3)&lt;/p&gt;
&lt;/aside&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;updated all the unit tests for the functions where the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator is applied to ensure they respect the new format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Example:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;actr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_actor_from_primitive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_verts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;big_faces&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;big_colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;You can find more details and the implementation in my pull request: &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/888"&gt;fury-gl/fury#888&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-happens-next"&gt;
&lt;h2&gt;What Happens Next?&lt;/h2&gt;
&lt;p&gt;For week 4, I plan to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Continue refining the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator based on feedback from my Peers &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo Tellaetxe Elorriaga&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka&lt;/a&gt;, my guide: &lt;a class="reference external" href="https://github.com/skoudoro"&gt;Serge Koudoro&lt;/a&gt; and the other community members.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apply the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator to all the remaining modules and update all the unit tests of these modules too, to respect the desired format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dive deep into the lazy loading functionality based on my research to optimize performance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Further engage in code reviews to support my peers and improve our project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck"&gt;
&lt;h2&gt;Did I get stuck?&lt;/h2&gt;
&lt;p&gt;I didn’t get stuck.&lt;/p&gt;
&lt;p&gt;Thank you for following my progress. Your feedback is always welcome.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-06-26-week3-wachiou-bouraima.html"/>
    <summary>Welcome to the fourth week of my Google Summer of Code (GSoC) 2024 journey!
This week I’ve been delving into the technical aspects of my project,
focusing on the consistent application of the warn_on_args_to_kwargs decorator and the initial implementation of lazy loading.</summary>
    <category term="google" label="google"/>
    <published>2024-06-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-06-15-week2-wachiou-bouraima.html</id>
    <title>WEEK 2: Refinements and Further Enhancements</title>
    <updated>2024-06-15T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-2-refinements-and-further-enhancements"&gt;

&lt;section id="hello-again"&gt;
&lt;h2&gt;Hello again,&lt;/h2&gt;
&lt;p&gt;Welcome back to my Google Summer of Code (GSoC) 2024 journey! This week has been dedicated to refining and improving the work done so far, with a particular focus on the keyword_only decorator.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="renaming-and-updating-the-decorator"&gt;
&lt;h2&gt;Renaming and Updating the Decorator&lt;/h2&gt;
&lt;p&gt;This week, I’ve updated &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/888"&gt;this Pull Request&lt;/a&gt; by renaming the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;keyword_only&lt;/span&gt;&lt;/code&gt; decorator to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; for greater clarity. The updated decorator now includes version parameters from_version and until_version. This enhancement ensures that the decorator will raise a RuntimeError if the current version of FURY is greater than until_version.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="peer-code-review"&gt;
&lt;h2&gt;Peer Code Review&lt;/h2&gt;
&lt;p&gt;I also spent time reviewing &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka’s&lt;/a&gt; code. This exercise remains rewarding, as it helps me understand different coding styles and approaches. Constructive feedback and suggestions from my classmates were invaluable, not only in helping my teammates but also in improving my own coding and reviewing skills.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="research-into-lazy-loading"&gt;
&lt;h2&gt;Research into lazy loading&lt;/h2&gt;
&lt;p&gt;In parallel, I started researching the lazy loading feature and thinking about how to implement it. This feature will optimize performance by loading resources only when they’re needed, which is crucial to improving the efficiency of FURY’s code base.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="acknowledgements"&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;I am deeply grateful to my classmates &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo Tellaetxe Elorriaga&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka&lt;/a&gt; for their insightful suggestions and comments on my work.
Special thanks to my mentor, &lt;a class="reference external" href="https://github.com//skoudoro"&gt;Serge Koudoro&lt;/a&gt;, whose guidance and support enabled me to meet the challenges of this project.
Their combined efforts have greatly contributed to my progress, and I appreciate their continued help.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-happens-next"&gt;
&lt;h2&gt;What happens next?&lt;/h2&gt;
&lt;p&gt;For week 3, I plan to :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Ensure that the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;warn_on_args_to_kwargs&lt;/span&gt;&lt;/code&gt; decorator is applied consistently in all necessary functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Continue to update the calling of these functions in the code to maintain consistency and avoid warnings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refine decorator as necessary based on feedback and testing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start implementing lazy loading functionality based on my research to optimize performance.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🥰 Thank you for taking the time to follow my progress. Your feedback is always welcome and I look forward to sharing more updates with you next week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-06-15-week2-wachiou-bouraima.html"/>
    <summary>Welcome back to my Google Summer of Code (GSoC) 2024 journey! This week has been dedicated to refining and improving the work done so far, with a particular focus on the keyword_only decorator.</summary>
    <category term="google" label="google"/>
    <published>2024-06-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-06-06-week1-wachiou-bouraima.html</id>
    <title>WEEK 1: Progress and challenges at Google Summer of Code (GSoC) 2024</title>
    <updated>2024-06-06T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-1-progress-and-challenges-at-google-summer-of-code-gsoc-2024"&gt;

&lt;p&gt;Hello👋🏾,&lt;/p&gt;
&lt;p&gt;Welcome back to my Google Summer of Code (GSoC) 2024 journey!
This week has been filled with progress and challenges as I continue to work on modernizing the FURY code base.&lt;/p&gt;
&lt;section id="applying-the-keyword-only-decorator"&gt;
&lt;h2&gt;Applying the keyword_only decorator&lt;/h2&gt;
&lt;p&gt;My main task this week was to apply the keyword_only decorator to several functions.
The decorator ensures that all arguments except the first are keyword-only,
which helps to make the code clearer and parameter passing more explicit.
Some warnings appeared after applying this decorator, and to resolve them,
I updated all the code where these functions were called with the necessary format. This was a very important step in maintaining the integrity and functionality of the code base.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="managing-the-challenges-of-git-rebasing"&gt;
&lt;h2&gt;Managing the challenges of Git rebasing&lt;/h2&gt;
&lt;p&gt;Rebasing the branch I was working on was the other major activity of my week.
It was a real challenge because of the conflicts that arose and had to be resolved.
It involved a lot of research and problem-solving on how to resolve these conflicts,
which greatly enhanced my understanding of Git. It was a challenging but satisfying experience of version control management and complex mergers.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="peer-code-review"&gt;
&lt;h2&gt;Peer code review&lt;/h2&gt;
&lt;p&gt;In addition to my duties, I was also tasked with reviewing the code of my peers.
This exercise was very rewarding, as it enabled me to understand different coding styles and approaches.
The constructive comments and suggestions were beneficial not only for teammates,
but also for improving my own coding and reviewing skills.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="acknowledgements"&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;I would like to thank all my classmates: &lt;a class="reference external" href="https://github.com/itellaetxe"&gt;Iñigo Tellaetxe Elorriaga&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/robinroy03"&gt;Robin Roy&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/deka27"&gt;Kaustav Deka&lt;/a&gt; and my guide: &lt;a class="reference external" href="https://github.com//skoudoro"&gt;Serge Koudoro&lt;/a&gt; for their constructive suggestions on my work.
Their ideas and suggestions were of great help to me and I am grateful for their support and advice.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-happens-next"&gt;
&lt;h2&gt;What happens next?&lt;/h2&gt;
&lt;p&gt;Here’s a summary of what I plan to do in week two:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Apply the keyword_only decorator to all other necessary functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the calling of these functions in the code to ensure consistency and avoid raising warnings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rename the decorator with a more descriptive name.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add two parameters to the decorator, specifying from which version of FURY it will work.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🥰Thanks for reading! Your comments are most welcome, and I look forward to giving you a sneak preview of my work next week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-06-06-week1-wachiou-bouraima.html"/>
    <summary>Hello👋🏾,</summary>
    <category term="google" label="google"/>
    <published>2024-06-06T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2024/2024-05-28-first-post-wachiou-bouraima.html</id>
    <title>WEEK 0: The beginning of my journey in Google Summer of Code (GSoC) 2024</title>
    <updated>2024-05-28T00:00:00+00:00</updated>
    <author>
      <name>Wachiou BOURAIMA</name>
    </author>
    <content type="html">&lt;section id="week-0-the-beginning-of-my-journey-in-google-summer-of-code-gsoc-2024"&gt;

&lt;section id="here-we-go"&gt;
&lt;h2&gt;Here we go…..&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Hello and welcome to my GSoC 24 journey, I’m Wachiou Bouraima pronounced (Wasiu Ibrahima).&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;First of all, I’d like to express my deep gratitude for this immense opportunity.&lt;/div&gt;
&lt;div class="line"&gt;In this first article, yes you read “first article” correctly, as it won’t be the only one, I’m going to share with you my first adventures in GSoC’24. Happy read&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="welcome-and-integration-into-the-community"&gt;
&lt;h2&gt;Welcome and integration into the community.&lt;/h2&gt;
&lt;p&gt;Like any good start, this week I have the incredible opportunity to be welcomed into the community by the Core Team and my Mentor himself, during this session the Mentors welcomed us warmly and also congratulated us. They shared with us the rules respected during and after the GSoC program. This session made me feel comfortable and confident.&lt;/p&gt;
&lt;p&gt;I also have to admit that the mentors are experienced and willing to share their knowledge, which I really appreciate. I also got to know the DIPY and FURY community members.&lt;/p&gt;
&lt;p&gt;Not only that, but I also attended the GSoC’24 summit organised by Google. This session was very informative and aimed to ease our way into GSoC’24, and help us avoid certain mistakes during and after the program.
I was able to meet the other GSoC students, and I must say that they are all very talented and motivated. I am very happy to be part of this community.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="project-details"&gt;
&lt;h2&gt;Project details&lt;/h2&gt;
&lt;p&gt;I will work on the project: &lt;strong&gt;Modernization of the FURY code base to improve readability, maintainability and performance&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This project aims to modernize the FURY code base by implementing keyword-only arguments to improve code clarity and explicit parameter passing. In addition, the integration of lazy loading functionality will optimize performance by loading resources only when they are needed. Finally, active participation in code refactoring efforts will improve the structure and maintainability of the FURY code base. The project will result in a modernized code base, comprehensive unit testing, updated Sphinx documentation and public presentations illustrating the improvements and benefits. Ultimately, the aim is to significantly improve the FURY code base for future developers and users.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="weekly-tasks"&gt;
&lt;h2&gt;Weekly tasks&lt;/h2&gt;
&lt;p&gt;I had to work on my first mission of the adventure, which was to create a decorator named &lt;strong&gt;keyword_only&lt;/strong&gt; to ensure that all arguments after the first are keyword arguments only. It also checks that all keyword arguments are expected by the function. You can check what I had to do in this Pull Request : &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/888"&gt;fury-gl/fury#888&lt;/a&gt;. I’ve learned a lot from implementing the &lt;strong&gt;keyword_only&lt;/strong&gt; decorator&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-s-next"&gt;
&lt;h2&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;For my next task, I’ll first apply the advice and comments from my first task, adding the &lt;strong&gt;keyword_only&lt;/strong&gt; decorator after all the necessary reviews and member approval, on all the functions concerned next, then I’ll start and finish, integrating the lazy loading feature.&lt;/p&gt;
&lt;p&gt;🥰 Thank you for reading. Your comments are most welcome, and I learn from them.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2024/2024-05-28-first-post-wachiou-bouraima.html"/>
    <summary>Like any good start, this week I have the incredible opportunity to be welcomed into the community by the Core Team and my Mentor himself, during this session the Mentors welcomed us warmly and also congratulated us. They shared with us the rules respected during and after the GSoC program. This session made me feel comfortable and confident.</summary>
    <category term="google" label="google"/>
    <published>2024-05-28T00:00:00+00:00</published>
  </entry>
</feed>
