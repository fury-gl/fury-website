<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts by Soham Biswas</title>
  <updated>2023-03-03T16:04:48.170662+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/author/soham-biswas/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.33.post1">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2020/2020-06-28-week-5-soham.html</id>
    <title>May the Force be with you!!</title>
    <updated>2020-06-28T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="may-the-force-be-with-you"&gt;

&lt;p&gt;Hello and welcome to my 5th weekly check-in, I will be sharing my progress of pyBullet Physics Engine Integration with FURY. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;Last week due to the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;vtkTextActor&lt;/span&gt;&lt;/code&gt; sizing issue I was not able to continue my work with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ComboBox2D&lt;/span&gt;&lt;/code&gt; UI element. Thus, I decided to work on the “Physics Engine Integration” part of my project. It took me quite a while to understand the terminology of various methods and algorithms used for detection and physics simulation. Nevertheless, I was able to create a couple of rigid body examples to showcase the integration procedure. For physics calculations we used pyBullet and for rendering we used FURY. In other words, pyBullet will handle the backend part of the simulation and FURY will handle the frontend. I have documented the entire integration process &lt;a class="reference external" href="https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing"&gt;here&lt;/a&gt; in detail.&lt;/p&gt;
&lt;section id="ball-collision-simulation"&gt;
&lt;h3&gt;Ball Collision Simulation:&lt;/h3&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/85949638-988e5b80-b975-11ea-85ba-16c1f78dec89.gif" src="https://user-images.githubusercontent.com/29832615/85949638-988e5b80-b975-11ea-85ba-16c1f78dec89.gif" /&gt;
&lt;p&gt;For the first example, I created a simple collision between two balls in which two spheres were created both in FURY and pyBullet world and then both the worlds are connected by syncing the position and orientation of the said bodies. Timer callback is created to update the positions and to simulate Physics for each step.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="brick-wall-simulation"&gt;
&lt;h3&gt;Brick Wall Simulation:&lt;/h3&gt;
&lt;img alt="https://raw.githubusercontent.com/Nibba2018/testing-fury/master/2020-06-26_21-15-47.gif" src="https://raw.githubusercontent.com/Nibba2018/testing-fury/master/2020-06-26_21-15-47.gif" /&gt;
&lt;p&gt;For the second example I tried to increase the complexity of the simulations by increasing the number of dynamic objects. Here a brick-wall is created using 100 bricks and then a ball is thrown at it. The rest of it is simulated. The same concepts from the first example is used to render the second one. Timer callback is created to update position of all the objects and to simulate Physics for each step.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;In the above examples I used a separate actor for each object which is highly un-optimized. Thus, my mentor suggested me to render all the bricks using a single actor, so that the simulation is more optimized. I am not very confident in changing the position and orientation of different objects rendered by a single actor. Therefore, I will have to research a bit more about it. Apart from that I will also try to work on Constraint based simulation examples if possible.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;The pyBullet documentation isn’t well written for cross rendering, hence it was a bit of a challenge for me to implement the integration. I also faced a problem regarding the offset of actors between the FURY world and pyBullet world. Both use different coordinate systems for rendering and simulation because of which I had a constant offset between the objects during simulations. I was able to fix it by converting one coordinate system to the other. Apart from this I did not have any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-06-28-week-5-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 5th weekly check-in, I will be sharing my progress of pyBullet Physics Engine Integration with FURY. The official repository of my sub-org, FURY can always be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-06-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-07-05-week-6-soham.html</id>
    <title>Translation, Reposition, Rotation.</title>
    <updated>2020-07-05T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="translation-reposition-rotation"&gt;

&lt;p&gt;Hello and welcome to my 6th weekly check-in. The first evaluation period officially ends and I am very excited to move on to the second coding period. I will be sharing my progress with handling specific object’s properties among various multiple objects rendered by a single actor. I am mainly focusing on making it easier to translate, rotate and reposition a particular object, so that I can use them to render physics simulations more efficiently. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;Last week I worked on physics simulations rendered in FURY with the help of pyBullet. Now the simulations were highly un-optimized, specially the brick wall simulation as each brick was rendered by its own actor. In other words, 1 brick = 1 actor. Now my objective was to render all the bricks using a single actor, but before jumping into the simulation I had to figure out how to modify specific properties of an individual object. Thanks to my mentor’s &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/233"&gt;PR&lt;/a&gt;, I was able to experiment my implementations quickly.&lt;/p&gt;
&lt;section id="translation"&gt;
&lt;h3&gt;Translation:&lt;/h3&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/86536066-5085b080-bf02-11ea-9bcd-9e555adc2ca1.gif" src="https://user-images.githubusercontent.com/29832615/86536066-5085b080-bf02-11ea-9bcd-9e555adc2ca1.gif" /&gt;
&lt;p&gt;The algorithm behind translation is to first identify the vertices of the object, then bring the vertices to the origin by subtracting their centers and then adding the displacement vector. The said operation can be achieved by the following snippet:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Update vertices positions
vertices[object_index * sec: object_index * sec + sec] = \
    (vertices[object_index * sec: object_index * sec + sec] - centers[object_index]) + transln_vector​
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="rotation"&gt;
&lt;h3&gt;Rotation:&lt;/h3&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/86536065-4fed1a00-bf02-11ea-815d-f7f297165c53.gif" src="https://user-images.githubusercontent.com/29832615/86536065-4fed1a00-bf02-11ea-815d-f7f297165c53.gif" /&gt;
&lt;p&gt;The algorithm behind rotation is to first calculate the difference between the vertices and the center of the object. Once we get the resultant matrix, we matrix multiply it with the rotation matrix and then we further add the centers back to it so that we preserve the position of the object. Rotation matrix can be defined as:&lt;/p&gt;
&lt;img alt="https://wikimedia.org/api/rest_v1/media/math/render/svg/242deb7010fd504134a6cacab3d0ef4ce02e7613" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/242deb7010fd504134a6cacab3d0ef4ce02e7613" /&gt;
&lt;p&gt;where gamma, beta and alpha corresponds to the angle of rotation along Z-axis, Y-axis and X-axis.&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Returns rotational matrix.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;

&lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="n"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="nd"&gt;@get_R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="reposition"&gt;
&lt;h3&gt;Reposition:&lt;/h3&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/86536063-4ebbed00-bf02-11ea-8592-a695d7b91426.gif" src="https://user-images.githubusercontent.com/29832615/86536063-4ebbed00-bf02-11ea-8592-a695d7b91426.gif" /&gt;
&lt;p&gt;Repositioning is similar to that of translation, except in this case, while repositioning we update centers with the new position value.&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;new_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Update vertices positions&lt;/span&gt;
&lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="n"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;new_pos&lt;/span&gt;

&lt;span class="n"&gt;centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_pos&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Currently, I am yet to figure out the orientation problem. Once I figure that out I will be ready to implement simulations without any major issues. I am also tasked with creating a wrecking ball simulation and a quadruped robot simulation.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did face some problems while rotating objects. My mentors suggested me to implement it via rotation matrix. I still haven’t figured out the orientation problem, which I plan to work on next. Apart from these I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-07-05-week-6-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 6th weekly check-in. The first evaluation period officially ends and I am very excited to move on to the second coding period. I will be sharing my progress with handling specific object’s properties among various multiple objects rendered by a single actor. I am mainly focusing on making it easier to translate, rotate and reposition a particular object, so that I can use them to render physics simulations more efficiently. The official repository of my sub-org, FURY can always be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-07-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-07-12-week-7-soham.html</id>
    <title>Orientation, Sizing, Tab UI.</title>
    <updated>2020-07-12T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="orientation-sizing-tab-ui"&gt;

&lt;p&gt;Hello and welcome to my 7th weekly check-in. I will be sharing my progress with single actor physics simulation and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; sizing issue which was pending for quite a while now. I will also be sharing my thoughts regarding the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TAB&lt;/span&gt; &lt;span class="pre"&gt;UI&lt;/span&gt;&lt;/code&gt; component. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I was working with the orientation problem I mentioned in my previous check-in. I did have some problems regarding it, but thanks to my mentor I was able to figure it out and implement it with the help of scipy’s Quaternion to Rotation Matrix &lt;a class="reference external" href="https://github.com/scipy/scipy/blob/v1.5.1/scipy/spatial/transform/rotation.py#L174-L1978"&gt;method&lt;/a&gt;. After understanding the orientation implementation, I spent some time regarding the design of the TAB UI component. I expect the design to be something similar as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/87254337-906b0b80-c49f-11ea-93f3-3af0f2d8de10.png" src="https://user-images.githubusercontent.com/29832615/87254337-906b0b80-c49f-11ea-93f3-3af0f2d8de10.png" /&gt;
&lt;p&gt;Fortunately, we have good news this week. The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; sizing issue that we were facing for quite a while has now been fixed. We simply have to keep track of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;scene&lt;/span&gt;&lt;/code&gt; parameter in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;_add_to_scene&lt;/span&gt;&lt;/code&gt; method of each UI component. This scene parameter inherits &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;vtkViewport&lt;/span&gt;&lt;/code&gt;, hence it allows us to determine the necessary details about the environment of the 3D objects.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;As the sizing issue regarding &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; has been fixed, I am very much eager to finish the remaining work left. &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ComboBox2D&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; were left incomplete because of the issue. Therefore, my main objective next week would be to finish them first. Once I am done with it, I will move on to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Tab&lt;/span&gt; &lt;span class="pre"&gt;UI&lt;/span&gt;&lt;/code&gt;. If not, I will continue with the physics simulation.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Apart from the orientation and sizing problem, I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-07-12-week-7-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 7th weekly check-in. I will be sharing my progress with single actor physics simulation and TextBlock2D sizing issue which was pending for quite a while now. I will also be sharing my thoughts regarding the TAB UI component. The official repository of my sub-org, FURY can always be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-07-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-07-19-week-8-soham.html</id>
    <title>ComboBox2D, TextBlock2D, Clipping Overflow.</title>
    <updated>2020-07-19T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="combobox2d-textblock2d-clipping-overflow"&gt;

&lt;p&gt;Hello and welcome to my 8th weekly check-in. I will be sharing my progress with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ComboBox2D&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; UI components. After solving &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; sizing issue, I was finally able to complete the implementation of combo box. I also faced some problems while refactoring &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt;. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I finished the implementation of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ComboBox2D&lt;/span&gt;&lt;/code&gt;. I also added necessary tests and tutorials to aid the implementation. It still needs some color design, which will be decided later on. Here’s an overview of the tutorial:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/87884567-a8f19d80-ca2c-11ea-8fd2-e7e37b30602f.gif" src="https://user-images.githubusercontent.com/29832615/87884567-a8f19d80-ca2c-11ea-8fd2-e7e37b30602f.gif" /&gt;
&lt;p&gt;Its a simple tutorial where I change the color of the label based on the option selected on the combo box.&lt;/p&gt;
&lt;p&gt;Now while refactoring TextBlock2D, I noticed that the Text Overflow workaround on ListBox2D broke and started acting weird. This was mainly because the size implementation was changed and the code that I wrote a few months back wasn’t relevant anymore. So I removed the previous code and had to re-implement the same. I later found out that I would be needing such an implementation for most of my UI components so I decided to create a separate method for clipping overflowing texts.&lt;/p&gt;
&lt;p&gt;I had to figure out a specific algorithm to achieve this as the height and width of each characters were different and the combined width of multiple characters were not equal to the sum of their widths. I decided to go for a binary search implementation as it was faster compared to a simple linear checking algorithm. The said algorithm works as expected and is more effective compared to its previous implementation. I tweaked the previous combo box example to showcase this algorithm.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/87884568-aabb6100-ca2c-11ea-9ab8-b05bdb8b0631.gif" src="https://user-images.githubusercontent.com/29832615/87884568-aabb6100-ca2c-11ea-9ab8-b05bdb8b0631.gif" /&gt;
&lt;p&gt;The extremely long text is now clipped correctly.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week, I have a couple of things to work on. Firstly, the single actor wall brick simulation is yet to be completed. Once I am done with that I will continue working on Tab UI and try to finish its skeletal implementation.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did get stuck regarding the previous implementation of Text Overflow in ListBox2D. Before the current implementation it looked something like this:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/87430848-6b8fa900-c603-11ea-87b8-327f6e7f2ee0.png" src="https://user-images.githubusercontent.com/29832615/87430848-6b8fa900-c603-11ea-87b8-327f6e7f2ee0.png" /&gt;
&lt;p&gt;Apart from that, I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-07-19-week-8-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 8th weekly check-in. I will be sharing my progress with ComboBox2D and TextBlock2D UI components. After solving TextBlock2D sizing issue, I was finally able to complete the implementation of combo box. I also faced some problems while refactoring TextBlock2D. The official repository of my sub-org, FURY can always be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-07-19T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-07-26-week-9-soham.html</id>
    <title>Tab UI, TabPanel2D, Tab UI Tutorial.</title>
    <updated>2020-07-26T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="tab-ui-tabpanel2d-tab-ui-tutorial"&gt;

&lt;p&gt;Hello and welcome to my 9th weekly check-in. I will be sharing my progress with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TabUI&lt;/span&gt;&lt;/code&gt; and its corresponding tutorial. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I finished the basic implementation of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TabUI&lt;/span&gt;&lt;/code&gt;. Apart from that I was also able to finish the tutorial which showcases different features of this said UI. With the help of this UI one can have multiple panels containing different UI elements within them. The basic implementation can be demonstrated as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88484746-87456880-cf8e-11ea-9e96-9cba111b90d3.gif" src="https://user-images.githubusercontent.com/29832615/88484746-87456880-cf8e-11ea-9e96-9cba111b90d3.gif" /&gt;
&lt;p&gt;After finishing with the basic implementation I moved on to create its tutorial. For that, I decided to combine 3 of the existing UI tutorials to be rendered with the help of Tab UI. I implemented the following in individual tabs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Controlling a cube with the help of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;LineSlider2D&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;RingSlider2D&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CheckBox&lt;/span&gt;&lt;/code&gt; to render a cylinder or a sphere or both.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ComboBox&lt;/span&gt;&lt;/code&gt; to set the color of a label.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above tutorial can be demonstrated as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88481324-6a9e3600-cf78-11ea-8c5b-e26bf158388a.gif" src="https://user-images.githubusercontent.com/29832615/88481324-6a9e3600-cf78-11ea-8c5b-e26bf158388a.gif" /&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will continue working on the Physics engine integration. Previously we were facing a problem regarding the uncontrollable spinning of objects rendered by a single actor. There must be an issue with mismatching axes alignment of FURY and pyBullet. The spinning problem is as following:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" src="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" /&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did get stuck with the collapsing functionality of Tab UI and the uncontrollable spinning of the bricks in the Physics simulation. Apart from that I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-07-26-week-9-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 9th weekly check-in. I will be sharing my progress with TabUI and its corresponding tutorial. The official repository of my sub-org, FURY can always be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-07-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-02-week-10-soham.html</id>
    <title>Single Actor, Physics, Scrollbars.</title>
    <updated>2020-08-02T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="single-actor-physics-scrollbars"&gt;

&lt;p&gt;Hello and welcome to my 10th weekly check-in. Second evaluation ended this week and now we move on to our 3rd and final coding period. In today’s check-in I will be sharing my progress with the single actor physics simulation that I facing some issues with and I will also be discussing my future plans regarding UI components. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I was able to figure out the uncontrollable spinning problem that I was facing while rendering physics simulations. Specifically the simulation where a brick wall was rendered by a single actor. The spinning problem was as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" src="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" /&gt;
&lt;p&gt;Here’s how the fixed simulation looks like:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/89126963-946ed400-d507-11ea-93cd-aad3a9f59ab0.gif" src="https://user-images.githubusercontent.com/29832615/89126963-946ed400-d507-11ea-93cd-aad3a9f59ab0.gif" /&gt;
&lt;p&gt;I was facing this particular issue because I was directly syncing the orientation of the objects in pyBullet world to the objects in the Fury world. So I decided to apply the change in orientation instead and it worked. In order to achieve this I had to keep track of the bricks’ orientation at each step of the simulation, sync the change and then update the tracked orientation. Thankfully, pybullet had convenient tools to achieve this. Here’s a snippet on how to update individual objects rendered by a single actor:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sync_brick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;multibody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getBasePositionAndOrientation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;multibody&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;rot_mat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMatrixFromQuaternion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDifferenceQuaternion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;brick_orns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;])),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
        &lt;span class="n"&gt;brick_centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="nd"&gt;@rot_mat&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;

    &lt;span class="n"&gt;brick_centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;
    &lt;span class="n"&gt;brick_orns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;orn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;All the necessary information is updated &lt;a class="reference external" href="https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Currently, the scrollbars are native to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ListBox2D&lt;/span&gt;&lt;/code&gt; only. We are planning to separate scrollbars from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ListBox2D&lt;/span&gt;&lt;/code&gt; to create a standalone UI component. This was in progress previously but was later discontinued, so I was given the responsibility to complete it. After this we plan to improve File Dialog capabilities later on.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not face any major issues but it took me some time to understand and evaluate the existing discontinued &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/222"&gt;PR&lt;/a&gt; regarding scrollbar separation.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-02-week-10-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 10th weekly check-in. Second evaluation ended this week and now we move on to our 3rd and final coding period. In today’s check-in I will be sharing my progress with the single actor physics simulation that I facing some issues with and I will also be discussing my future plans regarding UI components. The official repository of my sub-org, FURY can always be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-08-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-09-week-11-soham.html</id>
    <title>Chain Simulation, Scrollbar Refactor, Tutorial Update.</title>
    <updated>2020-08-09T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="chain-simulation-scrollbar-refactor-tutorial-update"&gt;

&lt;p&gt;Hello and welcome to my 11th weekly check-in. In this blog I will be discussing my progress with multiple topics related to physics and ui components. I was actively working on a couple of things, specifically Joint simulations in pyBullet and scrollbar UI component. I also took up the responsibility to complete an incomplete Pull Request which was pending for quite a while. The official repository of my sub-org can be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;The first thing that I did this week was to figure out joint simulations in pybullet. Due to lack of proper documentation I was not aware that Joints are kept stiff by default, hence I had no idea what was wrong with my simulations. Thankfully, while I was browsing pybullet forums, I found this &lt;a class="reference external" href="https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=24&amp;amp;t=13035"&gt;post&lt;/a&gt; regarding rope simulations when I realized that I had to explicitly set the friction force to prevent stiffness among the Joints. Keeping this point in mind I was able to simulate the following Chain of hexagonal prisms:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/89737601-b7613100-da8f-11ea-947f-a96c66caefae.gif" src="https://user-images.githubusercontent.com/29832615/89737601-b7613100-da8f-11ea-947f-a96c66caefae.gif" /&gt;
&lt;p&gt;This week I was mainly supposed to  work on refactoring scrollbars as a standalone component. I have made some progress for now. I am able to render the scrollbars properly, with proper size, orientation and color but I am having some issues regarding its scrolling callbacks. I need to look further into it. Here’s a brief glimpse:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/89738159-28a2e300-da94-11ea-9167-e825f82edf98.png" src="https://user-images.githubusercontent.com/29832615/89738159-28a2e300-da94-11ea-9167-e825f82edf98.png" /&gt;
&lt;p&gt;This particular &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/208"&gt;PR&lt;/a&gt; by a fellow contributor was pending for quite a while, so I decided to look into it and complete it. The objective of the PR was to add examples for the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CheckBox&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;RadioButton&lt;/span&gt;&lt;/code&gt; UI components, but the problem was that the objects were not rendered using FURY API in the tutorial, so I decided to complete that. It was already a well made tutorial. I only had to replace the appropriate functions with FURY’s API calls.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CheckBox&lt;/span&gt;&lt;/code&gt; tutorial:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/89438967-20326b80-d767-11ea-8f47-e7711e900c9f.gif" src="https://user-images.githubusercontent.com/29832615/89438967-20326b80-d767-11ea-8f47-e7711e900c9f.gif" /&gt;
&lt;p&gt;There’s still some internal issues while updating the colors of the cube which is currently being worked on by my mentors.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;RadioButton&lt;/span&gt;&lt;/code&gt; tutorial:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/89438999-2e808780-d767-11ea-8b08-2a36a05294bc.gif" src="https://user-images.githubusercontent.com/29832615/89438999-2e808780-d767-11ea-8b08-2a36a05294bc.gif" /&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will continue working on the scrollbar component and try to fix the issues that I am having with its callbacks. I will also try to work on the wrecking ball simulation.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Apart from the scrollbar callbacks and stiff joints, I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-09-week-11-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 11th weekly check-in. In this blog I will be discussing my progress with multiple topics related to physics and ui components. I was actively working on a couple of things, specifically Joint simulations in pyBullet and scrollbar UI component. I also took up the responsibility to complete an incomplete Pull Request which was pending for quite a while. The official repository of my sub-org can be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-08-09T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-16-week-12-soham.html</id>
    <title>Wrecking Ball Simulation, Scrollbars Update, Physics Tutorials.</title>
    <updated>2020-08-16T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="wrecking-ball-simulation-scrollbars-update-physics-tutorials"&gt;

&lt;p&gt;Hello and welcome to my 12th weekly check-in. In this blog I will be discussing my progress with the wrecking ball simulation and my scrollbar separation work. Apart from this I have also finalized the physics simulation tutorials and have created a Pull Request to finally get it merged with the official repository. The official repository of my sub-org can be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I was mainly focusing on the wrecking ball simulation. This simulation is basically the combination of chain simulation and brick wall simulation. A sphere attached to a chain smashes a “NxNxN” brick wall. The simulation is as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/90336291-84232280-dff8-11ea-869b-21a99b203c31.gif" src="https://user-images.githubusercontent.com/29832615/90336291-84232280-dff8-11ea-869b-21a99b203c31.gif" /&gt;
&lt;p&gt;There’s a rendering bug with the cylinders because of which the chain segments look weird. My mentors confirmed that this bug originated from VTK’s &lt;cite&gt;cylinder source&lt;/cite&gt; method and they are currently working on it to fix it. The simulation will render correctly once that bug is fixed.&lt;/p&gt;
&lt;p&gt;Regarding the scrollbar separation task, I was able to fix those callback issues that I was facing. The mouse callbacks on the scrollbar now work correctly:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/90337280-1af2dd80-dfff-11ea-94c4-508121307583.gif" src="https://user-images.githubusercontent.com/29832615/90337280-1af2dd80-dfff-11ea-94c4-508121307583.gif" /&gt;
&lt;p&gt;I have also created a pull request to add the following physics simulations with proper documentation to the main repository:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Brick Wall Simulation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ball Collision Simulation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chain Simulation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wrecking Ball Simulation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Currently I am a bit confused with the implementation of scrollbars with UI components. I had a meeting with my mentor and he decided to help me out with this. So most probably I will be working with the scrollbar component and its implementation. Next week will also be the final week for GSoC 2020 before the evaluations start so I would work on getting the final documentation and formalities ready.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Apart from the scrollbar implementation idea, I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-16-week-12-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my 12th weekly check-in. In this blog I will be discussing my progress with the wrecking ball simulation and my scrollbar separation work. Apart from this I have also finalized the physics simulation tutorials and have created a Pull Request to finally get it merged with the official repository. The official repository of my sub-org can be found here.</summary>
    <category term="google" label="google"/>
    <published>2020-08-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-23-week-13-soham.html</id>
    <title>Part of the Journey is the end unless its Open Source!</title>
    <updated>2020-08-23T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;section id="part-of-the-journey-is-the-end-unless-its-open-source"&gt;

&lt;p&gt;Hello and welcome to my final weekly check-in. Today officially marks the end of  the coding period for GSoC 2020. I enjoyed every bit of it. This was a life-changing experience for me and now I observe and interpret everything from a different perspective altogether. I have grown into a better developer and a person since GSoC. I would like to thank all my mentors and especially Serge for his immense support and mentorship. I would love to contribute to fury even after GSoC is over but unfortunately my semester break is over so I wont be as active as I was during the summer.&lt;/p&gt;
&lt;p&gt;Now, regarding work I will be sharing my progress with the File Dialog UI component. The official repository of my sub-org can be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I worked on the File Dialog UI component. Fury previously had a FileMenu component which could browse through the file system but we needed a dialog like implementation for it so that its easier for the users to read and write files during runtime. I tried implementing a simple design for it. It specifically has two modes, one for saving files and the other for writing files. The implementation can be demonstrated as follows:&lt;/p&gt;
&lt;section id="open-dialog"&gt;
&lt;h3&gt;Open Dialog:&lt;/h3&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/90978632-df12c780-e56c-11ea-8517-6243ea06bdd2.gif" src="https://user-images.githubusercontent.com/29832615/90978632-df12c780-e56c-11ea-8517-6243ea06bdd2.gif" /&gt;
&lt;/section&gt;
&lt;section id="save-dialog"&gt;
&lt;h3&gt;Save Dialog:&lt;/h3&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/90978638-eafe8980-e56c-11ea-835a-3a82ccee2973.gif" src="https://user-images.githubusercontent.com/29832615/90978638-eafe8980-e56c-11ea-835a-3a82ccee2973.gif" /&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will start with my final GSoC documentation and code submission. I will also try to implement the tests and tutorials for File Dialog or any further changes requested by my mentors. If I am not able to finish it within the next week, I will get it done after GSoC.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not face any major issues this week.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;all&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;your&lt;/span&gt; &lt;span class="pre"&gt;love&lt;/span&gt; &lt;span class="pre"&gt;and&lt;/span&gt; &lt;span class="pre"&gt;support.&lt;/span&gt; &lt;span class="pre"&gt;❤️😄&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-23-week-13-soham.html" rel="alternate"/>
    <summary>Hello and welcome to my final weekly check-in. Today officially marks the end of  the coding period for GSoC 2020. I enjoyed every bit of it. This was a life-changing experience for me and now I observe and interpret everything from a different perspective altogether. I have grown into a better developer and a person since GSoC. I would like to thank all my mentors and especially Serge for his immense support and mentorship. I would love to contribute to fury even after GSoC is over but unfortunately my semester break is over so I wont be as active as I was during the summer.</summary>
    <category term="google" label="google"/>
    <published>2020-08-23T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-24-final-work-soham.html</id>
    <title>Google Summer of Code Final Work Product</title>
    <updated>2020-08-24T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;a class="reference external image-reference" href="https://summerofcode.withgoogle.com/projects/#6653942668197888"&gt;&lt;img alt="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" class="align-center" height="50" src="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/"&gt;&lt;img alt="https://www.python.org/static/community_logos/python-logo.png" src="https://www.python.org/static/community_logos/python-logo.png" style="width: 40%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://fury.gl/latest/community.html"&gt;&lt;img alt="https://python-gsoc.org/logos/FURY.png" src="https://python-gsoc.org/logos/FURY.png" style="width: 25%;" /&gt;&lt;/a&gt;
&lt;section id="google-summer-of-code-final-work-product"&gt;

&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Soham Biswas&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; Python Software Foundation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; FURY&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2020"&gt;FURY - Create new UI Widgets &amp;amp; Physics Engine
Integration&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="proposed-objectives"&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ComboBox&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tab UI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;File Dialog Improvements&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="modified-objectives"&gt;
&lt;h2&gt;Modified Objectives&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Combobox&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tab UI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;File Dialog Improvements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Double Click Callback&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TextBlock2D Improvements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scrollbars as a Standalone Component&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Physics Engine Integration&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-completed"&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ComboBox2D UI Component&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A combobox is a commonly used graphical user interface widget.
Traditionally, it is a combination of a drop-down list or list box and a
single-line textbox, allowing the user to select a value from the list.
The term “combo box” is sometimes used to mean “drop-down list”.
Respective components, tests and tutorials were created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Combobox UI component:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/240"&gt;fury-gl/fury#240&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Combobox UI Tutorial:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/246"&gt;fury-gl/fury#246&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tab UI Component&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In interface design, a tabbed document interface or Tab is a graphical
control element that allows multiple documents or panels to be contained
within a single window, using tabs as a navigational widget for
switching between sets of documents. Respective components, tests and
tutorials were created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tab UI component:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/252"&gt;fury-gl/fury#252&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tab UI tutorial:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/275"&gt;fury-gl/fury#275&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Double Click Callback&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Double click callbacks aren’t implemented in VTK by default so they need
to be implemented manually. With my mentor’s help I was able to
implement double click callbacks for all the three mouse buttons
successfully.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Adding Double Click Callback:&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/231"&gt;fury-gl/fury#231&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;TextBlock2D Improvements&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The previous implementation of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; was lacking a few
features such as size arguments and text overflow. There was no specific
way to create Texts occupying a said height or width area. Apart from
that UI components like &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ListBoxItem2D&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FileMenu2D&lt;/span&gt;&lt;/code&gt; etc had an
issue where text would overflow from their specified width. In order to
tackle these problems, a modification was done to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextBlock2D&lt;/span&gt;&lt;/code&gt; to
accept size as an argument and a new method was added to clip
overflowing text based on a specified width and to replace the
overflowing characters with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;...&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Setting Bounding Box for TextBlock2D:&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/248"&gt;fury-gl/fury#248&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clip Text Overflow:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/268"&gt;fury-gl/fury#268&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Physics Engine Integration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Optional support for Physics engine integration of Pybullet was added to
Fury. Pybullet’s engine was used for the simulations and FURY was used
for rendering the said simulations. Exhaustive examples were added to
demonstrate various types of physics simulations possible using pybullet
and fury. The said examples are as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Brick Wall Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Explains how to render and simulate external forces, objects and
gravity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ball Collision Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Explains how collisions work and how to detect said collisions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chain Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Explains how to render and simulate joints.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wrecking Ball Simulation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A more complicated simulation that combines concepts explained by
the other examples.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apart from that, a document was created to explain the integration
process between pybullet and fury in detail.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Physics Simulation Examples:&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/287"&gt;fury-gl/fury#287&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fury-Pybullet Integration Docs:&lt;/strong&gt;
&lt;a class="reference external" href="https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing"&gt;https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-in-progress"&gt;
&lt;h2&gt;Objectives in Progress&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Scrollbars as a standalone component&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The previous implementation of scrollbars were hard coded into
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ListBox2D&lt;/span&gt;&lt;/code&gt;. Therefore, it was not possible to use scrollbars with any
other UI component. Apart from that, scrollbars in terms of design were
limited. Creating a horizontal scrollbar was not possible. The objective
of this PR is to make scrollbars separate so that other UI elements can
also make use of it.&lt;/p&gt;
&lt;p&gt;Currently, the skeletal and design aspects of the scrollbars are
implemented but the combination of scrollbars with other UI components
are still in progress.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Scrollbars as a Standalone API:&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/285"&gt;fury-gl/fury#285&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;File Dialog Improvements&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Currently, we have access to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FileMenu2D&lt;/span&gt;&lt;/code&gt; which allows us to navigate
through the filesystem but it does not provide a user friendly Dialog to
read and write files in Fury. Hence the idea is to create a file dialog
which can easily open or save file at runtime. As of now, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Open&lt;/span&gt;&lt;/code&gt; and
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Save&lt;/span&gt;&lt;/code&gt; operations are implemented. Corresponding tests and tutorials
are in progress.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;File Dialog UI component:&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/294"&gt;fury-gl/fury#294&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="other-objectives"&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Radio Checkbox Tutorial using FURY API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The objects for Radio button and Checkbox tutorial were rendered using
VTK’s method by a fellow contributor so I decided to replace them with
native FURY API. The methods were rewritten keeping the previous commits
intact.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Radio Checkbox tutorial using FURY API:&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/281"&gt;fury-gl/fury#281&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GSoC weekly Blogs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Weekly blogs were added for FURY’s Website.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;First &amp;amp; Second Evaluation:&lt;/strong&gt;
&lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/272"&gt;fury-gl/fury#272&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Third Evaluation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/286"&gt;fury-gl/fury#286&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="timeline"&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr class="row-odd"&gt;&lt;th class="head"&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Blog Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 1(30-05-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Welcome to my GSoC Blog!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-1-5/"&gt;Weekly Check-in #1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 2(07-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;First Week of Coding!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-2-3/"&gt;Weekly Check-in #2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 3(14-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;ComboBox2D Progress!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-3-4/"&gt;Weekly Check-in #3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 4(21-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;TextBlock2D Progress!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-4-4/"&gt;Weekly Check-in #4&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 5(28-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;May the Force be with you!!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-5-4/"&gt;Weekly Check-in #5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 6(05-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Translation, Reposition, Rotation.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-6-7/"&gt;Weekly Check-in #6&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 7(12-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Orientation, Sizing, Tab UI.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-7-4/"&gt;Weekly Check-in #7&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 8(19-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;ComboBox2D, TextBlock2D, ClippingOverflow.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-8-2/"&gt;Weekly Check-in #8&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 9(26-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Tab UI, TabPanel2D, Tab UI Tutorial.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-9-4/"&gt;Weekly Check-in #9&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 10(02-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Single Actor, Physics, Scrollbars.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-10-2/"&gt;Weekly Check-in #10&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 11(09-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Chain Simulation, Scrollbar Refactor,Tutorial Update.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-11-1/"&gt;Weekly Check-in #11&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 12(16-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Wrecking Ball Simulation, ScrollbarsUpdate, Physics Tutorials.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-12/"&gt;Weekly Check-in #12&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 13(23-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Part of the Journey is the end unless itsOpen Source!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/weekly-check-in-13/"&gt;Weekly Check-in #13&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Detailed weekly tasks and work done can be found
&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-24-final-work-soham.html" rel="alternate"/>
    <summary>Name: Soham Biswas</summary>
    <category term="google" label="google"/>
    <published>2020-08-24T00:00:00+00:00</published>
  </entry>
</feed>
