<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>http://lernfunk.de/media/654321</id>
  <title>Blog</title>
  <updated>2020-10-01T16:55:39.060288+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/atom.xml"/>
  <generator uri="https://ablog.readthedocs.org" version="0.10.9">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2020/2020-07-20-week-8-lenix.html</id>
    <title>Improvements in SDF primitives.</title>
    <updated>2020-07-20T00:00:00+00:00</updated>
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class="section" id="improvements-in-sdf-primitives"&gt;

&lt;p&gt;Make sure to check out Project &lt;a class="reference external" href="https://github.com/fury-gl/fury"&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey Everyone!
This week, Improvements in SDF primitives.&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;Over the past few weeks i have been working on adding SDF based actors in FURY. The task for this week was to complete the remaining features such as support for scaling and rotation based on user direction for the actors. The main objective is to complete the SDF actor and make it ready to merge into the FURY codebase. Below are the outputs after added the improvements to the SDF primitives.&lt;/p&gt;
&lt;p&gt;Scaling:&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-8b.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-8b.gif" /&gt;
&lt;p&gt;Rotation based on passed directions:&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-8a.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-8a.gif" /&gt;
&lt;p&gt;The code for the above render is available at the &lt;a class="reference external" href="https://github.com/lenixlobo/fury/tree/SDF-Experiments"&gt;branch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Since the features are almost done the task for next week is clean the code and test for bugs. And then to eventually merge the  sdf_actor into the fury codebase.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No major issues this week.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-07-20-week-8-lenix.html" rel="alternate"/>
    <published>2020-07-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-07-26-week-9-soham.html</id>
    <title>Tab UI, TabPanel2D, Tab UI Tutorial.</title>
    <updated>2020-07-26T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;div class="section" id="tab-ui-tabpanel2d-tab-ui-tutorial"&gt;

&lt;p&gt;Hello and welcome to my 9th weekly check-in. I will be sharing my progress with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TabUI&lt;/span&gt;&lt;/code&gt; and its corresponding tutorial. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I finished the basic implementation of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TabUI&lt;/span&gt;&lt;/code&gt;. Apart from that I was also able to finish the tutorial which showcases different features of this said UI. With the help of this UI one can have multiple panels containing different UI elements within them. The basic implementation can be demonstrated as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88484746-87456880-cf8e-11ea-9e96-9cba111b90d3.gif" src="https://user-images.githubusercontent.com/29832615/88484746-87456880-cf8e-11ea-9e96-9cba111b90d3.gif" /&gt;
&lt;p&gt;After finishing with the basic implementation I moved on to create its tutorial. For that, I decided to combine 3 of the existing UI tutorials to be rendered with the help of Tab UI. I implemented the following in individual tabs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Controlling a cube with the help of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;LineSlider2D&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;RingSlider2D&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;CheckBox&lt;/span&gt;&lt;/code&gt; to render a cylinder or a sphere or both.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ComboBox&lt;/span&gt;&lt;/code&gt; to set the color of a label.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above tutorial can be demonstrated as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88481324-6a9e3600-cf78-11ea-8c5b-e26bf158388a.gif" src="https://user-images.githubusercontent.com/29832615/88481324-6a9e3600-cf78-11ea-8c5b-e26bf158388a.gif" /&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will continue working on the Physics engine integration. Previously we were facing a problem regarding the uncontrollable spinning of objects rendered by a single actor. There must be an issue with mismatching axes alignment of FURY and pyBullet. The spinning problem is as following:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" src="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" /&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did get stuck with the collapsing functionality of Tab UI and the uncontrollable spinning of the bricks in the Physics simulation. Apart from that I did not face any major issues.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-07-26-week-9-soham.html" rel="alternate"/>
    <published>2020-07-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-07-27-week-9-lenix.html</id>
    <title>Merging SDF primitives.</title>
    <updated>2020-07-27T00:00:00+00:00</updated>
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class="section" id="merging-sdf-primitives"&gt;

&lt;p&gt;Make sure to check out Project &lt;a class="reference external" href="https://github.com/fury-gl/fury"&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey Everyone!
This week, Merging SDF primitives.&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;Since GSoC started I have been working on adding support for raymarching based SDF actors as primitives in the FURY codebase. This week with the release of FURY 0.6.0 , the task assigned to me was to complete the remaining parts of the SDF actor including tests and tutorial. THe SDF actor is now part of the FURY actor and can be accessed using sdf_actor.
Currently we support , ellipsoids, spheres and torus as primitive options. As expected, SDF based actors have shown tremendous performance improvements over traditional polygon based actor.&lt;/p&gt;
&lt;p&gt;Despite using 100,000 torus the FPS is higher than 60 :&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-9.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-9.gif" /&gt;
&lt;p&gt;10,000 actors :&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-9b.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-9b.gif" /&gt;
&lt;p&gt;I also made a tutorial for new users to get started &lt;a class="reference external" href="https://fury.gl/latest/auto_tutorials/04_shaders/viz_sdfactor.html#sphx-glr-auto-tutorials-04-shaders-viz-sdfactor-py"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Now that the SDF actor is merged , the next step is to focus on spherical harmonics and i will also be working on creating shader visualization to showcase the features of FURY&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;This week involved alot of work , including making tests, tutorial and looking for bugs but everything went smoothly .&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-07-27-week-9-lenix.html" rel="alternate"/>
    <published>2020-07-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-02-week-10-lenix.html</id>
    <title>More Shaders!!</title>
    <updated>2020-08-02T00:00:00+00:00</updated>
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class="section" id="more-shaders"&gt;

&lt;p&gt;Make sure to check out Project &lt;a class="reference external" href="https://github.com/fury-gl/fury"&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey !
This week, More Shaders!&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;After merging the SDF actor last week , the mentors and I decided to work on another project idea which was discussed prior to GSoC . So the next step assigned to me was to look into the current shader framework and create immersive visualizations using shaders. Being interested in volumetric rendering I looked into volumetric cloud rendering algorithms and created a basic shader-based render in FURY.&lt;/p&gt;
&lt;p&gt;The output for the same is given below:&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-10a.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-10a.gif" /&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-10b.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-10b.gif" /&gt;
&lt;p&gt;The shader demos are available &lt;a class="reference external" href="https://github.com/lenixlobo/fury/tree/shader-demos"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;The main focus now is to discuss and work on shader demos which an demonstrate the capabilities of FURY&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No issues were faced this week&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-02-week-10-lenix.html" rel="alternate"/>
    <published>2020-08-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-02-week-10-soham.html</id>
    <title>Single Actor, Physics, Scrollbars.</title>
    <updated>2020-08-02T00:00:00+00:00</updated>
    <author>
      <name>Soham Biswas</name>
    </author>
    <content type="html">&lt;div class="section" id="single-actor-physics-scrollbars"&gt;

&lt;p&gt;Hello and welcome to my 10th weekly check-in. Second evaluation ended this week and now we move on to our 3rd and final coding period. In today’s check-in I will be sharing my progress with the single actor physics simulation that I facing some issues with and I will also be discussing my future plans regarding UI components. The official repository of my sub-org, FURY can always be found &lt;a class="reference external" href="https://github.com/fury-gl/fury/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week I was able to figure out the uncontrollable spinning problem that I was facing while rendering physics simulations. Specifically the simulation where a brick wall was rendered by a single actor. The spinning problem was as follows:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" src="https://user-images.githubusercontent.com/29832615/88485303-87476780-cf92-11ea-850c-cc63e1376ef8.gif" /&gt;
&lt;p&gt;Here’s how the fixed simulation looks like:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/29832615/89126963-946ed400-d507-11ea-93cd-aad3a9f59ab0.gif" src="https://user-images.githubusercontent.com/29832615/89126963-946ed400-d507-11ea-93cd-aad3a9f59ab0.gif" /&gt;
&lt;p&gt;I was facing this particular issue because I was directly syncing the orientation of the objects in pyBullet world to the objects in the Fury world. So I decided to apply the change in orientation instead and it worked. In order to achieve this I had to keep track of the bricks’ orientation at each step of the simulation, sync the change and then update the tracked orientation. Thankfully, pybullet had convenient tools to achieve this. Here’s a snippet on how to update individual objects rendered by a single actor:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sync_brick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;multibody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getBasePositionAndOrientation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;multibody&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;rot_mat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMatrixFromQuaternion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDifferenceQuaternion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;brick_orns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;])),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object_index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
        &lt;span class="n"&gt;brick_centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="nd"&gt;@rot_mat&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;

    &lt;span class="n"&gt;brick_centers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;
    &lt;span class="n"&gt;brick_orns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;orn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;All the necessary information is updated &lt;a class="reference external" href="https://docs.google.com/document/d/1XJcG1TL5ZRJZDyi8V76leYZt_maxGp0kOB7OZIxKsTA/edit?usp=sharing"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Currently, the scrollbars are native to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ListBox2D&lt;/span&gt;&lt;/code&gt; only. We are planning to separate scrollbars from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ListBox2D&lt;/span&gt;&lt;/code&gt; to create a standalone UI component. This was in progress previously but was later discontinued, so I was given the responsibility to complete it. After this we plan to improve File Dialog capabilities later on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not face any major issues but it took me some time to understand and evaluate the existing discontinued &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/222"&gt;PR&lt;/a&gt; regarding scrollbar separation.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Thank&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;for&lt;/span&gt; &lt;span class="pre"&gt;reading,&lt;/span&gt; &lt;span class="pre"&gt;see&lt;/span&gt; &lt;span class="pre"&gt;you&lt;/span&gt; &lt;span class="pre"&gt;next&lt;/span&gt; &lt;span class="pre"&gt;week!!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-02-week-10-soham.html" rel="alternate"/>
    <published>2020-08-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-09-week-11-lenix.html</id>
    <title>More Shaders!!</title>
    <updated>2020-08-09T00:00:00+00:00</updated>
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class="section" id="more-shaders"&gt;

&lt;p&gt;Make sure to check out Project &lt;a class="reference external" href="https://github.com/fury-gl/fury"&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey !
This week, More Shaders!&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;The task assigned for this week was to explore more shader techniques which could be implemented using FURY and which would demonstrate the capability of FURY shader system. So i decided to work on implementing shading examples such as Gooch shading and reflection shader using textures.&lt;/p&gt;
&lt;p&gt;Below are the outputs of the techniques i worked on :&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11a.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11a.gif" /&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11b.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11b.gif" /&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11c.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-11c.gif" /&gt;
&lt;p&gt;The shader demos are available &lt;a class="reference external" href="https://github.com/lenixlobo/fury/tree/shader-demos"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;The next week will involve working on more such demos which can demonstrate the capabilities of FURY&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No issues were faced this week&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-09-week-11-lenix.html" rel="alternate"/>
    <published>2020-08-09T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-17-week-12-lenix.html</id>
    <title>Outline Picker</title>
    <updated>2020-08-17T00:00:00+00:00</updated>
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class="section" id="outline-picker"&gt;

&lt;p&gt;Make sure to check out Project &lt;a class="reference external" href="https://github.com/fury-gl/fury"&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey !
This week, Picking Outline!&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;We needed a Outline feature in FURY to indicate which model we choose in the scene. So the task assigned was to find options to achieve this. There were two ways to do this, 1. Using shader and 2. Using Vtk PolyData Silhouette. Despite trying multiple implementation methods the shader approach was not working . I also tried using VTKs inbuilt function , but there is a bug when i use some models. When i choose a model, it renders outline for every polygon , which is not what we want to achieve. The bug is shown below:&lt;/p&gt;
&lt;p&gt;Below are the outputs of the techniques i worked on :&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-12.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-12.gif" /&gt;
&lt;p&gt;The shader demos are available &lt;a class="reference external" href="https://github.com/lenixlobo/fury/tree/shader-demos"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;With the end of GSoC approaching soon, the next task is to create a PR which can help new users to test different shaders using UI to get started.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I still was not able to figure out how we can achieve the outline effect. Am currently looking into other approaches we could use&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-17-week-12-lenix.html" rel="alternate"/>
    <published>2020-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-18-release-announcement.html</id>
    <title>FURY 0.6.1 Released</title>
    <updated>2020-08-18T00:00:00+00:00</updated>
    <author>
      <name>Serge Koudoro</name>
    </author>
    <content type="html">&lt;div class="section" id="fury-0-6-1-released"&gt;

&lt;p&gt;The FURY project is happy to announce the release of FURY 0.6.1!
FURY is a free and open source software library for scientific visualization and 3D animations.&lt;/p&gt;
&lt;p&gt;You can show your support by &lt;a class="reference external" href="https://github.com/fury-gl/fury/stargazers"&gt;adding a star&lt;/a&gt; on FURY github project.&lt;/p&gt;
&lt;p&gt;This Release is mainly a maintenance release. The &lt;strong&gt;major highlights&lt;/strong&gt; of this release are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Added Shaders Manager.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Standardized colors across API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added a new UI Tab.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added Physics Engine Tutorial.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Large documentation update, examples and tutorials (4 new).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Increased tests coverage and code quality.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The complete release notes are available &lt;a class="reference internal" href="release_notes/releasev0.6.1.html#releasev0-6-1"&gt;&lt;span class="std std-ref"&gt;here&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;To upgrade or install FURY&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Run the following command in your terminal:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;fury&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;or:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="n"&gt;conda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;forge&lt;/span&gt; &lt;span class="n"&gt;fury&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Questions or suggestions?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For any questions go to &lt;a class="reference external" href="http://fury.gl"&gt;http://fury.gl&lt;/a&gt;, or send an e-mail to &lt;a class="reference external" href="mailto:fury&amp;#37;&amp;#52;&amp;#48;python&amp;#46;org"&gt;fury&lt;span&gt;&amp;#64;&lt;/span&gt;python&lt;span&gt;&amp;#46;&lt;/span&gt;org&lt;/a&gt;
We can also join our &lt;a class="reference external" href="https://discord.gg/6btFPPj"&gt;discord community&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would like to thanks to &lt;a class="reference internal" href="community.html#community"&gt;&lt;span class="std std-ref"&gt;all contributors&lt;/span&gt;&lt;/a&gt; for this release:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Eleftherios Garyfallidis&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Javier Guaje&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lenix Lobo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Melina Raglin&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Nasim Anousheh&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Serge Koudoro&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Soham Biswas&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Vivek Choudhary&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On behalf of the &lt;a class="reference internal" href="community.html#community"&gt;&lt;span class="std std-ref"&gt;FURY developers&lt;/span&gt;&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;Serge K.&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-18-release-announcement.html" rel="alternate"/>
    <published>2020-08-18T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-24-final-work-lenix.html</id>
    <title>Google Summer of Code 2020 Final Work Product</title>
    <updated>2020-08-24T00:00:00+00:00</updated>
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;img alt="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" class="align-center" height="50" src="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" /&gt;&lt;img alt="https://www.python.org/static/community_logos/python-logo.png" src="https://www.python.org/static/community_logos/python-logo.png" style="width: 40%;" /&gt;
&lt;img alt="https://python-gsoc.org/logos/FURY.png" src="https://python-gsoc.org/logos/FURY.png" style="height: 30px;" /&gt;
&lt;div class="section" id="google-summer-of-code-2020-final-work-product"&gt;

&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Lenix Lobo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; Python Software Foundation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; FURY&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2020"&gt;FURY - Improve Shader Framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The current shader framework for FURY is based on VTK and lacks documentation to get started which can be overwhelming for new users. The objective of this project is to enable users to be easily able to understand and use the shader framework to render stunning visual representations of data. The project involves programming vertex and fragment shaders to generate effects for more immersive visualization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="proposed-objectives"&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Adding SDF actor to the API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This actor uses raymarching to model actors using SDF. The method provides several actors including &lt;cite&gt;ellipsoid&lt;/cite&gt;, &lt;cite&gt;sphere&lt;/cite&gt; and &lt;cite&gt;torus&lt;/cite&gt;.
&lt;strong&gt;Shader demos&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Use the FURY shader system to create and visualize different shading algorithms. Implementations include &lt;cite&gt;SphereMap&lt;/cite&gt;, &lt;cite&gt;Toon&lt;/cite&gt;, &lt;cite&gt;Gooch&lt;/cite&gt; and &lt;cite&gt;Vertex Noise&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="unsubmitted-functionalities"&gt;
&lt;h2&gt;Unsubmitted Functionalities&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spherical Harmonics using Shaders.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The spherical harmonics algorithm is used to generate spherical surfaces using biases and coefficients computed. The general approach to achieve this is computationally expensive. The idea proposed was to leverage the GPU hardware using shaders to provide a faster more efficient alternative to the current implementations. The second month of the coding period was devoted to the same task but unfortunately, the observed performance was quite unsatisfactory than the expected performance. Moreover, the output shape of the geometry was distorted. It was then decided to continue the work after the GSoC period and prioritize the task at hand.&lt;/p&gt;
&lt;p&gt;The Work in Progress can be accessed here. &lt;a class="reference external" href="https://github.com/lenixlobo/fury/tree/Spherical-Harmonics"&gt;https://github.com/lenixlobo/fury/tree/Spherical-Harmonics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Texture using Geometry Shader&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Geometry Shaders provide a lot of flexibility to users to create custom geometry behaviors such as instancing. The idea was to create a dynamic Fur/Hair effect on top of a FURY actor. Unfortunately due to missing documentation on VTK geometry shaders and lack of resources, the project was not completed during the GSoC period. However, I will continue to try to solve the issue.&lt;/p&gt;
&lt;p&gt;The source code for the current progress can be accessed here. &lt;a class="reference external" href="https://github.com/lenixlobo/fury/tree/Dynamic-Texture"&gt;https://github.com/lenixlobo/fury/tree/Dynamic-Texture&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="objectives-completed"&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SDF based Actor&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;The objective here was to provide an alternative approach to users to use SDF modeled actors in the scene. This actor is modeled using the raymarching algorithm which provides much better performance than conventional polygon-based actors. Currently, the shapes supported include ellipsoid, sphere and torus&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
&lt;strong&gt;SDF Actor method:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/250"&gt;https://github.com/fury-gl/fury/pull/250&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Multiple SDF Actor&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;The objective was to create a method through which multiple SDF primitives are rendered within a single cube. This task helped us explore the limitations of the shader system and also benchmarking the performance.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
&lt;strong&gt;MultiSDF Shader:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/blob/master/docs/experimental/viz_multisdf.py"&gt;https://github.com/fury-gl/fury/blob/master/docs/experimental/viz_multisdf.py&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Shader Demos&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;The task here was to create a pull request showcasing the capabilities of the FURY shader system and to also provide examples or new users to get started with integrating custom shaders into the scenes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
&lt;strong&gt;Shader Demos:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/296"&gt;https://github.com/fury-gl/fury/pull/296&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="other-objectives"&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tutorials&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Create Tutorials for new users to get familiar with the Shader System&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
- &lt;strong&gt;Shader UI Tutorial&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/296"&gt;https://github.com/fury-gl/fury/pull/296&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-&lt;strong&gt;SDF Actor Tutorial&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/267"&gt;https://github.com/fury-gl/fury/pull/267&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GSoC weekly Blogs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Weekly blogs were added for FURY’s Website.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;
- &lt;strong&gt;First &amp;amp; Second Evaluation:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/250"&gt;https://github.com/fury-gl/fury/pull/250&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/267"&gt;https://github.com/fury-gl/fury/pull/267&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Third Evaluation:&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/296"&gt;https://github.com/fury-gl/fury/pull/296&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="timeline"&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class="docutils align-default"&gt;
&lt;colgroup&gt;
&lt;col style="width: 11%" /&gt;
&lt;col style="width: 34%" /&gt;
&lt;col style="width: 55%" /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class="row-odd"&gt;&lt;th class="head"&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Blog Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 1(30-05-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Welcome to my GSoC Blog!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/gsoc-blog-week-1/"&gt;Weekly Check-in #1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 2(07-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Geometry Shaders!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-2/"&gt;Weekly Check-in #2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 3(14-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Ray Marching!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-3/"&gt;Weekly Check-in #3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 4(21-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;RayMarching Continued&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-4/"&gt;Weekly Check-in #4&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 5(28-06-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Spherical Harmonics&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-5/"&gt;Weekly Check-in #5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 6(05-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Spherical Harmonics Continued&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-6/"&gt;Weekly Check-in #6&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 7(12-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Multiple SDF Primitives&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-7/"&gt;Weekly Check-in #7&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 8(19-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Improvements in SDF primitives&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-8/"&gt;Weekly Check-in #8&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 9(26-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Merging SDF Actor and Benchmarks!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-9/"&gt;Weekly Check-in #9&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 10(02-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;More Shaders&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-10/"&gt;Weekly Check-in #10&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 11(08-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Even More Shaders&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-11/"&gt;Weekly Check-in #11&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 12(16-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Picking Outline&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-12/"&gt;Weekly Check-in #12&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 13(23-08-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Final Week&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/weekly-check-in-week-13/"&gt;Weekly Check-in #13&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Detailed weekly tasks and work done can be found
&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/lenixlobos-blog/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-24-final-work-lenix.html" rel="alternate"/>
    <published>2020-08-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2020/2020-08-24-week-13-lenix.html</id>
    <title>Shader Showcase</title>
    <updated>2020-08-24T00:00:00+00:00</updated>
    <author>
      <name>Lenix Lobo</name>
    </author>
    <content type="html">&lt;div class="section" id="shader-showcase"&gt;

&lt;p&gt;Make sure to check out Project &lt;a class="reference external" href="https://github.com/fury-gl/fury"&gt;FURY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hey Everyone!
Today marked the official end of the coding period for Google Summer of Code 2020. On this day I would like to take the opportunity to thank all my mentors and Soham who have shown immense support during this time and helped me grow not only to be a better programmer but also to be a better team member. While the GSoC period ends, I will try my best to be active and contribute to the project and help it grow.
Cheers!&lt;/p&gt;
&lt;div class="section" id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This being the final week of GSoC , my task was to create a PR which showcases not only the shader capabilities of the project but also to create a example which integrates both the UI and shader system of project FURY. This example can help new users to get familiar with both the UI and shaders.
Apart from this i also worked on a Toon Shader.&lt;/p&gt;
&lt;p&gt;The output for the above task is given below :&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-13.gif" src="https://raw.githubusercontent.com/lenixlobo/fury-outputs/master/blog-week-13.gif" /&gt;
&lt;p&gt;The shader demos are available &lt;a class="reference external" href="https://github.com/lenixlobo/fury/tree/shader-demos"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;The next week I will work on the final GSoC documentation which explains what I worked on throughout the GSoC period. In case of any changes are requested by the mentors I will also try to implement them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;With the help of Soham and the mentors this week went smoothly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://fury.gl/posts/2020/2020-08-24-week-13-lenix.html" rel="alternate"/>
    <published>2020-08-24T00:00:00+00:00</published>
  </entry>
</feed>
