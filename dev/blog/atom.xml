<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog</title>
  <updated>2023-07-19T14:18:25.647366+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.4.post1">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-10-week-6-joaodellagli.html</id>
    <title>Week 6: Things are Starting to Build Up</title>
    <updated>2023-07-10T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-6-things-are-starting-to-build-up"&gt;

&lt;p&gt;Hello everyone, time for a other weekly blogpost! Today, I will show you my current progress on my project and latest activities.&lt;/p&gt;
&lt;section id="what-i-did-last-week"&gt;
&lt;h2&gt;What I did Last Week&lt;/h2&gt;
&lt;p&gt;Last week I had the goal to implement KDE rendering to the screen (if you want to understand what this is, check my &lt;a href="#id1"&gt;&lt;span class="problematic" id="id2"&gt;:doc:`last blogpost &amp;lt;2023-07-03-week-5-joaodellagli&amp;gt;`_&lt;/span&gt;&lt;/a&gt;).
After some days diving into the code, I finally managed to do it:&lt;/p&gt;
&lt;aside class="system-message" id="id1"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-07-10-week-6-joaodellagli.rst&lt;/span&gt;, line 14); &lt;em&gt;&lt;a href="#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mismatch: both interpreted text role prefix and reference suffix.&lt;/p&gt;
&lt;/aside&gt;
&lt;img alt="KDE render to a billboard" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/buffer_compose.png" /&gt;
&lt;p&gt;This render may seem clean and working, but the code isn’t exactly like that. For this to work, some tricks and work arounds needed to
be done, as I will describe in the section below.&lt;/p&gt;
&lt;p&gt;Also, I reviewed the shader part of Tania’s PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;#791&lt;/a&gt;, that implement ellipsoid actors inside
FURY. It was my first review of a PR that isn’t a blogpost, so it was an interesting experience and I hope I can get better at it.&lt;/p&gt;
&lt;p&gt;It is important as well to point out that I had to dedicate myself to finishing my graduation capstone project’s presentation that I will attend
to this week, so I had limited time to polish my code, which I plan to do better this week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;The KDE render basically works rendering the KDE of a point to a texture and summing that texture to the next render. For this to work,
the texture, rendered to a billboard, needs to be the same size of the screen, otherwise the captured texture will include the black background.
The problem I faced with that is that the billboard scaling isn’t exactly well defined, so I had to guess for a fixed screen size
(in this example, I worked with &lt;em&gt;600x600&lt;/em&gt;) what scaling value made the billboard fit exactly inside the screen (it’s &lt;em&gt;3.4&lt;/em&gt;). That is far from ideal as I
will need to modularize this behavior inside a function that needs to work for every case, so I will need to figure out a way to fix that
for every screen size. For that, I have two options:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Find the scaling factor function that makes the billboard fit into any screen size.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Figure out how the scaling works inside the billboard actor to understand if it needs to be refactored.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first seems ok to do, but it is kind of a work around as well. The second one is a good general solution, but it is a more delicate one,
as it deals with how the billboard works and already existing applications of it may suffer problems if the scaling is changed.
I will see what is better talking with my mentors.&lt;/p&gt;
&lt;p&gt;Another problem I faced (that is already fixed) relied on shaders. I didn’t fully understood how shaders work inside FURY so I was
using my own fragment shader implementation, replacing the already existing one completely. That was working, but I was having an issue
with the texture coordinates of the rendering texture. As I completely replaced the fragment shader, I had to pass custom texture coordinates
to it, resulting in distorted textures that ruined the calculations. Those issues motivated me to learn the shaders API, which allowed me
to use the right texture coordinates and finally render the results you see above.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;For this week, I plan to try a different approach Filipi, one of my mentors, told me to do. This approach was supposed to be the original
one, but a communication failure lead to this path I am currently in. This approach renders each KDE calculation into its own billboard,
and those are rendered together with additive blending. After this first pass, this render is captured into a texture and then rendered to
another big billboard.&lt;/p&gt;
&lt;p&gt;Also, I plan to refactor my draft PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/804"&gt;#804&lt;/a&gt; to make it more understandable, as its description still dates back to the time I was using the
flawed Framebuffer implementation, and my fellow GSoC contributors will eventually review it, and to do so, they will need to understand it.&lt;/p&gt;
&lt;p&gt;Wish me luck!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-10-week-6-joaodellagli.html" rel="alternate"/>
    <summary>Hello everyone, time for a other weekly blogpost! Today, I will show you my current progress on my project and latest activities.</summary>
    <category term="google" label="google"/>
    <published>2023-07-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-03-week-5-joaodellagli.html</id>
    <title>Week 5: All Roads Lead to Rome</title>
    <updated>2023-07-03T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-5-all-roads-lead-to-rome"&gt;

&lt;p&gt;Hello everyone, time for another weekly blogpost! Today, we will talk about taking different paths to reach your objective.&lt;/p&gt;
&lt;section id="last-week-s-effort"&gt;
&lt;h2&gt;Last Week’s Effort&lt;/h2&gt;
&lt;p&gt;After having the FBO properly set up, the plan was to finally &lt;em&gt;render&lt;/em&gt; something to it. Well, I wished for a less bumpy road
at my &lt;span class="xref std std-doc"&gt;last blogpost&lt;/span&gt; but as in this project things apparently tend to go wrong,
of course the same happened with this step.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;Days passed without anything being rendered to the FBO. The setup I was working on followed the simplest OpenGL pipeline of rendering to
an FBO:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Setup the FBO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attach a texture to it’s color attachment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup the shader to be used in the FBO render and the shader to render the FBO’s Color Attachment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Render to the FBO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the color attachment as texture attached to a billboard to render what was on the screen&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But it seems like this pipeline doesn’t translate well into VTK. I paired again on wednesday with my mentors, Bruno and Filipi, to try to figure out
where the problem was, but after hours we could not find it. Wednesday passed and then thursday came, and with thursday, a solution:
Bruno didn’t give up on the idea and dug deep on VTK’s documentation until he found a workaround to do what we wanted, that was retrieving a
texture from what was rendered to the screen and pass it as a texture to render to the billboard. To do it, he figured out we needed to use
a different class, &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkWindowToImageFilter.html"&gt;vtkWindowToImageFilter&lt;/a&gt;, a class that has the specific
job of doing exactly what I described above. Below, the steps to do it:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkWindowToImageFilter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scene&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetRenderWindow&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;texture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkTexture&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInputConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetOutputPort&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# Bind the framebuffer texture to the desired actor&lt;/span&gt;
&lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetTexture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texture&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is enough to bind to the desired actor a texture that corresponds to what was prior rendered to the screen.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;Having a solution to that, now its time to finally render some KDE’s! This week’s plans involve implementing the first version of a KDE
calculation. For anyone interested in understanding what a Kernel Density Estimation is, here is a brief summary from this
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Kernel_density_estimation"&gt;Wikipedia page&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;In statistics, kernel density estimation (KDE) is the application of kernel smoothing for probability density estimation, i.e., a
non-parametric method to estimate the probability density function of a random variable based on kernels as weights. KDE answers a
fundamental data smoothing problem where inferences about the population are made, based on a finite data sample. In some fields
such as signal processing and econometrics it is also termed the Parzen–Rosenblatt window method, after Emanuel Parzen and Murray
Rosenblatt, who are usually credited with independently creating it in its current form. One of the famous applications of
kernel density estimation is in estimating the class-conditional marginal densities of data when using a naive Bayes classifier,
which can improve its prediction accuracy.&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;This complicated sentence can be translated into the below image:&lt;/p&gt;
&lt;img alt="KDE plot of 100 random points" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/KDE_plot.png" /&gt;
&lt;p&gt;That is what a KDE plot of 100 random points looks like. The greener the area, the greater the density of points. The plan is to implement
something like that with the tools we now have available.&lt;/p&gt;
&lt;p&gt;Let’s get to work!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-03-week-5-joaodellagli.html" rel="alternate"/>
    <summary>Hello everyone, time for another weekly blogpost! Today, we will talk about taking different paths to reach your objective.</summary>
    <category term="google" label="google"/>
    <published>2023-07-03T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-26-week-4-joaodellagli.html</id>
    <title>Week 4: Nothing is Ever Lost</title>
    <updated>2023-06-26T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-4-nothing-is-ever-lost"&gt;

&lt;p&gt;Welcome again to another weekly blogpost! Today, let’s talk about the importance of guidance throughout a project.&lt;/p&gt;
&lt;section id="last-week-s-effort"&gt;
&lt;h2&gt;Last Week’s Effort&lt;/h2&gt;
&lt;p&gt;So, last week my project was struggling with some supposedly simple in concept, yet intricate in execution issues. If you recall from
my &lt;span class="xref std std-doc"&gt;last blogpost&lt;/span&gt;, I could not manage to make the Framebuffer Object setup work, as its method,
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SetContext()&lt;/span&gt;&lt;/code&gt;, wasn’t being able to generate the FBO inside OpenGL. Well, after some (more) research about that as I also dived in my
plan B, that involved studying numba as a way to accelerate a data structure I implemented on my PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/783"&gt;#783&lt;/a&gt;,
me and one of my mentors decided we needed a pair programming session, that finally happened on thursday. After that session,
we could finally understand what was going on.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;Apparently, for the FBO generation to work, it is first needed to initialize the context interactor:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;FBO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkOpenGLFramebufferObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetOffScreenRendering&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# so the window doesn&amp;#39;t show up, but important for later as well&lt;/span&gt;
&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# missing part that made everything work&lt;/span&gt;

&lt;span class="n"&gt;FBO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Sets the context for the FBO. Finally, it works&lt;/span&gt;
&lt;span class="n"&gt;FBO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PopulateFramebuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# And now I could populate the FBO with textures&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-26-week-4-joaodellagli.rst&lt;/span&gt;, line 37)&lt;/p&gt;
&lt;p&gt;Possible title underline, too short for the title.
Treating it as ordinary text because it’s so short.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;This simple missing line of code was responsible for ending weeks of suffer, as after that, I called:&lt;/p&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-26-week-4-joaodellagli.rst&lt;/span&gt;, line 38)&lt;/p&gt;
&lt;p&gt;Unexpected indentation.&lt;/p&gt;
&lt;/aside&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FBO of index:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FBO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetFBOIndex&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Number of color attachments:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FBO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetNumberOfColorAttachments&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-26-week-4-joaodellagli.rst&lt;/span&gt;, line 42)&lt;/p&gt;
&lt;p&gt;Possible title underline, too short for the title.
Treating it as ordinary text because it’s so short.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;That outputted:&lt;/p&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-26-week-4-joaodellagli.rst&lt;/span&gt;, line 43)&lt;/p&gt;
&lt;p&gt;Unexpected indentation.&lt;/p&gt;
&lt;/aside&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;FBO&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;Number&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="n"&gt;attachments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That means the FBO generation was successful! One explanation that seems reasonable to me on why was that happening is that, as it was
not initialized, the context was being passed &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;null&lt;/span&gt;&lt;/code&gt; to the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SetContext()&lt;/span&gt;&lt;/code&gt; method, that returned without any warning of what was happening.&lt;/p&gt;
&lt;p&gt;Here, I would like to point out how my mentor was &lt;strong&gt;essential&lt;/strong&gt; to this solution to come: I had struggled for some time with that, and could
not find a way out, but a single session of synchronous pair programming where I could expose clearly my problem and talk to someone
way more experienced than I, someone designated for that, was my way out of this torment, so value your mentors! Thanks Bruno!&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;Now, with the FBO working, I plan to finally &lt;em&gt;render&lt;/em&gt; something to it. For this week, I plan to come back to my original plan and
experiment with simple shaders just as a proof of concept that the FBO will be really useful for this project. I hope the road is less
bumpier by now and I don’t step on any other complicated problem.&lt;/p&gt;
&lt;p&gt;Wish me luck!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-26-week-4-joaodellagli.html" rel="alternate"/>
    <summary>Welcome again to another weekly blogpost! Today, let’s talk about the importance of guidance throughout a project.</summary>
    <category term="google" label="google"/>
    <published>2023-06-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-24-week-4-praneeth.html</id>
    <title>Week 4: Exam Preparations and Reviewing</title>
    <updated>2023-06-24T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-4-exam-preparations-and-reviewing"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week, amidst end-semester exams, I managed to accomplish a few notable tasks. Let’s dive into the highlights:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Merging &lt;strong&gt;CardUI&lt;/strong&gt;: The PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/398"&gt;#398&lt;/a&gt; introduced the &lt;strong&gt;CardUI&lt;/strong&gt; to the UI system of FURY. After a successful review and test check, it was merged into the codebase.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-24-week-4-praneeth.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id3"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “#540”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Revisiting PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/540"&gt;#540&lt;/a&gt;: I restarted working on PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/540"&gt;#540&lt;/a&gt; as I wasn’t satisfied with the previous approach when I checked it for rebasing. I took the opportunity to update the code and ensure that the unit tests passed successfully. Although there are a few issues remaining in the tests, I am determined to resolve them and move forward with the implementation. This PR aims to improve the usage of the &lt;strong&gt;numpy_to_vtk_image_data&lt;/strong&gt; utility function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Independent Scrollbar Consideration: We are currently evaluating the necessity of making the Scrollbar an independent element. Currently it is only used by the &lt;strong&gt;ListBox2D&lt;/strong&gt;, we are exploring various use cases to determine if there are other scenarios where the Scrollbar can be employed independently. This evaluation will help us make an informed decision about its future implementation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PR Reviews: In the brief intervals between exams, I utilized the time to review two PRs: &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/446"&gt;#446&lt;/a&gt; - Resize panel and &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/460"&gt;#460&lt;/a&gt; - Tree UI.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No, fortunately, I didn’t encounter any major obstacles or challenges during my tasks this week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-24-week-4-praneeth.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id6"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “#540”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Once the exams are over, I am eagerly looking forward to making a full comeback to development. My immediate plans include addressing the remaining issues in PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/540"&gt;#540&lt;/a&gt; and completing the pending tasks. I will also catch up on any missed discussions and sync up with the team to align our goals for the upcoming weeks.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-24-week-4-praneeth.html" rel="alternate"/>
    <summary>This week, amidst end-semester exams, I managed to accomplish a few notable tasks. Let’s dive into the highlights:</summary>
    <category term="google" label="google"/>
    <published>2023-06-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-19-week-3-tvcastillod.html</id>
    <title>Week 3: Working on uncertainty and details of the first PR</title>
    <updated>2023-06-19T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-3-working-on-uncertainty-and-details-of-the-first-pr"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I made some adjustments to the ellipsoid actor definition, now called &lt;em&gt;tensor&lt;/em&gt;. This was something discussed in the weekly meeting as the coming changes are related to this actor, the idea now is to have a tensor actor that allows choosing between displaying the tensor ellipsoids or the uncertainty cones (later on). I also worked on the uncertainty calculation, and the cone SDF for the visualization, so I plan to do a WIP PR next to start getting feedback on this new addition.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;As for the uncertainty calculation, other data is needed such as the noise variance and the design matrix (check &lt;a class="reference external" href="https://onlinelibrary.wiley.com/doi/full/10.1002/mrm.21111"&gt;this&lt;/a&gt; article for more details), I need to identify which should be the parameters for the function definition. I also have to work on the documentation, so the function and its purpose are clear. I plan to make some final adjustments related to the uncertainty so that the next PR is ready for submission this week. I also expect to make final changes to the first PR so that it can be merged soon.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not this week, I will wait for feedback to see if there is anything I need to review or correct.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-19-week-3-tvcastillod.html" rel="alternate"/>
    <summary>I made some adjustments to the ellipsoid actor definition, now called tensor. This was something discussed in the weekly meeting as the coming changes are related to this actor, the idea now is to have a tensor actor that allows choosing between displaying the tensor ellipsoids or the uncertainty cones (later on). I also worked on the uncertainty calculation, and the cone SDF for the visualization, so I plan to do a WIP PR next to start getting feedback on this new addition.</summary>
    <category term="google" label="google"/>
    <published>2023-06-19T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-19-week-3-joaodellagli.html</id>
    <title>Week 3: Watch Your Expectations</title>
    <updated>2023-06-19T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-3-watch-your-expectations"&gt;

&lt;p&gt;Hello everyone, it’s time for another weekly blogpost! This week,
I will talk about how you should watch your expectations when working with any project.&lt;/p&gt;
&lt;section id="this-last-week-s-effort"&gt;
&lt;h2&gt;This Last Week’s Effort&lt;/h2&gt;
&lt;p&gt;As I supposedly managed to make the texture allocation part working, this last week’s goal was to render something to a FBO. Well, I could make
textures work, but what I wasn’t expecting and later realised, was that the FBO setup not working. Below I will describe where I got stuck.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;After getting the textures setup right, I was ready to render some color to the FBO. Well, I &lt;strong&gt;was&lt;/strong&gt;, because I didn’t expect
I would have another problem, this time, with the FBO setup. As described in my &lt;span class="xref std std-doc"&gt;week 1 blogpost&lt;/span&gt;,
a FBO needs some requirements to work. My current problem relies on the FBO method &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FBO.SetContext()&lt;/span&gt;&lt;/code&gt;, that for some reason is not being able to generate the FBO.
Below, how the method is currently operating:&lt;/p&gt;
&lt;img alt="Image showing the SetContext's VTK implementation" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/setcontext.png" /&gt;
&lt;p&gt;Apparently, the method is stuck before the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;this-&amp;gt;CreateFBO()&lt;/span&gt;&lt;/code&gt;, that can be checked when we call &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;FBO.GetFBOIndex()&lt;/span&gt;&lt;/code&gt;, that returns a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;0&lt;/span&gt;&lt;/code&gt; value,
meaning the FBO was not generated by the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;glGenFramebuffers()&lt;/span&gt;&lt;/code&gt; function, that is inside the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;GetContext()&lt;/span&gt;&lt;/code&gt; method.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;As I got stuck again with this simple step, talking with my mentors we concluded that a plan B is needed for my GSoC participation as
my current project is not having much progress. This plan B that I am gonna start working on this week involves working on &lt;a class="reference external" href="https://github.com/fury-gl/furyspeed"&gt;FURY Speed&lt;/a&gt;,
a FURY addon that aims to develop optimized functions and algorithms to help speed up graphical applications. The suggestion was to
work on a PR I submitted months ago, &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/783"&gt;#783&lt;/a&gt;, in a way to integrate that into FURY Speed.
Also, I plan to keep working on my current project to find the solution I will need to make the FBO usage work.&lt;/p&gt;
&lt;p&gt;Let’s get to work!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-19-week-3-joaodellagli.html" rel="alternate"/>
    <summary>Hello everyone, it’s time for another weekly blogpost! This week,
I will talk about how you should watch your expectations when working with any project.</summary>
    <category term="google" label="google"/>
    <published>2023-06-19T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-17-week-3-praneeth.html</id>
    <title>Week 3: Resolving Combobox Icon Flaw and TextBox Justification</title>
    <updated>2023-06-17T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-3-resolving-combobox-icon-flaw-and-textbox-justification"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week, I tackled the &lt;strong&gt;ComboBox2D&lt;/strong&gt; icon flaw, which was addressed using Pull Request (PR) &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/576"&gt;#576&lt;/a&gt;. The problem arose when we added a &lt;strong&gt;ComboBox2D&lt;/strong&gt; to the &lt;strong&gt;TabUI&lt;/strong&gt;. The &lt;strong&gt;TabUI&lt;/strong&gt; would propagate the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;set_visibility&lt;/span&gt; &lt;span class="pre"&gt;=&lt;/span&gt; &lt;span class="pre"&gt;true&lt;/span&gt;&lt;/code&gt; for all its child elements, causing the combobox to appear on the screen without the icon change. To fix this issue, PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/768"&gt;#768&lt;/a&gt; updated the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;set_visibility&lt;/span&gt;&lt;/code&gt; method of the UI class, ensuring that the icon change was applied correctly.&lt;/p&gt;
&lt;figure class="align-center"&gt;
&lt;img alt="Combobox Icon" src="https://user-images.githubusercontent.com/98275514/215267056-a0fd94d9-ae6d-4cf8-8475-ab95fe0ef303.png" /&gt;
&lt;/figure&gt;
&lt;p&gt;Next, I focused on the textbox justification. As discussed in our meeting, I added a new property called &lt;strong&gt;boundingbox&lt;/strong&gt; to the &lt;strong&gt;TextBlock2D&lt;/strong&gt;. However, I encountered a problem when resizing the &lt;strong&gt;TextBlock2D&lt;/strong&gt;. The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;vtkTextActor&lt;/span&gt;&lt;/code&gt; property would switch from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SetTextScaleModeToNone&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SetTextScaleModeToProp&lt;/span&gt;&lt;/code&gt;, which would scale the font according to the position1 (lower left corner) and position2 (upper right corner) of the UI. This inconsistency in font scaling resulted in misaligned text actors. I spent some time investigating this issue, and you can find my progress in the ongoing PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/803"&gt;#803&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, I started working on creating a Scrollbar component by inheriting the &lt;strong&gt;LineSlider2D&lt;/strong&gt;. I made adjustments to the position and other attributes to make it function as a scrollbar. However, I encountered some confusion regarding how to separate the scrollbar component from other elements and determine what should be included in the scrollbar itself.&lt;/p&gt;
&lt;figure class="align-center"&gt;
&lt;img alt="Scrollbar" src="https://github.com/fury-gl/fury/assets/64432063/d9c8d60e-3ade-49ff-804a-fd0b340b0b24" /&gt;
&lt;/figure&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I faced a challenge while working on the text justification. It took me several days to identify the root cause of the occasional malfunctioning of the &lt;strong&gt;TextBlock2D&lt;/strong&gt;. At last, I found out the reason behind the issue.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Next week, I have several tasks lined up. Firstly, I will be working on the &lt;strong&gt;CardUI&lt;/strong&gt; PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/398"&gt;#398&lt;/a&gt;. Additionally, I plan to complete the segregation of the scrollbar component, ensuring its independence and clarity. Lastly, I will be working on issue &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/540"&gt;#540&lt;/a&gt;, which involves updating the use of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;numpy_to_vtk_image_data&lt;/span&gt;&lt;/code&gt; utility function.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-17-week-3-praneeth.html" rel="alternate"/>
    <summary>This week, I tackled the ComboBox2D icon flaw, which was addressed using Pull Request (PR) #576. The problem arose when we added a ComboBox2D to the TabUI. The TabUI would propagate the set_visibility = true for all its child elements, causing the combobox to appear on the screen without the icon change. To fix this issue, PR #768 updated the set_visibility method of the UI class, ensuring that the icon change was applied correctly.</summary>
    <category term="google" label="google"/>
    <published>2023-06-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-12-week-2-joaodellagli.html</id>
    <title>Week 2: The Importance of (good) Documentation</title>
    <updated>2023-06-12T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-2-the-importance-of-good-documentation"&gt;

&lt;p&gt;Hello everybody, welcome to the week 2 of this project! I must admit I thought this would be simpler than it is currently being, but I forgot that when it comes to dealing with computer graphics’ applications, things never are. Below, some updates on what I have been up to for this past week.&lt;/p&gt;
&lt;section id="this-last-week-s-effort"&gt;
&lt;h2&gt;This Last Week’s Effort&lt;/h2&gt;
&lt;p&gt;Last week, I was facing some issues with a VTK feature essential so I could move forward with my project: Framebuffer Objects.
As described in my &lt;span class="xref std std-doc"&gt;last blogpost&lt;/span&gt;, for some reason the 2D allocation methods for it weren’t working.
In a meeting with my mentors, while we were discussing and searching through VTK’s FramebufferObject and TextureObject documentation, and the code itself for the problem,
one TextureObject method caught my attention: &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkTextureObject.html#a0988fa2a30b640c93392c2188030537e"&gt;vtkTextureObject.SetContext()&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;My last week’s code was:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color_texture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkTextureObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# color texture declaration&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bind&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# binding of the texture for operations&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetDataType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the datatype for unsigned char&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInternalFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGBA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the format as RGBA&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGBA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMinificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the minfilter as linear&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMagnificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the magfilter as linear&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Allocate2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# here is where the code stops&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But it turns out that to allocate the FBO’s textures, of type vtkTextureObject, you need to also set the context where the texture object
will be present, so it lacked a line, that should be added after &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Bind()&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color_texture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkTextureObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bind&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# set the context where the texture object will be present&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetDataType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInternalFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMinificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMagnificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The code worked fine. But as my last blogpost showed, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt; method worked just fine without a (visible) problem, why is that?
Well, in fact, it &lt;strong&gt;didn’t work&lt;/strong&gt;. If we check the code for the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate2D()&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt;, one difference can be spotted:&lt;/p&gt;
&lt;img alt="Image comparing Allocate2D and Allocate3D methods" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/allocate-2d-3d.png" /&gt;
&lt;p&gt;While in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate2D()&lt;/span&gt;&lt;/code&gt; there is an &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;assert(this-&amp;gt;Context);&lt;/span&gt;&lt;/code&gt;, in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt; the assertion is translated into:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;vtkErrorMacro&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No context specified. Cannot create texture.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This slight difference is significant: while in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate2D()&lt;/span&gt;&lt;/code&gt; the program immediately fails, in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt; the function is simply returned
&lt;strong&gt;false&lt;/strong&gt;, with its error pushed to vtkErrorMacro. I could have realised that earlier if I were using vtkErrorMacro, but this difference in their
implementation made it harder for me and my mentors to realise what was happening.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;After making that work, this week’s goal is to render something to the Framebuffer Object, now that is working. To do that,
first I will need to do some offscreen rendering to it, and afterwards render what it was drawn to its color attachment, the Texture Object I
was struggling to make work, into the screen, drawing its texture to a billboard. Also, I plan to start using vtkErrorMacro, as it seems like
the main error interface when working with VTK, and that may make my life easier.&lt;/p&gt;
&lt;p&gt;See you next week!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-12-week-2-joaodellagli.html" rel="alternate"/>
    <summary>Hello everybody, welcome to the week 2 of this project! I must admit I thought this would be simpler than it is currently being, but I forgot that when it comes to dealing with computer graphics’ applications, things never are. Below, some updates on what I have been up to for this past week.</summary>
    <category term="google" label="google"/>
    <published>2023-06-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-12-week-2-tvcastillod.html</id>
    <title>Week 2: Making adjustments to the Ellipsoid Actor</title>
    <updated>2023-06-12T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-2-making-adjustments-to-the-ellipsoid-actor"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I made some minor adjustments to the last PR I submitted. Last time it was a draft since I was waiting for the weekly meeting to know how to proceed, but now it is ready. I am waiting for the review so I can make the necessary corrections and adjustments to merge this first PR soon.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;As I receive feedback, I will continue to work on the &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;PR #791&lt;/a&gt; and make adjustments and changes as needed. That said, I will start working on another part of the project, which is the visualization of uncertainty. Without going into details (for now) what I have to do is:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Create a double_cone or dti_uncertainty actor. I’m going to work on the double cone made also with raymarching and SDF, since the implementation is pretty much the same as the ellipsoid I already have.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make a function that returns the level of the uncertainty given by the angle of the uncertainty cone we want to visualize. For this I need to double-check the maths behind the uncertainty calculation to make sure I’m getting the right results.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not exactly, but one of the things that were mentioned in the last meeting is that we should try to simplify the shader code as much as we can, that is, to break down the entire implementation into simple and easy-to-understand lines of code, which also allows the definition of functions that can be reused later on. I need to keep working on this, so I can make my code even more readable and fit the new shader structure.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-12-week-2-tvcastillod.html" rel="alternate"/>
    <summary>I made some minor adjustments to the last PR I submitted. Last time it was a draft since I was waiting for the weekly meeting to know how to proceed, but now it is ready. I am waiting for the review so I can make the necessary corrections and adjustments to merge this first PR soon.</summary>
    <category term="google" label="google"/>
    <published>2023-06-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-11-week-2-praneeth.html</id>
    <title>Week 2: Tackling Text Justification and Icon Flaw Issues</title>
    <updated>2023-06-11T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-2-tackling-text-justification-and-icon-flaw-issues"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week, I continued tweaking the text justification PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/790"&gt;#790&lt;/a&gt; and encountered a new issue when combining both &lt;strong&gt;justification&lt;/strong&gt; and &lt;strong&gt;vertical_justification&lt;/strong&gt;. The problem arose because the &lt;strong&gt;vertical_justification&lt;/strong&gt; did not take into account the applied &lt;strong&gt;justification&lt;/strong&gt;, resulting in unexpected behavior. I focused on resolving this issue by ensuring that both justifications work together correctly. Additionally, during the weekly meeting, we discussed the problem and decided to introduce new properties such as boundaries and padding to enhance the functionality of the text justification feature.&lt;/p&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-11-week-2-praneeth.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id6"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “#768”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Furthermore, I started working on PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/576"&gt;#576&lt;/a&gt;, which aimed to address the flaw in the icon of the &lt;strong&gt;combobox&lt;/strong&gt;. While investigating this issue, I discovered related problems and PRs, including &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/562"&gt;#562&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/731"&gt;#731&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/768"&gt;#768&lt;/a&gt;. The main challenge was related to the propagation of the &lt;strong&gt;set_visibility&lt;/strong&gt; feature of the UI, causing the &lt;strong&gt;combobox&lt;/strong&gt; to automatically open its options. To overcome this issue, I requested the author of PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/768"&gt;#768&lt;/a&gt; to rebase their pull request as it can be a solution for the issue.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;A significant portion of my time was dedicated to resolving the text justification issue when both justification types were combined. It required careful analysis and adjustments to ensure the desired behavior.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;For the upcoming week, I have the following plans:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Work on modifying the text justification implementation to address any remaining issues and ensure compatibility with other features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Begin the implementation of the scrollbar class from scratch to provide a robust and customizable scrollbar element.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on completing the resolution of the icon flaw issue by collaborating with the relevant stakeholders and ensuring the necessary modifications are made.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-11-week-2-praneeth.html" rel="alternate"/>
    <summary>This week, I continued tweaking the text justification PR #790 and encountered a new issue when combining both justification and vertical_justification. The problem arose because the vertical_justification did not take into account the applied justification, resulting in unexpected behavior. I focused on resolving this issue by ensuring that both justifications work together correctly. Additionally, during the weekly meeting, we discussed the problem and decided to introduce new properties such as boundaries and padding to enhance the functionality of the text justification feature.</summary>
    <category term="google" label="google"/>
    <published>2023-06-11T00:00:00+00:00</published>
  </entry>
</feed>
