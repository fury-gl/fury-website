<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posted in 2023</title>
  <updated>2023-07-27T19:49:42.626621+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/2023/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.4.post1">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-17-week-7-joaodellagli.html</id>
    <title>Week 7: Experimentation Done</title>
    <updated>2023-07-17T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-7-experimentation-done"&gt;

&lt;p&gt;Hello everyone, welcome to another weekly blogpost! Let’s talk about the current status of my project (spoiler: it is beautiful).&lt;/p&gt;
&lt;section id="last-week-s-effort"&gt;
&lt;h2&gt;Last Week’s Effort&lt;/h2&gt;
&lt;p&gt;Having accomplished a KDE rendering to a billboard last week, I was then tasked with trying a different approach to how the
rendering was done. So, to recap, below was how I was doing it:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Render one point’s KDE offscreen to a single billboard, passing its position and sigma to the fragment shader as uniforms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Capture the last rendering’s screen as a texture.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Render the next point’s KDE, and sum it up with the last rendering’s texture.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do this until the end of the points.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Capture the final render screen as a texture.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apply post processing effects (colormapping).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Render the result to the screen.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This approach was good, but it had some later limitations and issues that would probably take more processing time and attention to details (correct matrix
transformations, etc) than the ideal. The different idea is pretty similar, but with some differences:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Activate additive blending in OpenGL.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Render each point’s KDE to its own billboard, with position defined by the point’s position, all together in one pass.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Capture the rendered screen as a texture.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pass this texture to a billboard.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apply post processing effects (colormapping).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Render the result to the screen.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So I needed to basically do that.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="was-it-hard"&gt;
&lt;h2&gt;Was it Hard?&lt;/h2&gt;
&lt;p&gt;Fortunately, it wasn’t so hard to do it in the end. Following those steps turned out pretty smooth, and after some days,
I had the below result:&lt;/p&gt;
&lt;img alt="Final 2D KDE render" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/final_2d_plot.png" /&gt;
&lt;p&gt;This is a 2D KDE render of random 1000 points. For this I used the &lt;em&gt;“viridis”&lt;/em&gt; colormap from &lt;cite&gt;matplotlib&lt;/cite&gt;. Some details worth noting:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;For this to work, I have implemented three texture helper functions: &lt;cite&gt;window_to_texture()&lt;/cite&gt;, &lt;cite&gt;texture_to_actor()&lt;/cite&gt; and &lt;cite&gt;colormap_to_texture()&lt;/cite&gt;. The first one captures a window and pass it as a texture to an actor, the second one passes an imported texture to an actor, and the last one passes a colormap, prior passed as an array, as a texture to an actor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The colormap is directly get from &lt;cite&gt;matplotlib&lt;/cite&gt;, available in its &lt;cite&gt;colormaps&lt;/cite&gt; object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This was only a 2D flatten plot. At first, I could not figure out how to make the connection between the offscreen interactor and the onscreen one, so rotating and moving around the render was not happening. After some ponder and talk to my mentors, they told me to use &lt;em&gt;callback&lt;/em&gt; functions inside the interactor, and after doing that, I managed to make the 3D render work, which had the following result:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="3D KDE render" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/3d_kde_gif.gif" /&gt;
&lt;p&gt;After those results, I refactored my PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/804"&gt;#804&lt;/a&gt; to better fit its current status, and it is
now ready for review. Success!&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;After finishing the first iteration of my experimental program, the next step is to work on an API for KDE rendering. I plan to meet
with my mentors and talk about the details of this API, so expect an update next week. Also, I plan to take a better look on my fellow GSoC FURY
contributors work so when their PRs are ready for review, I will have to be better prepared for it.&lt;/p&gt;
&lt;p&gt;Let’s get to work!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-17-week-7-joaodellagli.html" rel="alternate"/>
    <summary>Hello everyone, welcome to another weekly blogpost! Let’s talk about the current status of my project (spoiler: it is beautiful).</summary>
    <category term="google" label="google"/>
    <published>2023-07-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-17-week-7-tvcastillod.html</id>
    <title>Week 7: Adjustments on the Uncertainty Cones visualization</title>
    <updated>2023-07-17T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-7-adjustments-on-the-uncertainty-cones-visualization"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I was told to refactor some parts of the uncertainty PR, since I was relying too much on &lt;strong&gt;dipy&lt;/strong&gt; functions which is not good because it makes maintenance more difficult as &lt;strong&gt;dipy&lt;/strong&gt; requires &lt;strong&gt;FURY&lt;/strong&gt; for some functionalities. So I did some adjustments on the uncertainty function parameters and the corresponding tests, hopefully I managed to get with the most appropriate definition but I need to receive a first feedback to see how much I have to adjust the implementation. As I had to delete some relevant code lines inside the uncertainty calculation which consisted of preprocessing the data in order to define the necessary variables for the uncertainty formula, I was also suggested to make a tutorial of this new feature, so I can explain in detail how to obtain and adjust the necessary information, before passing it to the actor, and in general how and what is the purpose of this new function.&lt;/p&gt;
&lt;p&gt;I also continued working on the ellipsoid tutorial, which I hope to finish this week so that I can ask for a first revision.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will finish defining some details of the tutorial so that it is ready for review, and now I will start working on the tutorial related to the uncertainty, while I receive feedback on the other PRs. Also, as preparation for the next step I will start exploring on how to address visualization of spherical harmonics for ODF glyphs visualization, I found that a previous GSoC participant at FURY started working on that and also did several work with raymarching and SDF (&lt;span class="xref std std-doc"&gt;here is a summary of the work&lt;/span&gt;), so I will take a deeper look on that to see if I can get something useful I can start with.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not this week, but I foresee some problems with the uncertainty PR, we will see how it goes.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-17-week-7-tvcastillod.html" rel="alternate"/>
    <summary>I was told to refactor some parts of the uncertainty PR, since I was relying too much on dipy functions which is not good because it makes maintenance more difficult as dipy requires FURY for some functionalities. So I did some adjustments on the uncertainty function parameters and the corresponding tests, hopefully I managed to get with the most appropriate definition but I need to receive a first feedback to see how much I have to adjust the implementation. As I had to delete some relevant code lines inside the uncertainty calculation which consisted of preprocessing the data in order to define the necessary variables for the uncertainty formula, I was also suggested to make a tutorial of this new feature, so I can explain in detail how to obtain and adjust the necessary information, before passing it to the actor, and in general how and what is the purpose of this new function.</summary>
    <category term="google" label="google"/>
    <published>2023-07-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-15-week-7-praneeth.html</id>
    <title>Week 7: Sowing the seeds for TreeUI</title>
    <updated>2023-07-15T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-7-sowing-the-seeds-for-treeui"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week, I focused on completing the &lt;strong&gt;TextBlock2D&lt;/strong&gt; Bounding Box feature. However, the tests were failing due to automatic background resizing based on content and improper text actor alignment during setup. I encountered difficulties while positioning the text, which caused the text to appear offset and led to test failures.&lt;/p&gt;
&lt;p&gt;Text background greater than the actual maximum size:&lt;/p&gt;
&lt;img alt="Text background greater than the actual maximum size in ComboBox2D" class="align-center" src="https://github.com/fury-gl/fury/assets/64432063/aaf4a764-4480-4f96-9adf-29d9e28135a6" /&gt;
&lt;p&gt;Text offset from center:&lt;/p&gt;
&lt;img alt="Text offset from center in RingSlider2D" class="align-center" src="https://github.com/fury-gl/fury/assets/64432063/0a3bc1e6-a566-4c08-9ca4-a191525b9c97" /&gt;
&lt;p&gt;Additionally, I reviewed PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/814"&gt;#814&lt;/a&gt; and noticed that after PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/769"&gt;#769&lt;/a&gt;, all demos and examples were merged into a single folder, which affected the paths used in the Scientific Domain Section. To address this, I created PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/820"&gt;#820&lt;/a&gt; to redirect the links to the correct path.&lt;/p&gt;
&lt;p&gt;As I faced issues with the &lt;strong&gt;TextBlock2D&lt;/strong&gt; PR, I took the opportunity to rebase and continue working on the &lt;strong&gt;TreeUI&lt;/strong&gt; PR since there were no updates from the author.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;While fixing the issues with the tests for the &lt;strong&gt;TextBlock2D&lt;/strong&gt; bounding box, I encountered a weird behavior in text positioning when using the center alignment. The output varied depending on the sequence of repositioning which we are still investigating.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will continue working on the &lt;strong&gt;TreeUI&lt;/strong&gt; and resolve the &lt;strong&gt;TextBlock2D&lt;/strong&gt; error to ensure both PRs progress smoothly.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-15-week-7-praneeth.html" rel="alternate"/>
    <summary>This week, I focused on completing the TextBlock2D Bounding Box feature. However, the tests were failing due to automatic background resizing based on content and improper text actor alignment during setup. I encountered difficulties while positioning the text, which caused the text to appear offset and led to test failures.</summary>
    <category term="google" label="google"/>
    <published>2023-07-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-10-week-6-joaodellagli.html</id>
    <title>Week 6: Things are Starting to Build Up</title>
    <updated>2023-07-10T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-6-things-are-starting-to-build-up"&gt;

&lt;p&gt;Hello everyone, time for a other weekly blogpost! Today, I will show you my current progress on my project and latest activities.&lt;/p&gt;
&lt;section id="what-i-did-last-week"&gt;
&lt;h2&gt;What I did Last Week&lt;/h2&gt;
&lt;p&gt;Last week I had the goal to implement KDE rendering to the screen (if you want to understand what this is, check my &lt;a href="#id1"&gt;&lt;span class="problematic" id="id2"&gt;:doc:`last blogpost &amp;lt;2023-07-03-week-5-joaodellagli&amp;gt;`_&lt;/span&gt;&lt;/a&gt;).
After some days diving into the code, I finally managed to do it:&lt;/p&gt;
&lt;aside class="system-message" id="id1"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-07-10-week-6-joaodellagli.rst&lt;/span&gt;, line 14); &lt;em&gt;&lt;a href="#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mismatch: both interpreted text role prefix and reference suffix.&lt;/p&gt;
&lt;/aside&gt;
&lt;img alt="KDE render to a billboard" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/buffer_compose.png" /&gt;
&lt;p&gt;This render may seem clean and working, but the code isn’t exactly like that. For this to work, some tricks and work arounds needed to
be done, as I will describe in the section below.&lt;/p&gt;
&lt;p&gt;Also, I reviewed the shader part of Tania’s PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;#791&lt;/a&gt;, that implement ellipsoid actors inside
FURY. It was my first review of a PR that isn’t a blogpost, so it was an interesting experience and I hope I can get better at it.&lt;/p&gt;
&lt;p&gt;It is important as well to point out that I had to dedicate myself to finishing my graduation capstone project’s presentation that I will attend
to this week, so I had limited time to polish my code, which I plan to do better this week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;The KDE render basically works rendering the KDE of a point to a texture and summing that texture to the next render. For this to work,
the texture, rendered to a billboard, needs to be the same size of the screen, otherwise the captured texture will include the black background.
The problem I faced with that is that the billboard scaling isn’t exactly well defined, so I had to guess for a fixed screen size
(in this example, I worked with &lt;em&gt;600x600&lt;/em&gt;) what scaling value made the billboard fit exactly inside the screen (it’s &lt;em&gt;3.4&lt;/em&gt;). That is far from ideal as I
will need to modularize this behavior inside a function that needs to work for every case, so I will need to figure out a way to fix that
for every screen size. For that, I have two options:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Find the scaling factor function that makes the billboard fit into any screen size.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Figure out how the scaling works inside the billboard actor to understand if it needs to be refactored.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first seems ok to do, but it is kind of a work around as well. The second one is a good general solution, but it is a more delicate one,
as it deals with how the billboard works and already existing applications of it may suffer problems if the scaling is changed.
I will see what is better talking with my mentors.&lt;/p&gt;
&lt;p&gt;Another problem I faced (that is already fixed) relied on shaders. I didn’t fully understood how shaders work inside FURY so I was
using my own fragment shader implementation, replacing the already existing one completely. That was working, but I was having an issue
with the texture coordinates of the rendering texture. As I completely replaced the fragment shader, I had to pass custom texture coordinates
to it, resulting in distorted textures that ruined the calculations. Those issues motivated me to learn the shaders API, which allowed me
to use the right texture coordinates and finally render the results you see above.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;For this week, I plan to try a different approach Filipi, one of my mentors, told me to do. This approach was supposed to be the original
one, but a communication failure lead to this path I am currently in. This approach renders each KDE calculation into its own billboard,
and those are rendered together with additive blending. After this first pass, this render is captured into a texture and then rendered to
another big billboard.&lt;/p&gt;
&lt;p&gt;Also, I plan to refactor my draft PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/804"&gt;#804&lt;/a&gt; to make it more understandable, as its description still dates back to the time I was using the
flawed Framebuffer implementation, and my fellow GSoC contributors will eventually review it, and to do so, they will need to understand it.&lt;/p&gt;
&lt;p&gt;Wish me luck!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-10-week-6-joaodellagli.html" rel="alternate"/>
    <summary>Hello everyone, time for a other weekly blogpost! Today, I will show you my current progress on my project and latest activities.</summary>
    <category term="google" label="google"/>
    <published>2023-07-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-10-week-6-tvcastillod.html</id>
    <title>Week 6: First draft of the Ellipsoid tutorial</title>
    <updated>2023-07-10T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-6-first-draft-of-the-ellipsoid-tutorial"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/818"&gt;#PR 818: Tutorial on using ellipsoid actor to visualize tensor ellipsoids for DTI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I created the PR for the tutorial that will show the use that can be made of the &lt;em&gt;ellipsoid&lt;/em&gt; actor in the visualization of diffusion tensor ellipsoids. It is still in its most basic stage, but the structure that I have thought of for now consists of: displaying a slice using &lt;em&gt;tensor_slicer&lt;/em&gt; with spheres of 100, 200, and 724 vertices, and using &lt;em&gt;ellipsoid&lt;/em&gt; actor, and show a comparison of the visual quality of the tensor ellipsoids. Then, display a ROI using both actors and a whole brain using the &lt;em&gt;ellipsoid&lt;/em&gt; actor, to show that this new actor gives the possibility to display more data.&lt;/p&gt;
&lt;p&gt;I also submitted the &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/810"&gt;uncertainty PR&lt;/a&gt; for review, in order to start making the necessary corrections.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I need &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;#PR 791&lt;/a&gt; to be merged first, but meanwhile, I will start working on the explanation of the tutorial, since I already have the code structure and the idea of what I want to illustrate. I will discuss further work with my mentors at the upcoming meeting, so I can organize myself better and plan how I’m going to address the pending parts of my project.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I found no major difficulties this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-10-week-6-tvcastillod.html" rel="alternate"/>
    <summary>#PR 818: Tutorial on using ellipsoid actor to visualize tensor ellipsoids for DTI</summary>
    <category term="google" label="google"/>
    <published>2023-07-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-08-week-6-praneeth.html</id>
    <title>Week 6: BoundingBox for TextBlock2D!</title>
    <updated>2023-07-08T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-6-boundingbox-for-textblock2d"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week, I worked on improving the &lt;strong&gt;TextBlock2D&lt;/strong&gt; component in the UI system. I started from scratch to address alignment and scaling issues. When resizing the &lt;strong&gt;TextBlock2D&lt;/strong&gt;, the text alignment and justification with the background rectangle were inconsistent. To resolve this, I introduced a new “boundingbox” property that calculates the text bounding box based on its content. Additionally, I separated the scaling mode from the resizing action with the new “auto_font_scale” property, enabling automatic font scaling according to the bounding box. This will provide better alignment, justified text, and smoother font scaling for the &lt;strong&gt;TextBlock2D&lt;/strong&gt; component. Try it out at &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/803"&gt;PR #803&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="TextBlock2D will different justifications" class="align-center" src="https://github.com/fury-gl/fury/assets/64432063/94212105-7259-48da-8fdc-41ee987bda84" /&gt;
&lt;p&gt;As discussed last week, we also made a decision regarding the scrollbar. After exploring different use cases, we concluded that creating an independent scrollbar is not necessary at the moment. Therefore, we will close the related pull requests. You can find out more about it in the discussion &lt;a class="reference external" href="https://github.com/fury-gl/fury/discussions/816"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Implementing the bounding box feature took some extra time as I needed to carefully consider its impact on other UI elements that rely on the &lt;strong&gt;TextBlock2D&lt;/strong&gt; component.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Next, I will focus on completing the TextBlock2D Bounding Box PR, which will also indirectly finalize the Spinbox PR.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-08-week-6-praneeth.html" rel="alternate"/>
    <summary>This week, I worked on improving the TextBlock2D component in the UI system. I started from scratch to address alignment and scaling issues. When resizing the TextBlock2D, the text alignment and justification with the background rectangle were inconsistent. To resolve this, I introduced a new “boundingbox” property that calculates the text bounding box based on its content. Additionally, I separated the scaling mode from the resizing action with the new “auto_font_scale” property, enabling automatic font scaling according to the bounding box. This will provide better alignment, justified text, and smoother font scaling for the TextBlock2D component. Try it out at PR #803.</summary>
    <category term="google" label="google"/>
    <published>2023-07-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-03-week-5-tvcastillod.html</id>
    <title>Week 5: Preparing the data for the Ellipsoid tutorial</title>
    <updated>2023-07-03T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-5-preparing-the-data-for-the-ellipsoid-tutorial"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;During the weekly meeting with my mentors, there was a small discussion over the naming of the actor and its usage. On the one hand, although the purpose of the actor is to visualize diffusion tensor ellipsoids, the idea is that it can also be used for any other type of visualization that requires the use of ellipsoids, so in the end, we decided to keep the name &lt;em&gt;ellipsoid&lt;/em&gt; as it is more generic. On the other hand, as there is already an actor made for the purpose of tensor visualization, namely &lt;a class="reference external" href="https://github.com/fury-gl/fury/blob/e595bad0246899d58d24121dcc291eb050721f9f/fury/actor.py#L1172"&gt;tensor_slicer&lt;/a&gt;, it might not be obvious how and why one would use this new ellipsoid actor for this purpose, thus it was proposed to make a tutorial that can clarify this. The main difference between both actors relies on the quality and the amount of data that can be displayed, so the idea is to show the difference between both alternatives so the user can choose which one to use depending on their needs. To prepare the tutorial the first step was to &lt;a class="reference external" href="https://github.com/fury-gl/fury-data/pull/12"&gt;add the data&lt;/a&gt; I will use on &lt;a class="reference external" href="https://github.com/fury-gl/fury-data"&gt;fury-data&lt;/a&gt; so I can then fetch and load the datasets I need to work on the tutorial.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I need &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;#PR 791&lt;/a&gt; to be reviewed by my GSoC fellows at FURY, so I will address their comments, and additionally make adjustments on &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/810"&gt;#PR 810&lt;/a&gt; based on the feedback I receive. I will also start working on the tutorial, the idea is to show the use that can be made of the ellipsoid actor in the visualization of diffusion tensor ellipsoids, compared to the &lt;em&gt;tensor_slicer&lt;/em&gt; actor. I plan to create a WIP PR to start getting feedback on the general structure of the tutorial and the way everything will be explained.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not encounter any obstacles this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-03-week-5-tvcastillod.html" rel="alternate"/>
    <summary>During the weekly meeting with my mentors, there was a small discussion over the naming of the actor and its usage. On the one hand, although the purpose of the actor is to visualize diffusion tensor ellipsoids, the idea is that it can also be used for any other type of visualization that requires the use of ellipsoids, so in the end, we decided to keep the name ellipsoid as it is more generic. On the other hand, as there is already an actor made for the purpose of tensor visualization, namely tensor_slicer, it might not be obvious how and why one would use this new ellipsoid actor for this purpose, thus it was proposed to make a tutorial that can clarify this. The main difference between both actors relies on the quality and the amount of data that can be displayed, so the idea is to show the difference between both alternatives so the user can choose which one to use depending on their needs. To prepare the tutorial the first step was to add the data I will use on fury-data so I can then fetch and load the datasets I need to work on the tutorial.</summary>
    <category term="google" label="google"/>
    <published>2023-07-03T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-03-week-5-joaodellagli.html</id>
    <title>Week 5: All Roads Lead to Rome</title>
    <updated>2023-07-03T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-5-all-roads-lead-to-rome"&gt;

&lt;p&gt;Hello everyone, time for another weekly blogpost! Today, we will talk about taking different paths to reach your objective.&lt;/p&gt;
&lt;section id="last-week-s-effort"&gt;
&lt;h2&gt;Last Week’s Effort&lt;/h2&gt;
&lt;p&gt;After having the FBO properly set up, the plan was to finally &lt;em&gt;render&lt;/em&gt; something to it. Well, I wished for a less bumpy road
at my &lt;span class="xref std std-doc"&gt;last blogpost&lt;/span&gt; but as in this project things apparently tend to go wrong,
of course the same happened with this step.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;Days passed without anything being rendered to the FBO. The setup I was working on followed the simplest OpenGL pipeline of rendering to
an FBO:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Setup the FBO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attach a texture to it’s color attachment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup the shader to be used in the FBO render and the shader to render the FBO’s Color Attachment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Render to the FBO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the color attachment as texture attached to a billboard to render what was on the screen&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But it seems like this pipeline doesn’t translate well into VTK. I paired again on wednesday with my mentors, Bruno and Filipi, to try to figure out
where the problem was, but after hours we could not find it. Wednesday passed and then thursday came, and with thursday, a solution:
Bruno didn’t give up on the idea and dug deep on VTK’s documentation until he found a workaround to do what we wanted, that was retrieving a
texture from what was rendered to the screen and pass it as a texture to render to the billboard. To do it, he figured out we needed to use
a different class, &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkWindowToImageFilter.html"&gt;vtkWindowToImageFilter&lt;/a&gt;, a class that has the specific
job of doing exactly what I described above. Below, the steps to do it:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkWindowToImageFilter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scene&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetRenderWindow&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;texture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkTexture&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInputConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;windowToImageFilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetOutputPort&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# Bind the framebuffer texture to the desired actor&lt;/span&gt;
&lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetTexture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texture&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is enough to bind to the desired actor a texture that corresponds to what was prior rendered to the screen.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;Having a solution to that, now its time to finally render some KDE’s! This week’s plans involve implementing the first version of a KDE
calculation. For anyone interested in understanding what a Kernel Density Estimation is, here is a brief summary from this
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Kernel_density_estimation"&gt;Wikipedia page&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;In statistics, kernel density estimation (KDE) is the application of kernel smoothing for probability density estimation, i.e., a
non-parametric method to estimate the probability density function of a random variable based on kernels as weights. KDE answers a
fundamental data smoothing problem where inferences about the population are made, based on a finite data sample. In some fields
such as signal processing and econometrics it is also termed the Parzen–Rosenblatt window method, after Emanuel Parzen and Murray
Rosenblatt, who are usually credited with independently creating it in its current form. One of the famous applications of
kernel density estimation is in estimating the class-conditional marginal densities of data when using a naive Bayes classifier,
which can improve its prediction accuracy.&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;This complicated sentence can be translated into the below image:&lt;/p&gt;
&lt;img alt="KDE plot of 100 random points" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/KDE_plot.png" /&gt;
&lt;p&gt;That is what a KDE plot of 100 random points looks like. The greener the area, the greater the density of points. The plan is to implement
something like that with the tools we now have available.&lt;/p&gt;
&lt;p&gt;Let’s get to work!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-03-week-5-joaodellagli.html" rel="alternate"/>
    <summary>Hello everyone, time for another weekly blogpost! Today, we will talk about taking different paths to reach your objective.</summary>
    <category term="google" label="google"/>
    <published>2023-07-03T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-07-01-week-5-praneeth.html</id>
    <title>Week 5: Trying out PRs and Planning Ahead</title>
    <updated>2023-07-01T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-5-trying-out-prs-and-planning-ahead"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;Due to ongoing exams, my productivity was limited this week. However, I managed to find some time to explore and review a few PRs submitted by contributors:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Ellipsoid PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;#791&lt;/a&gt;:
This PR focuses on creating a new ellipsoid actor defined with SDF and raymarching techniques.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Website Improvement PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/812"&gt;#812&lt;/a&gt;:
This PR includes changes for the new compatibility section on the FURY home page.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Towards the end of the week, I had a meeting with my mentor. We discussed the current status of ongoing PRs and identified action points to focus on in the upcoming weeks. This discussion provided clarity on the challenges faced with certain PRs and issues.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, I didn’t encounter any major roadblocks or challenges that hindered my progress this week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;With the action points provided by my mentor, I will be dedicating the next week to completing those tasks.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-07-01-week-5-praneeth.html" rel="alternate"/>
    <summary>Due to ongoing exams, my productivity was limited this week. However, I managed to find some time to explore and review a few PRs submitted by contributors:</summary>
    <category term="google" label="google"/>
    <published>2023-07-01T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-27-week-4-tvcastillod.html</id>
    <title>Week 4: First draft of the DTI uncertainty visualization</title>
    <updated>2023-06-27T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-4-first-draft-of-the-dti-uncertainty-visualization"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/810"&gt;#PR 810: DTI uncertainty visualization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I made a second PR with the implementation of DTI uncertainty calculation and visualization. Below is an image of diffusion tensor ellipsoids and their associated uncertainty cones.&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/254747296-09a8674e-bfc0-4b3f-820f-8a1b1ad8c5c9.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/254747296-09a8674e-bfc0-4b3f-820f-8a1b1ad8c5c9.png" style="width: 530px;" /&gt;
&lt;p&gt;I had to use some &lt;strong&gt;dipy&lt;/strong&gt; functions, specifically: &lt;a class="reference external" href="https://github.com/dipy/dipy/blob/321e06722ef42b5add3a7f570f6422845177eafa/dipy/denoise/noise_estimate.py#L272"&gt;estimate_sigma&lt;/a&gt; for the noise variance calculation, &lt;a class="reference external" href="https://github.com/dipy/dipy/blob/321e06722ef42b5add3a7f570f6422845177eafa/dipy/reconst/dti.py#L2112"&gt;design_matrix&lt;/a&gt; to get the b-matrix, and &lt;a class="reference external" href="https://github.com/dipy/dipy/blob/321e06722ef42b5add3a7f570f6422845177eafa/dipy/reconst/dti.py#L639"&gt;tensor_prediction&lt;/a&gt; for the signal estimation. The details of this calculations can be found &lt;a class="reference external" href="https://onlinelibrary.wiley.com/doi/full/10.1002/mrm.21111"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I will continue working on the uncertainty PR which is still in its early stage, I’m going to make a couple of adjustments to the description of the parameters and the actor, and keep working on based on the feedback I receive. There are also minor details to be discussed with my mentors about the first PR, which I hope to finish refining.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;It took me a while to make the PR because I had some problems with the uncertainty function definition. I tried to use the least amount of parameters for the function, since with data, bvals and bvecs it is possible to obtain the rest of the parameters needed to generate the cones, which led me to readjust some calculations from the base implementation I had, to keep everything working correctly.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-27-week-4-tvcastillod.html" rel="alternate"/>
    <summary>#PR 810: DTI uncertainty visualization</summary>
    <category term="google" label="google"/>
    <published>2023-06-27T00:00:00+00:00</published>
  </entry>
</feed>
