<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog - Posts tagged google</title>
  <id>https://fury.gl/blog/tag/google/atom.xml</id>
  <updated>2021-07-26T00:00:00Z</updated>
  <link href="https://fury.gl/" />
  <link href="https://fury.gl/blog/tag/google/atom.xml" rel="self" />
  <generator uri="https://ablog.readthedocs.org" version="0.10.5">ABlog</generator>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Weekly Check-In #8</title>
    <id>https://fury.gl/posts/2021/2021-07-26-gsoc-devmessias-8.html</id>
    <updated>2021-07-26T00:00:00Z</updated>
    <published>2021-07-26T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-26-gsoc-devmessias-8.html" />
    <author>
      <name>Bruno Messias</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;weekly-check-in-8&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/18&quot;&gt;PR fury-gl/helios#18 (merged):&lt;/a&gt; Helios Documentation&lt;/p&gt;
&lt;p&gt;I’ve been working on Helios documentation. Now it’s available
online at &lt;a class=&quot;reference external&quot; href=&quot;https://fury-gl.github.io/helios-website&quot;&gt;https://fury-gl.github.io/helios-website&lt;/a&gt; &lt;img alt=&quot;image1&quot; src=&quot;https://fury-gl.github.io/helios-website/_images/logo.png&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/17&quot;&gt;PR fury-gl/helios#17 (merged):&lt;/a&gt; Helios CI for tests and code&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: WARNING/2 (&lt;span class=&quot;docutils literal&quot;&gt;/Users/koudoro/Software/fury/docs/source/posts/2021/2021-07-26-gsoc-devmessias-8.rst&lt;/span&gt;, line 19)&lt;/p&gt;
&lt;p&gt;Bullet list ends without a blank line; unexpected unindent.&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;coverage&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not get stuck this week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I’ll discuss that with my mentors tomorrow.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Week #8: Code Cleanup, Finishing up open PRs, Continuing work on Tree2D</title>
    <id>https://fury.gl/posts/2021/2021-07-26-week-8-antriksh.html</id>
    <updated>2021-07-26T00:00:00Z</updated>
    <published>2021-07-26T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-26-week-8-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-8-code-cleanup-finishing-up-open-prs-continuing-work-on-tree2d&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had to work on the open PRs specifically work on the bugs that were pointed out in last week’s meeting. Along side the bugs I had to continue the work on Tree2D UI element. Below is the detailed description of what I worked on this week:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/460&quot;&gt;Added new tutorial, code clean-up, bug fixes&lt;/a&gt; : The Tree2D had some issues with its resizing of child nodes. The size for the nodes was calculated automatically based on the vertical size occupied by its children but this could be problematic when working with sliders or UI elements that take up a lot of vertical size. To avoid this the children sizes are calculated relative to each other and the vertical size is calculated such that all children fit in perfectly. Besides this, a multiselection flag has been added that decides whether multiple child nodes can be selected or not.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/446&quot;&gt;Adding tests for corner resize callback&lt;/a&gt; : This PR is almost done as it was decided that WindowsResizeEvent will be ignored for now. Which leaves us with corner resizing, the callback for corner resizing didn’t have any tests so the recording was redone and tests for the corner resize callback was added.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443&quot;&gt;Fixing the failing CI’s for #443&lt;/a&gt; : The solution that ended up working was creating custom objects for testing of is_ui method. With this update there will be no circular dependencies and no failing CI’s.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/442&quot;&gt;Addressing all comments regarding #442&lt;/a&gt; : In the last meeting, a bug was pointed out wherein the text wouldn’t wrap as expected. The reason for this was some minor calculation mistakes. The whole wrap_overflow method was redone and now everything works as expected. Hopefully, no bugs pop up during this week’s meeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/441&quot;&gt;Addressing some minor comments&lt;/a&gt; : This PR is almost done too, there were some minor changes that were required to be addressed before this could be merged. So, these comments were fixed and hopefully this will be merged soon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using different fonts using FreeType python API: A major thing that FURY needs right now is using different fonts on the fly. This is more complicated than it seems, in case of browser environment this is not a problem as browsers can support and render all fonts using various techniques. In case of a desktop environment, we need to generate the bitmap for the fonts and then use them in form of textures. For now I have created a small example that generates these bitmaps from a python API called freetype-py, the fonts are fetched from google fonts and then they are displayed as textures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Starting working on Vertical Layout&lt;/strong&gt;: As majority of PRs are almost done, I started working on Vertical Layout. This will be hihgly inspired from the Grid Layout with obvious differences. The same techniques are being used in the Tree2D so this shouldn’t be difficult to implement.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;The failing CI’s for Grid Layout Pr needed some custom objects to remove circular dependencies. I couldn’t figure out where should these custom objects go but fortunaltely the mentors showed me a quick example of where it should go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Next week I will continue my work on some other UI’s and the remaining Layouts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Seventh week of coding!</title>
    <id>https://fury.gl/posts/2021/2021-07-26-week-8-sajag.html</id>
    <updated>2021-07-26T00:00:00Z</updated>
    <published>2021-07-26T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-26-week-8-sajag.html" />
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;seventh-week-of-coding&quot;&gt;

&lt;p&gt;Welcome to the eighth weekly check-in. I’ll be sharing my progress for the seventh week of coding.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/452&quot;&gt;PR #452&lt;/a&gt;:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Added ribbon actor to the molecular module.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added tests for all functions in the molecular module.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/462&quot;&gt;PR #462&lt;/a&gt;: Addressed the reviews of team members and
mentors, added new features.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image1&quot; src=&quot;https://user-images.githubusercontent.com/65067354/126382288-b755c01d-8010-43ab-87db-2f1a4fb5b015.png&quot; style=&quot;width: 300px; height: 300px;&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/362&quot;&gt;PR #362&lt;/a&gt;: Addressed the feedbacks of team members and
mentors.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Work more on molecular module, meeting with mentors and core team on
Thursday to optimize the module and merge &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/452&quot;&gt;PR #452&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start working upon molecular surface model.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Au&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Weekly Check-In #7</title>
    <id>https://fury.gl/posts/2021/2021-07-19-gsoc-devmessias-7.html</id>
    <updated>2021-07-19T00:00:00Z</updated>
    <published>2021-07-19T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-19-gsoc-devmessias-7.html" />
    <author>
      <name>Bruno Messias</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;weekly-check-in-7&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/16&quot;&gt;PR fury-gl/helios#16
(merged):&lt;/a&gt; Helios IPC
network layout support for MacOs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/17&quot;&gt;PR fury-gl/helios#17
(merged):&lt;/a&gt; Smooth
animations for IPC network layout algorithms&lt;/p&gt;
&lt;p&gt;Before this commit was not possible to record the positions to have a
smooth animations with IPCLayout approach. See the animation below&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image1&quot; src=&quot;https://user-images.githubusercontent.com/6979335/126175596-e6e2b415-bd79-4d99-82e7-53e10548be8c.gif&quot; /&gt;&lt;/p&gt;
&lt;p&gt;After this PR now it’s possible to tell Helios to store the evolution
of the network positions using the record_positions parameter. This
parameter should be passed on the start method. Notice in the image
below how this gives to us a better visualization&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image2&quot; src=&quot;https://user-images.githubusercontent.com/6979335/126175583-c7d85f0a-3d0c-400e-bbdd-4cbcd2a36fed.gif&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/13&quot;&gt;PR fury-gl/helios#13
(merged)&lt;/a&gt; Merged the
forceatlas2 cugraph layout algorithm&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not get stuck this week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Probably, I’ll work more on Helios. Specifically I want to improve the
memory management system. It seems that some shared memory resources are
not been released when using the IPCLayout approach.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Week #7: Finalizing the stalling PRs, finishing up Tree2D UI.</title>
    <id>https://fury.gl/posts/2021/2021-07-19-week-7-antriksh.html</id>
    <updated>2021-07-19T00:00:00Z</updated>
    <published>2021-07-19T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-19-week-7-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-7-finalizing-the-stalling-prs-finishing-up-tree2d-ui&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had limited tasks to do, mostly tasks related to existing PRs. Other than some minor fixes I had to implement some more things in Tree2D which included some minor UI fixes, some changes in tutorial, adding tests. Below is the detailed description of what I worked on this week:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/460&quot;&gt;Tests, tutorial changes, UI fixes for Tree2D&lt;/a&gt; : The Tree2D lacked some things like proper UI resizing, relative indentation, tests for the UI class. These were added with this PR. Currently, the indentation, resizing needs some improvement, which will be fixed after feedback from this week’s meeting. Also, tests for Tree2D, TreeNode2D were added as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/446&quot;&gt;Updating Panel2D tests, re-recording the events&lt;/a&gt; : This PR is almost done with just some tests blocking the PR. The tests were added this week, but tests for some callbacks that are associated with window event are still not added. This is because there is no way to count the WindowResizeEvent without actually using the API of the window provided by the OS. This can become very complicated very soon so, these tests may be added in the future.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443&quot;&gt;Fixing the failing CI’s for #443&lt;/a&gt; : The CI was failing on this PR and needed some fixing which was done this week. This PR still needs some refactoring before the all CI’s pass. This will hopefully be fixed before this week’s meeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/442&quot;&gt;Addressing all comments regarding #442&lt;/a&gt; : Previously, it was pointed out that the some code can be extracted into a function and can be reused in other methods. So, this week the extracted method was updated to reuse even more code and now almost no code is repeated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/441&quot;&gt;Adding has_border flag in Panel2D&lt;/a&gt; : Adding a has_border flag in Panel2D: Previously, to create the borders 4 Rectangle2D’s were used and they were created everytime even when border_width was set to 0. This would take a lot of wasted system resources. To fix this, a flag is added in the the constructor which is by default set to False. If false, the borders are not initialized and the resources are saved.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, this week I didn’t get stuck anywhere.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Sixth week of coding!</title>
    <id>https://fury.gl/posts/2021/2021-07-19-week-7-sajag.html</id>
    <updated>2021-07-19T00:00:00Z</updated>
    <published>2021-07-19T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-19-week-7-sajag.html" />
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;sixth-week-of-coding&quot;&gt;

&lt;p&gt;Welcome to the seventh weekly check-in. I’ll be sharing my progress for the sixth week of coding.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/452&quot;&gt;Molecular module&lt;/a&gt;: made it more pythonic, implemented
ribbon actor, added support to pass numpy arrays (earlier, atomic
data could only be added by using the add_atom).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Created &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/462&quot;&gt;PR #462&lt;/a&gt; to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Update the helical motion animation to use a single line actor,
added textblocks to display velocity of the particle.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image1&quot; src=&quot;https://user-images.githubusercontent.com/65067354/126033284-882ed6fd-fcc3-4a1c-8dfd-3220908859b1.png&quot; style=&quot;width: 400px; height: 300px;&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For brownian motion animation, I removed rotation(azimuth) and box
actor, added textblock to display the number of particles and to
show the simulation steps.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image2&quot; src=&quot;https://user-images.githubusercontent.com/65067354/126033291-da68cb0d-b856-48ad-9aa4-c46621052267.png&quot; style=&quot;width: 400px; height: 400px;&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated surface animation (used gridUI, added multiple animations).&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image3&quot; src=&quot;https://user-images.githubusercontent.com/65067354/126061012-b183a47d-ed5e-4026-938b-4124da291524.png&quot; style=&quot;width: 400px; height: 400px;&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Created a &lt;a class=&quot;reference external&quot; href=&quot;https://discourse.vtk.org/t/vtkmoleculemapper-gaps-in-bonds-on-zooming-in/6183&quot;&gt;topic&lt;/a&gt; on vtk discourse forum to query about gaps in
bonds (tried resolving it by manipulating vtkProperties:
BackfaceCulling, FrontfaceCulling but was unsuccessful).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read about molecular surface (theory behind it).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Update molecular module by adding tests, ribbon actor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try to implement molecular surface representation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interactivity of the molecules.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I didn’t get stuck anywhere this week.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Au&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Week #6: Bug fixes, Working on Tree2D UI</title>
    <id>https://fury.gl/posts/2021/2021-07-12-week-6-antriksh.html</id>
    <updated>2021-07-12T00:00:00Z</updated>
    <published>2021-07-12T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-12-week-6-antriksh.html" />
    <author>
      <name>Antriksh Misri</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;week-6-bug-fixes-working-on-tree2d-ui&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-i-do-this-week&quot;&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;This week I had relatively few tasks and most of them were to fix some bugs/design flaws that were discussed in last week’s meeting. Other than that, I had to implement a few things in the Tree2D UI element that will be discussed in detail below. I also had to update some existing PRs in order to make things work well. Below are the list of things I worked on this week:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/459&quot;&gt;Extracted Button2D class from elements to core&lt;/a&gt; : Button2D was placed in elements during the UI restructuring. The problem with that was that Button2D was needed in other UI elements outside UI elements present in elements in Panel2D. So, it was decided to create a rule that only the UI elements that do not depend on any other UI element are allowed to be placed in core UI elements. Button2D does not depend on any other UI element so it was extracted from elements to core.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/443&quot;&gt;Adapting GridLayout to work with UI elements&lt;/a&gt; : This was a PR that aimed to add support for UI elements to be placed in a grid fashion. the problem was that there still some circular imports even after UI restructuring, primarily because UI was being imported in the layout module that in turn indirectly imported some UI elements making them circularly dependent. To remove the circular imports, it was decided to determine the UI element by checking for a add_to_scene method attribute in the instance. I updated the existing PR to implement the same.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/460&quot;&gt;Continuing my work on Tree2D&lt;/a&gt;: The Tree2D lacked some important things related to design and visual aspect of it. Before, if the children of any node exceeded its height they would just overflow. To prevent this I came up with a few solutions two of which were to either add a scrollbar on the overflowing node or to simply auto resize the parent node. Currently, there is no global API for the scrollbar and it has to be manually setup in a UI element, this will be hopefully implemented in the near future probably using layout management. Till then the auto resizing has been implemented for the nodes. In future, an option for scrollbar will be added.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-i-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I am still stuck with adding tests for panel resizing PR. As it needs windows events to be recorded as well. I tried to propagate the event to the interactor first but that just lead to that particular event being registered multiple times. I will try to find a workaround for it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next&quot;&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;If the Tree2D gets merged by this week then I’ll probably work on other UI elements. Other tasks will be decided in the next meeting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See you guys next week!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Network layout algorithms using IPC</title>
    <id>https://fury.gl/posts/2021/2021-07-12-gsoc-devmessias-6.html</id>
    <updated>2021-07-12T00:00:00Z</updated>
    <published>2021-07-12T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-12-gsoc-devmessias-6.html" />
    <author>
      <name>Bruno Messias</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;network-layout-algorithms-using-ipc&quot;&gt;

&lt;p&gt;Hi all. In the past weeks, I’ve been focusing on developing Helios; the
network visualization library for FURY. I improved the visual aspects of
the network rendering as well as implemented the most relevant network
layout methods.&lt;/p&gt;
&lt;p&gt;In this post I will discuss the most challenging task that I faced to
implement those new network layout methods and how I solved it.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-problem-network-layout-algorithm-implementations-with-a-blocking-behavior&quot;&gt;
&lt;h2&gt;The problem: network layout algorithm implementations with a blocking behavior&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Case 1:&lt;/strong&gt; Suppose that you need to monitor a hashtag and build a
social graph. You want to interact with the graph and at the same time
get insights about the structure of the user interactions. To get those
insights you can perform a node embedding using any kind of network
layout algorithm, such as force-directed or minimum distortion
embeddings.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Case 2:&lt;/strong&gt; Suppose that you are modelling a network dynamic such as an
epidemic spreading or a Kuramoto model. In some of those network
dynamics a node can change the state and the edges related to the node
must be deleted. For example, in an epidemic model a node can represent
a person who died due to a disease. Consequently, the layout of the
network must be recomputed to give better insights.&lt;/p&gt;
&lt;p&gt;In described cases if we want a better (UX) and at the same time a more
practical and insightful application of Helios layouts algorithms
shouldn’t block any kind of computation in the main thread.&lt;/p&gt;
&lt;p&gt;In Helios we already have a lib written in C (with a python wrapper)
which performs the force-directed layout algorithm using separated
threads avoiding the GIL problem and consequently avoiding the blocking.
But and the other open-source network layout libs available on the
internet? Unfortunately, most of those libs have not been implemented
like Helios force-directed methods and consequently, if we want to
update the network layout the python interpreter will block the
computation and user interaction in your network visualization. How to
solve this problem?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;why-is-using-the-python-threading-is-not-a-good-solution&quot;&gt;
&lt;h2&gt;Why is using the python threading is not a good solution?&lt;/h2&gt;
&lt;p&gt;One solution to remove the blocking behavior of the network layout libs
like PyMDE is to use the threading module from python. However, remember
the GIL problem: only one thread can execute python code at once.
Therefore, this solution will be unfeasible for networks with more than
some hundreds of nodes or even less! Ok, then how to solve it well?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;ipc-using-python&quot;&gt;
&lt;h2&gt;IPC using python&lt;/h2&gt;
&lt;p&gt;As I said in my previous posts I’ve created a streaming system for data
visualization for FURY using webrtc. The streaming system is already
working and an important piece in this system was implemented using the
python SharedMemory from multiprocessing. We can get the same ideas from
the streaming system to remove the blocking behavior of the network
layout libs.&lt;/p&gt;
&lt;p&gt;My solution to have PyMDE and CuGraph-ForceAtlas without blocking was to
break the network layout method into two different types of processes: A
and B. The list below describes the most important behaviors and
responsibilities for each process&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Process A:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Where the visualization (NetworkDraw) will happen&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create the shared memory resources: edges, weights, positions, info..&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check if the process B has updated the shared memory resource which
stores the positions using the timestamp stored in the info_buffer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the positions inside of NetworkDraw instance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Process B:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Read the network information stored in the shared memory resources:
edges , weights, positions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute the network layout algorithm&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the positions values inside of the shared memory resource&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the timestamp inside of the shared memory resource&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I used the timestamp information to avoid unnecessary updates in the
FURY/VTK window instance, which can consume a lot of computational
resources.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;how-have-i-implemented-the-code-for-a-and-b&quot;&gt;
&lt;h3&gt;How have I implemented the code for A and B?&lt;/h3&gt;
&lt;p&gt;Because we need to deal with a lot of different data and share them
between different processes I’ve created a set of tools to deal with
that, take a look for example in the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/blob/main/helios/layouts/ipc_tools.py#L111&quot;&gt;ShmManagerMultiArrays
Object&lt;/a&gt;
, which makes the memory management less painful.&lt;/p&gt;
&lt;p&gt;I’m breaking the layout method into two different processes. Thus I’ve
created two abstract objects to deal with any kind of network layout
algorithm which must be performed using inter-process-communication
(IPC). Those objects are:
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/devmessias/helios/blob/a0a24525697ec932a398db6413899495fb5633dd/helios/layouts/base.py#L65&quot;&gt;NetworkLayoutIPCServerCalc&lt;/a&gt;
; used by processes of type B and
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/devmessias/helios/blob/a0a24525697ec932a398db6413899495fb5633dd/helios/layouts/base.py#L135&quot;&gt;NetworkLayoutIPCRender&lt;/a&gt;
; which should be used by processes of type A.&lt;/p&gt;
&lt;p&gt;I’ll not bore you with the details of the implementation. But let’s take
a look into some important points. As I’ve said saving the timestamp
after each step of the network layout algorithm. Take a look into the
method _check_and_sync from NetworkLayoutIPCRender
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/blob/a0a24525697ec932a398db6413899495fb5633dd/helios/layouts/base.py#L266&quot;&gt;here&lt;/a&gt;.
Notice that the update happens only if the stored timestamp has been
changed. Also, look at this line
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/blob/a0a24525697ec932a398db6413899495fb5633dd/helios/layouts/mde.py#L180&quot;&gt;helios/layouts/mde.py#L180&lt;/a&gt;,
the IPC-PyMDE implementation This line writes a value 1 into the second
element of the info_buffer. This value is used to inform the process A
that everything worked well. I used that info for example in the tests
for the network layout method, see the link
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/blob/a0a24525697ec932a398db6413899495fb5633dd/helios/tests/test_mde_layouts.py#L43&quot;&gt;helios/tests/test_mde_layouts.py#L43&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;results&quot;&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;Until now Helios has three network layout methods implemented: Force
Directed , Minimum Distortion Embeddings and Force Atlas 2. Here
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/blob/a0a24525697ec932a398db6413899495fb5633dd/docs/examples/viz_helios_mde.ipynb&quot;&gt;docs/examples/viz_helios_mde.ipynb&lt;/a&gt;
you can get a jupyter notebook that I’ve a created showing how to use
MDE with IPC in Helios.&lt;/p&gt;
&lt;p&gt;In the animation below we can see the result of the Helios-MDE
application into a network with a set of anchored nodes.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image1&quot; src=&quot;https://user-images.githubusercontent.com/6979335/125310065-a3a9f480-e308-11eb-98d9-0ff5406a0e96.gif&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;next-steps&quot;&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;I’ll probably focus on the Helios network visualization system.
Improving the documentation and testing the ForceAtlas2 in a computer
with cuda installed. See the list of opened
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/issues&quot;&gt;issues&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;summary-of-most-important-pull-requests&quot;&gt;
&lt;h2&gt;Summary of most important pull-requests:&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;IPC tools for network layout methods (helios issue #7)
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/6&quot;&gt;fury-gl/helios/pull/6&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New network layout methods for fury (helios issue #7)
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/9&quot;&gt;fury-gl/helios/pull/9&lt;/a&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/14&quot;&gt;fury-gl/helios/pull/14&lt;/a&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/13&quot;&gt;fury-gl/helios/pull/13&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improved the visual aspects and configurations of the network
rendering(helios issue #12)
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/devmessias/helios/tree/fury_network_actors_improvements&quot;&gt;https://github.com/devmessias/helios/tree/fury_network_actors_improvements&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tests, examples and documentation for Helios (helios issues #3 and
#4)
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/5&quot;&gt;fury-gl/helios/pull/5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reduced the flickering effect on the FURY/Helios streaming system
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/10&quot;&gt;fury-gl/helios/pull/10&lt;/a&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/437/commits/a94e22dbc2854ec87b8c934f6cabdf48931dc279&quot;&gt;fury-gl/fury/pull/437/commits/a94e22dbc2854ec87b8c934f6cabdf48931dc279&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Fifth week of coding!</title>
    <id>https://fury.gl/posts/2021/2021-07-12-week-6-sajag.html</id>
    <updated>2021-07-12T00:00:00Z</updated>
    <published>2021-07-12T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-12-week-6-sajag.html" />
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;fifth-week-of-coding&quot;&gt;

&lt;p&gt;Welcome to the sixth weekly check-in. I’ll be sharing my progress for the fifth week of coding.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Generalised the vtkProteinRibbonFilter implementation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated the molecular module based on suggestions of team members
and mentors (&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/452&quot;&gt;PR #452&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated wave function animation (&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/362&quot;&gt;PR #362&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;div class=&quot;figure align-default&quot; id=&quot;id1&quot;&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/65067354/125155195-d4105800-e17b-11eb-9e6d-2b66ba7a8f6e.gif&quot; src=&quot;https://user-images.githubusercontent.com/65067354/125155195-d4105800-e17b-11eb-9e6d-2b66ba7a8f6e.gif&quot; style=&quot;width: 300px; height: 300px;&quot; /&gt;
&lt;p class=&quot;caption&quot;&gt;&lt;span class=&quot;caption-text&quot;&gt;an animation&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Update molecular module based on team members’ suggestions and add
tests for the same.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add protein ribbon implementation to the molecular module.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Begin working on molecular surface model.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No! &lt;strong&gt;I was finally able to generalise the vtkProteinRibbonFilter implementation!!&lt;/strong&gt; I’m
grateful to the mentors for keeping a meeting and for helping me debug
the code. I figured out most of the stuff courtesy the meeting.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Au&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://fury.gl/blog/tag/google/atom.xml">
    <title type="text">Weekly Check-In #5</title>
    <id>https://fury.gl/posts/2021/2021-07-05-gsoc-devmessias-5.html</id>
    <updated>2021-07-05T00:00:00Z</updated>
    <published>2021-07-05T00:00:00Z</published>
    <link href="https://fury.gl/posts/2021/2021-07-05-gsoc-devmessias-5.html" />
    <author>
      <name>Bruno Messias</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;weekly-check-in-5&quot;&gt;

&lt;div class=&quot;section&quot; id=&quot;what-did-you-do-this-week&quot;&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;fury-gl-fury-pr-437-webrtc-streaming-system-for-fury&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/427&quot;&gt;fury-gl/fury PR#437: WebRTC streaming system for FURY&lt;/a&gt;&lt;/h3&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Before the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/437/commits/8c670c284368029cdb5b54c178a792ec615e4d4d&quot;&gt;8c670c2&lt;/a&gt; commit, for some versions of MacOs the
streaming system was falling in a silent bug. I’ve spent a lot of
time researching to found a cause for this. Fortunately, I could found
the cause and the solution. This troublesome MacOs was falling in a
silent bug because the SharedMemory Object was creating a memory
resource with at least 4086 bytes indepedent if I’ve requested less
than that. If we look into the MultiDimensionalBuffer Object
(stream/tools.py) before the 8c670c2 commit we can see that Object
has max_size parameter which needs to be updated if the SharedMemory
was created with a “wrong” size.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;fury-gl-helios-pr-1-network-layout-and-superactors&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/helios/pull/1&quot;&gt;fury-gl/helios PR 1: Network Layout and SuperActors&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the past week I’ve made a lot of improvements in this PR, from
performance improvements to visual effects. Bellow are the list of the
tasks related with this PR:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Code refactoring.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Visual improvements: Using the UniformTools from my pull request&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: WARNING/2 (&lt;span class=&quot;docutils literal&quot;&gt;/Users/koudoro/Software/fury/docs/source/posts/2021/2021-07-05-gsoc-devmessias-5.rst&lt;/span&gt;, line 35)&lt;/p&gt;
&lt;p&gt;Bullet list ends without a blank line; unexpected unindent.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fury-gl/fury/pull/424&quot;&gt;#424&lt;/a&gt; now is possible to control all the visual characteristics at
runtime.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;2D Layout: Meanwhile 3d network representations are very usefully&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: WARNING/2 (&lt;span class=&quot;docutils literal&quot;&gt;/Users/koudoro/Software/fury/docs/source/posts/2021/2021-07-05-gsoc-devmessias-5.rst&lt;/span&gt;, line 38)&lt;/p&gt;
&lt;p&gt;Bullet list ends without a blank line; unexpected unindent.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;for exploring a dataset is hard to convice a group of network
scientists to use a visualization system which dosen’t allow 2d
representations. Because of that I started to coding the 2d behavior
in the network visualization system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;Minimum Distortion Embeddings examples: I’ve created some examples&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: WARNING/2 (&lt;span class=&quot;docutils literal&quot;&gt;/Users/koudoro/Software/fury/docs/source/posts/2021/2021-07-05-gsoc-devmessias-5.rst&lt;/span&gt;, line 43)&lt;/p&gt;
&lt;p&gt;Bullet list ends without a blank line; unexpected unindent.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;which shows how integrate pymde (Python Minimum Distortion
Embeddings) with fury/helios. The image below shows the result of
this integration: a “perfect” graph embedding&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;https://user-images.githubusercontent.com/6979335/124524052-da937e00-ddcf-11eb-83ca-9b58ca692c2e.png&quot; src=&quot;https://user-images.githubusercontent.com/6979335/124524052-da937e00-ddcf-11eb-83ca-9b58ca692c2e.png&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-coming-up-next-week&quot;&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;I’ll probably focus on the &lt;a class=&quot;reference internal&quot; href=&quot;#heliospr-1&quot;&gt;heliosPR#1&lt;/a&gt;. Specifically, writing tests
and improving the minimum distortion embedding layout.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;did-you-get-stuck-anywhere&quot;&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I did not get stuck this week.&lt;/p&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: INFO/1 (&lt;span class=&quot;docutils literal&quot;&gt;/Users/koudoro/Software/fury/docs/source/posts/2021/2021-07-05-gsoc-devmessias-5.rst&lt;/span&gt;, line 60); &lt;em&gt;&lt;a href=&quot;#id1&quot;&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate implicit target name: “fury-gl/fury pr#437: webrtc streaming system for fury”.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: INFO/1 (&lt;span class=&quot;docutils literal&quot;&gt;/Users/koudoro/Software/fury/docs/source/posts/2021/2021-07-05-gsoc-devmessias-5.rst&lt;/span&gt;, line 62); &lt;em&gt;&lt;a href=&quot;#id2&quot;&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate implicit target name: “fury-gl/helios pr 1: network layout and superactors”.&lt;/p&gt;
&lt;/div&gt;
&lt;span class=&quot;target&quot; id=&quot;heliospr-1&quot;&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
