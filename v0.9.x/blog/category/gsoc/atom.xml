<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts in gsoc</title>
  <updated>2023-06-19T19:27:16.378957+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/category/gsoc/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.4.post1">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-12-week-2-joaodellagli.html</id>
    <title>Week 2: The Importance of (good) Documentation</title>
    <updated>2023-06-12T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="week-2-the-importance-of-good-documentation"&gt;

&lt;p&gt;Hello everybody, welcome to the week 2 of this project! I must admit I thought this would be simpler than it is currently being, but I forgot that when it comes to dealing with computer graphics’ applications, things never are. Below, some updates on what I have been up to for this past week.&lt;/p&gt;
&lt;section id="this-last-week-s-effort"&gt;
&lt;h2&gt;This Last Week’s Effort&lt;/h2&gt;
&lt;p&gt;Last week, I was facing some issues with a VTK feature essential so I could move forward with my project: Framebuffer Objects.
As described in my &lt;span class="xref std std-doc"&gt;last blogpost&lt;/span&gt;, for some reason the 2D allocation methods for it weren’t working.
In a meeting with my mentors, while we were discussing and searching through VTK’s FramebufferObject and TextureObject documentation, and the code itself for the problem,
one TextureObject method caught my attention: &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkTextureObject.html#a0988fa2a30b640c93392c2188030537e"&gt;vtkTextureObject.SetContext()&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="where-the-problem-was"&gt;
&lt;h2&gt;Where the Problem Was&lt;/h2&gt;
&lt;p&gt;My last week’s code was:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color_texture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkTextureObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# color texture declaration&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bind&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# binding of the texture for operations&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetDataType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the datatype for unsigned char&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInternalFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGBA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the format as RGBA&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGBA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMinificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the minfilter as linear&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMagnificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the magfilter as linear&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Allocate2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# here is where the code stops&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But it turns out that to allocate the FBO’s textures, of type vtkTextureObject, you need to also set the context where the texture object
will be present, so it lacked a line, that should be added after &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Bind()&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color_texture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkTextureObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bind&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# set the context where the texture object will be present&lt;/span&gt;

&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetDataType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInternalFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMinificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMagnificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The code worked fine. But as my last blogpost showed, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt; method worked just fine without a (visible) problem, why is that?
Well, in fact, it &lt;strong&gt;didn’t work&lt;/strong&gt;. If we check the code for the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate2D()&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt;, one difference can be spotted:&lt;/p&gt;
&lt;img alt="Image comparing Allocate2D and Allocate3D methods" class="align-center" src="https://raw.githubusercontent.com/JoaoDell/gsoc_assets/main/images/allocate-2d-3d.png" /&gt;
&lt;p&gt;While in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate2D()&lt;/span&gt;&lt;/code&gt; there is an &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;assert(this-&amp;gt;Context);&lt;/span&gt;&lt;/code&gt;, in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt; the assertion is translated into:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;vtkErrorMacro&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No context specified. Cannot create texture.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This slight difference is significant: while in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate2D()&lt;/span&gt;&lt;/code&gt; the program immediately fails, in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Allocate3D()&lt;/span&gt;&lt;/code&gt; the function is simply returned
&lt;strong&gt;false&lt;/strong&gt;, with its error pushed to vtkErrorMacro. I could have realised that earlier if I were using vtkErrorMacro, but this difference in their
implementation made it harder for me and my mentors to realise what was happening.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goals"&gt;
&lt;h2&gt;This Week’s Goals&lt;/h2&gt;
&lt;p&gt;After making that work, this week’s goal is to render something to the Framebuffer Object, now that is working. To do that,
first I will need to do some offscreen rendering to it, and afterwards render what it was drawn to its color attachment, the Texture Object I
was struggling to make work, into the screen, drawing its texture to a billboard. Also, I plan to start using vtkErrorMacro, as it seems like
the main error interface when working with VTK, and that may make my life easier.&lt;/p&gt;
&lt;p&gt;See you next week!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-12-week-2-joaodellagli.html" rel="alternate"/>
    <summary>Hello everybody, welcome to the week 2 of this project! I must admit I thought this would be simpler than it is currently being, but I forgot that when it comes to dealing with computer graphics’ applications, things never are. Below, some updates on what I have been up to for this past week.</summary>
    <category term="google" label="google"/>
    <published>2023-06-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-12-week-2-tvcastillod.html</id>
    <title>Week 2: Making adjustments to the Ellipsoid Actor</title>
    <updated>2023-06-12T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-2-making-adjustments-to-the-ellipsoid-actor"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;I made some minor adjustments to the last PR I submitted. Last time it was a draft since I was waiting for the weekly meeting to know how to proceed, but now it is ready. I am waiting for the review so I can make the necessary corrections and adjustments to merge this first PR soon.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;As I receive feedback, I will continue to work on the &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;PR #791&lt;/a&gt; and make adjustments and changes as needed. That said, I will start working on another part of the project, which is the visualization of uncertainty. Without going into details (for now) what I have to do is:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Create a double_cone or dti_uncertainty actor. I’m going to work on the double cone made also with raymarching and SDF, since the implementation is pretty much the same as the ellipsoid I already have.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make a function that returns the level of the uncertainty given by the angle of the uncertainty cone we want to visualize. For this I need to double-check the maths behind the uncertainty calculation to make sure I’m getting the right results.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not exactly, but one of the things that were mentioned in the last meeting is that we should try to simplify the shader code as much as we can, that is, to break down the entire implementation into simple and easy-to-understand lines of code, which also allows the definition of functions that can be reused later on. I need to keep working on this, so I can make my code even more readable and fit the new shader structure.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-12-week-2-tvcastillod.html" rel="alternate"/>
    <summary>I made some minor adjustments to the last PR I submitted. Last time it was a draft since I was waiting for the weekly meeting to know how to proceed, but now it is ready. I am waiting for the review so I can make the necessary corrections and adjustments to merge this first PR soon.</summary>
    <category term="google" label="google"/>
    <published>2023-06-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-11-week-2-praneeth.html</id>
    <title>Week 2: Tackling Text Justification and Icon Flaw Issues</title>
    <updated>2023-06-11T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-2-tackling-text-justification-and-icon-flaw-issues"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week, I continued tweaking the text justification PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/790"&gt;#790&lt;/a&gt; and encountered a new issue when combining both &lt;strong&gt;justification&lt;/strong&gt; and &lt;strong&gt;vertical_justification&lt;/strong&gt;. The problem arose because the &lt;strong&gt;vertical_justification&lt;/strong&gt; did not take into account the applied &lt;strong&gt;justification&lt;/strong&gt;, resulting in unexpected behavior. I focused on resolving this issue by ensuring that both justifications work together correctly. Additionally, during the weekly meeting, we discussed the problem and decided to introduce new properties such as boundaries and padding to enhance the functionality of the text justification feature.&lt;/p&gt;
&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: INFO/1 (&lt;span class="docutils literal"&gt;/home/runner/work/fury/fury/docs/source/posts/2023/2023-06-11-week-2-praneeth.rst&lt;/span&gt;, line 2); &lt;em&gt;&lt;a href="#id6"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: “#768”.&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Furthermore, I started working on PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/576"&gt;#576&lt;/a&gt;, which aimed to address the flaw in the icon of the &lt;strong&gt;combobox&lt;/strong&gt;. While investigating this issue, I discovered related problems and PRs, including &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/562"&gt;#562&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/731"&gt;#731&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/768"&gt;#768&lt;/a&gt;. The main challenge was related to the propagation of the &lt;strong&gt;set_visibility&lt;/strong&gt; feature of the UI, causing the &lt;strong&gt;combobox&lt;/strong&gt; to automatically open its options. To overcome this issue, I requested the author of PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/768"&gt;#768&lt;/a&gt; to rebase their pull request as it can be a solution for the issue.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;A significant portion of my time was dedicated to resolving the text justification issue when both justification types were combined. It required careful analysis and adjustments to ensure the desired behavior.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;For the upcoming week, I have the following plans:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Work on modifying the text justification implementation to address any remaining issues and ensure compatibility with other features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Begin the implementation of the scrollbar class from scratch to provide a robust and customizable scrollbar element.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on completing the resolution of the icon flaw issue by collaborating with the relevant stakeholders and ensuring the necessary modifications are made.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-11-week-2-praneeth.html" rel="alternate"/>
    <summary>This week, I continued tweaking the text justification PR #790 and encountered a new issue when combining both justification and vertical_justification. The problem arose because the vertical_justification did not take into account the applied justification, resulting in unexpected behavior. I focused on resolving this issue by ensuring that both justifications work together correctly. Additionally, during the weekly meeting, we discussed the problem and decided to introduce new properties such as boundaries and padding to enhance the functionality of the text justification feature.</summary>
    <category term="google" label="google"/>
    <published>2023-06-11T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-05-week-1-tvcastillod.html</id>
    <title>Week 1: Ellipsoid actor implemented with SDF</title>
    <updated>2023-06-05T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-1-ellipsoid-actor-implemented-with-sdf"&gt;

&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/791"&gt;PR #791: Ellipsoid actor implemented with SDF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I made a first PR with the implementation of the ellipsoid actor defined with a SDF using raymarching. The current &lt;a class="reference external" href="https://github.com/fury-gl/fury/blob/c2e5151e5f0d676501c0aee9f476d9d292cadc61/fury/actor.py#L3537"&gt;sdf&lt;/a&gt; actor allows the creation of ellipsoids, but it lacks control over their shape, and the displayed direction does not match the intended orientation. For this reason, a new actor just focused on ellipsoids was made, this one is defined by its axes (3x3 orthogonal matrix) and their corresponding lengths (3x1 vector), along with other attributes like color, opacity, and scale. The goal is to make an implementation that allows displaying a large amount of data, with good visual quality, and without compromising performance. I’m still working on this but here is a first glance of how it looks like:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/31288525/244503195-a626718f-4a13-4275-a2b7-6773823e553c.png" class="align-center" src="https://user-images.githubusercontent.com/31288525/244503195-a626718f-4a13-4275-a2b7-6773823e553c.png" style="width: 376px;" /&gt;
&lt;p&gt;This will be used later to create the tensor ellipsoids used on &lt;a class="reference external" href="https://github.com/fury-gl/fury/blob/c2e5151e5f0d676501c0aee9f476d9d292cadc61/fury/actor.py#L1172"&gt;tensor_slicer&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;I need to talk to my mentors first but the idea is to start making improvements on the SDF definition and raymarching algorithm, I have already started looking for information about how I can do it, and if I get good ideas, I will compare if there is an improvement in performance respect to the implementation I have right now. I also need to keep working on tests, the most common way of doing it is to check the number of objects and colors displayed, but I would like to test other things related to performance.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Not yet, I need to get feedback first to see if there is anything I need to review or correct.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-05-week-1-tvcastillod.html" rel="alternate"/>
    <summary>PR #791: Ellipsoid actor implemented with SDF</summary>
    <category term="google" label="google"/>
    <published>2023-06-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-05-week-1-joaodellagli.html</id>
    <title>The FBO Saga - Week 1</title>
    <updated>2023-06-05T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="the-fbo-saga-week-1"&gt;

&lt;section id="this-past-week"&gt;
&lt;h2&gt;This Past Week&lt;/h2&gt;
&lt;p&gt;As mentioned in the last week’s blogpost, the goal for that week was to investigate VTK’s Framebuffer Object framework.
An update on that is that indeed, VTK has one more low-level working &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkOpenGLFramebufferObject.html"&gt;FBO class&lt;/a&gt; that can be used inside FURY, however,
they come with some issues that I will explain further below.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="my-current-problems"&gt;
&lt;h2&gt;My Current Problems&lt;/h2&gt;
&lt;p&gt;The problems I am having with these FBO implementations are first something related to how a FBO works, and second related to how VTK works.
In OpenGL, a custom user’s FBO needs some things to be complete (usable):&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;At least one buffer should be attached. This buffer can be the color, depth or stencil buffer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If no color buffer will be attached then OpenGL needs to be warned no draw or read operations will be done to that buffer. Otherwise, there should be at least one color attachment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All attachments should have their memory allocated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each buffer should have the same number of samples.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My first problem relies on the third requirement. VTK’s implementation of FBO requires a &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkTextureObject.html"&gt;vtkTextureObject&lt;/a&gt;
as a texture attachment. I figured out how to work with this class, however, I cannot allocate memory for it, as its methods for it, &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkTextureObject.html#abc91bbf9a3414bded7a132d366ca4951"&gt;Allocate2D&lt;/a&gt;, &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkTextureObject.html#a7e9dd67f377b7f91abd9df71e75a5f67"&gt;Create2D&lt;/a&gt; and &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkTextureObject.html#a0e56fe426cb0e6749cc6f2f8dbf53ed7"&gt;Create2DFromRaw&lt;/a&gt;
does not seem to work. Every time I try to use them, my program stops with no error message nor nothing.
For anyone interested in what is happening exactly, below is how I my tests are implemented:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkTextureObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# color texture declaration&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bind&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# binding of the texture for operations&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetDataType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the datatype for unsigned char&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInternalFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGBA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the format as RGBA&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_RGBA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMinificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the minfilter as linear&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMagnificationFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting the magfilter as linear&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;color_texture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Allocate2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VTK_UNSIGNED_CHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# here is where the code stops&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In contrast, for some reason, the methods for 3D textures, &lt;a class="reference external" href="https://vtk.org/doc/nightly/html/classvtkTextureObject.html#aaeefa46bd3a24bf62126512a276819d0"&gt;Allocate3D&lt;/a&gt; works just fine.
I could use it as a workaround, but I do not wish to, as this just does not make sense.&lt;/p&gt;
&lt;p&gt;My second problem relies on VTK. As VTK is a library that encapsulates some OpenGL functions in more palatable forms, it comes with some costs.
Working with FBOs is a more low-level work, that requires strict control of some OpenGL states and specific functions that would be simpler if it was the main API here.
However, some of this states and functions are all spread and implicit through VTK’s complex classes and methods, which doubles the time expended to make some otherwise simple instructions,
as I first need to dig in lines and lines of VTK’s documentation, and worse, the code itself.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-about-next-week"&gt;
&lt;h2&gt;What About Next Week?&lt;/h2&gt;
&lt;p&gt;For this next week, I plan to investigate further on why the first problem is happening. If that is accomplished, then things will be more simple, as it will be a lot easier for my project to move forward as I will finally be able
to implement the more pythonic functions needed to finally render some kernel distributions onto my screen.&lt;/p&gt;
&lt;p&gt;Wish me luck!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-05-week-1-joaodellagli.html" rel="alternate"/>
    <summary>As mentioned in the last week’s blogpost, the goal for that week was to investigate VTK’s Framebuffer Object framework.
An update on that is that indeed, VTK has one more low-level working FBO class that can be used inside FURY, however,
they come with some issues that I will explain further below.</summary>
    <category term="google" label="google"/>
    <published>2023-06-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-03-week-1-praneeth.html</id>
    <title>Week 1: Working with SpinBox and TextBox Enhancements</title>
    <updated>2023-06-03T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-1-working-with-spinbox-and-textbox-enhancements"&gt;

&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;This week, my focus was on reviewing pull requests (PRs) and issues related to the user interface (UI) of the project. I meticulously went through each PR and issue, identifying those specifically associated with UI improvements. To streamline the process, I categorized them accordingly under the UI category. One of the key tasks was PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/499"&gt;#499&lt;/a&gt;, which involved the implementation of SpinBoxUI. After rebasing the PR, I identified an alignment issue with the textbox component.&lt;/p&gt;
&lt;p&gt;To resolve this issue, I started by investigating the root cause. I discovered that the alignment was initially based on the position of the parent UI, which caused the text to extend beyond the boundaries of the textbox. To rectify this, I devised a solution where I calculated the background size of the textbox and adjusted the text’s position accordingly. By aligning the text with the calculated size, I ensured a proper and visually appealing alignment within the textbox.&lt;/p&gt;
&lt;p&gt;To provide a clear understanding of the improvement, I have prepared a comparison of the textbox alignment before and after the modifications.&lt;/p&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/64432063/243150149-30330be2-b529-47e9-850a-6e3a8bc03551.png" src="https://user-images.githubusercontent.com/64432063/243150149-30330be2-b529-47e9-850a-6e3a8bc03551.png" style="width: 376px; height: 415px;" /&gt;
&lt;p&gt;After:&lt;/p&gt;
&lt;img alt="https://user-images.githubusercontent.com/64432063/243150735-86f85d6c-f9df-4092-abdf-248b6ec77c5e.png" src="https://user-images.githubusercontent.com/64432063/243150735-86f85d6c-f9df-4092-abdf-248b6ec77c5e.png" style="width: 376px; height: 415px;" /&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Fortunately, I didn’t encounter any significant challenges this week.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Looking ahead, here’s what I have planned for the upcoming week:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Completing PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/790"&gt;#790&lt;/a&gt; - Fixing Textbox Alignment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wrapping up PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/499"&gt;#499&lt;/a&gt; - SpinBoxUI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initiating PR &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/576"&gt;#576&lt;/a&gt; - Icon Flaw in ComboBox&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-03-week-1-praneeth.html" rel="alternate"/>
    <summary>This week, my focus was on reviewing pull requests (PRs) and issues related to the user interface (UI) of the project. I meticulously went through each PR and issue, identifying those specifically associated with UI improvements. To streamline the process, I categorized them accordingly under the UI category. One of the key tasks was PR #499, which involved the implementation of SpinBoxUI. After rebasing the PR, I identified an alignment issue with the textbox component.</summary>
    <category term="google" label="google"/>
    <published>2023-06-03T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-02-week-0-praneeth.html</id>
    <title>Week 0: Community Bounding Period</title>
    <updated>2023-06-02T00:00:00+00:00</updated>
    <author>
      <name>Praneeth Shetty</name>
    </author>
    <content type="html">&lt;section id="week-0-community-bounding-period"&gt;

&lt;section id="gsoc-2023-community-bonding-period"&gt;
&lt;h2&gt;GSoC 2023: Community Bonding Period&lt;/h2&gt;
&lt;p&gt;Hello All!&lt;/p&gt;
&lt;p&gt;I’m thrilled to announce that I’ll be participating in Google Summer of Code (GSoC) for yet another year. To catch a glimpse of my previous journey, check out my experiences &lt;a class="reference external" href="https://blogs.python-gsoc.org/en/ganimtron_10s-blog/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During the community bonding period, we had our first GSoC meet, where we got acquainted with the program’s rules and regulations. It was an excellent opportunity to virtually meet my fellow contributors and discuss our upcoming projects. Excitement filled the air as we exchanged ideas and set goals for the summer ahead.&lt;/p&gt;
&lt;p&gt;Stay tuned for updates on my GSoC project as I share my progress, challenges, and breakthroughs along the way. I’m grateful for the opportunity to be part of this remarkable community.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-02-week-0-praneeth.html" rel="alternate"/>
    <summary>Hello All!</summary>
    <category term="google" label="google"/>
    <published>2023-06-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-06-02-week-0-tvcastillod.html</id>
    <title>Week 0: Community Bounding Period</title>
    <updated>2023-06-02T00:00:00+00:00</updated>
    <author>
      <name>Tania Castillo</name>
    </author>
    <content type="html">&lt;section id="week-0-community-bounding-period"&gt;

&lt;section id="gsoc-2023-community-bonding-period"&gt;
&lt;h2&gt;GSoC 2023: Community Bonding Period&lt;/h2&gt;
&lt;p&gt;Hello everyone, my name is Tania Castillo, I am close to finishing my degree in Computer Science and I think this is a great opportunity to put my learning and skills into practice. I will be working with FURY on improving the visualization of DTI tensors and HARDI ODFs glyphs by using well-known techniques in computer graphics.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-did-i-do-this-week"&gt;
&lt;h2&gt;What did I do this week?&lt;/h2&gt;
&lt;p&gt;During the community bonding period, I had the opportunity to get to know better GSoC mentors and former contributors. I also had the first meeting with FURY mentors where I got to learn more about the dynamic of the program, important things to keep in mind while coding, and suggestions when making the PRs. We also receive some details on how to work with shaders which is something I have to take into account since I will use them to develop part of the project. In addition, I’ve been working on the first part of the project which consists of the creation of tensor ellipsoids using the raymarching technique and SDFs.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next"&gt;
&lt;h2&gt;What is coming up next?&lt;/h2&gt;
&lt;p&gt;Since the advances I managed to make are in their most basic stage, I will be working this week on making changes and adjusting details for the implementation to follow FURY guidelines. In this way, I plan to submit my first PR for the project to start getting feedback and making improvements. I will also start working on the first tests for the ellipsoid actor I’m working on.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-i-get-stuck-anywhere"&gt;
&lt;h2&gt;Did I get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;For now, everything is going well, although I know I will probably run into some problems when reviewing and adjusting my code. We will see later this week.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-06-02-week-0-tvcastillod.html" rel="alternate"/>
    <summary>Hello everyone, my name is Tania Castillo, I am close to finishing my degree in Computer Science and I think this is a great opportunity to put my learning and skills into practice. I will be working with FURY on improving the visualization of DTI tensors and HARDI ODFs glyphs by using well-known techniques in computer graphics.</summary>
    <category term="google" label="google"/>
    <published>2023-06-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/29-05-2023-week-0-joaodellagli.html</id>
    <title>The Beginning of Everything - Week 0</title>
    <updated>2023-05-29T00:00:00+00:00</updated>
    <author>
      <name>João Victor Dell Agli Floriano</name>
    </author>
    <content type="html">&lt;section id="the-beginning-of-everything-week-0"&gt;

&lt;section id="so-it-begins"&gt;
&lt;h2&gt;So it begins…&lt;/h2&gt;
&lt;p&gt;Hello everyone, welcome to the beginning of my journey through GSoC 2023! I would like to thank everyone involved for the opportunity provided, it is an honour to be working side by side with professionals and so many experienced people from around the world.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-community-bonding-period"&gt;
&lt;h2&gt;The Community Bonding Period&lt;/h2&gt;
&lt;p&gt;During my community bonding period, I had the opportunity to meet my mentors and some people from the FURY team. It was a great time to learn about community guidelines and everything I will need to work with them during this summer.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-project-s-goal"&gt;
&lt;h2&gt;The Project’s Goal&lt;/h2&gt;
&lt;p&gt;Briefly explaining this project, I plan to implement a real-time Kernel Density Estimation shader inside FURY library, based on &lt;a class="reference external" href="https://github.com/filipinascimento/PACSExplorer/blob/782e52334a635528ec3ab4c7a4409cc88958d3ba/lib/density-gl.js"&gt;Filipi Nascimento’s WebGL implementation&lt;/a&gt;. KDE, or Kernel Density Estimation, is a visualization technique that provides a good macro visualization of large and complex data sets, like point clouds, well summarizing their spatial distribution in smooth areas. I really think FURY will benefit from this as a scientific library, knowing it is a computer graphics library that originated in 2018 based on the Visualization Toolkit API (VTK), and has been improving since then.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="this-week-s-goal"&gt;
&lt;h2&gt;This Week’s Goal&lt;/h2&gt;
&lt;p&gt;For all of this to work, the project needs one component working: the &lt;strong&gt;KDE framebuffer&lt;/strong&gt;. As this &lt;a class="reference external" href="https://www.khronos.org/opengl/wiki/Framebuffer"&gt;Khronos wiki page well explains&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;“A Framebuffer is a collection of buffers that can be used as the destination for rendering. OpenGL has two kinds of framebuffers: the &lt;a class="reference external" href="https://www.khronos.org/opengl/wiki/Default_Framebuffer"&gt;Default Framebuffer&lt;/a&gt;,
which is provided by the &lt;a class="reference external" href="https://www.khronos.org/opengl/wiki/OpenGL_Context"&gt;OpenGL Context&lt;/a&gt;; and user-created framebuffers called &lt;a class="reference external" href="https://www.khronos.org/opengl/wiki/Framebuffer_Object"&gt;Framebuffer Objects&lt;/a&gt; (FBOs).
The buffers for default framebuffers are part of the context and usually represent a window or display device. The buffers for FBOs reference images from either &lt;a class="reference external" href="https://www.khronos.org/opengl/wiki/Texture"&gt;Textures&lt;/a&gt; or &lt;a class="reference external" href="https://www.khronos.org/opengl/wiki/Renderbuffer_Object"&gt;Renderbuffers&lt;/a&gt;; they are never directly visible.”&lt;/p&gt;
&lt;p&gt;Which means that a framebuffer is an object that stores data related to a frame. So the goal for this week is to investigate whether VTK, the API which FURY is written on, has a framebuffer object interface, and if it has, to understand how it works and how to use it for the project.&lt;/p&gt;
&lt;p&gt;Let’s get to work!&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/29-05-2023-week-0-joaodellagli.html" rel="alternate"/>
    <summary>Hello everyone, welcome to the beginning of my journey through GSoC 2023! I would like to thank everyone involved for the opportunity provided, it is an honour to be working side by side with professionals and so many experienced people from around the world.</summary>
    <category term="google" label="google"/>
    <published>2023-05-29T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2023/2023-02-01-gsoc.html</id>
    <title>Contribute to FURY via Google Summer of Code 2023</title>
    <updated>2023-02-01T00:00:00+00:00</updated>
    <author>
      <name>Serge Koudoro</name>
    </author>
    <content type="html">&lt;section id="contribute-to-fury-via-google-summer-of-code-2023"&gt;

&lt;p&gt;FURY is participating in the &lt;a class="reference external" href="https://summerofcode.withgoogle.com"&gt;Google Summer of Code 2023&lt;/a&gt; under the umbrella of the &lt;a class="reference external" href="https://python-gsoc.org/"&gt;Python Software Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;FURY is a free and open source software library for scientific visualization and 3D animations. FURY contains many tools for visualizing a series of scientific data including graph and imaging data.&lt;/p&gt;
&lt;p&gt;A list of project ideas and application info is on our &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2023-(GSOC2023)"&gt;GitHub Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in talking to us about projects, applications join us to our &lt;a class="reference external" href="https://discord.gg/aXRZmmM"&gt;discord community&lt;/a&gt; or drop us a line on our &lt;a class="reference external" href="https://mail.python.org/mailman3/lists/fury.python.org"&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be part of our community and Enjoy your summer of code!&lt;/p&gt;
&lt;p&gt;Serge K.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2023/2023-02-01-gsoc.html" rel="alternate"/>
    <summary>FURY is participating in the Google Summer of Code 2023 under the umbrella of the Python Software Foundation.</summary>
    <category term="google" label="google"/>
    <published>2023-02-01T00:00:00+00:00</published>
  </entry>
</feed>
