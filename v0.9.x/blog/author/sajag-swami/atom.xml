<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://fury.gl/</id>
  <title>Blog - Posts by Sajag Swami</title>
  <updated>2023-06-16T14:30:01.781646+00:00</updated>
  <link href="https://fury.gl/"/>
  <link href="https://fury.gl/blog/author/sajag-swami/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.io/" version="0.11.4.post1">ABlog</generator>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-23-final-work-sajag.html</id>
    <title>Google Summer of Code Final Work Product</title>
    <updated>2021-08-23T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;a class="reference external image-reference" href="https://summerofcode.withgoogle.com/projects/#6653942668197888"&gt;&lt;img alt="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" class="align-center" height="50" src="https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal.svg" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://blogs.python-gsoc.org/en/nibba2018s-blog/"&gt;&lt;img alt="https://www.python.org/static/community_logos/python-logo.png" src="https://www.python.org/static/community_logos/python-logo.png" style="width: 40%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://fury.gl/latest/community.html"&gt;&lt;img alt="https://python-gsoc.org/logos/FURY.png" src="https://python-gsoc.org/logos/FURY.png" style="width: 25%;" /&gt;&lt;/a&gt;
&lt;section id="google-summer-of-code-final-work-product"&gt;

&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Sajag Swami&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organisation:&lt;/strong&gt; Python Software Foundation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sub-Organisation:&lt;/strong&gt; FURY&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/fury-gl/fury/wiki/Google-Summer-of-Code-2021"&gt;FURY: Ribbon and Molecular Surface Representations for
Proteins&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="proposed-objectives"&gt;
&lt;h2&gt;Proposed Objectives&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Ribbon Representation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Molecular Surface Representation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stretch Goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Stick Representation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ball and stick Representation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wire Representation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pipes and Planks Representation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sphere Representation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-completed"&gt;
&lt;h2&gt;Objectives Completed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ribbon Representation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ribbon diagrams, also known as Richardson diagrams,
are 3D schematic representations of protein structure. Ribbon diagrams are
generated by interpolating a smooth curve through the polypeptide backbone.
α-helices are shown as coiled ribbons. β-strands as sheets, and non-repetitive
coils or loops as lines or thin strips. It was implemented by using
&lt;cite&gt;vtkProteinRibbonFilter&lt;/cite&gt;. Generating a &lt;cite&gt;vtkPolyData&lt;/cite&gt; of appropriate format
required by &lt;cite&gt;vtkProteinRibbonFilter&lt;/cite&gt; was initially unclear due to lack of
examples. I was able to understand what kind of output the filter required
after a meeting with mentors. Tests were added and a demo was created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ribbon representation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ribbon Representation demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ball and Stick Representation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The ball-and-stick model is a molecular model of a chemical substance which
displays both the three-dimensional position of the atoms and the bonds between
them. The atoms are typically represented by spheres, connected by tubes which
represent the bonds. It was created by using  &lt;cite&gt;vtkOpenGLMoleculeMapper&lt;/cite&gt;.
Added &lt;cite&gt;vtkSimpleBondPerceiver&lt;/cite&gt; for detection of bonds. Tests were added and a
demo was created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ball and Stick Representation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ball and Stick Representation demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Stick Representation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Stick model is a special case of Ball and Stick model where atomic radius of all
molecules is set equal to the radius of tubes used to create bonds. It was created
by using  &lt;cite&gt;vtkOpenGLMoleculeMapper&lt;/cite&gt;. Tests were added and a demo was created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Stick Representation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Stick Representation demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sphere Representation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In chemistry, a space-filling model, also known as a calotte or sphere model, is a
type of three-dimensional (3D) molecular model where the atoms are represented by
spheres whose radii are proportional to the radii of the atoms. It was created by
using &lt;cite&gt;vtkOpenGLMoleculeMapper&lt;/cite&gt;. Tests were added and a demo was created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sphere Representation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sphere Representation demo:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;fury-gl/fury#452&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="objectives-in-progress"&gt;
&lt;h2&gt;Objectives in Progress&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Molecular Surfaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are three types of molecular surfaces:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Van der Waals&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Solvent Accessible&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Solvent Excluded&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Currently the first two molecular surfaces i.e. Van der Waals and Solvent
Accessible are implemented. The code is based on the paper “Generating
Triangulated Macromolecular Surfaces by Euclidean Distance Transform” by
Dong Xu and Yang Zhang.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Molecular Surfaces Implementation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/492"&gt;fury-gl/fury#492&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="other-objectives"&gt;
&lt;h2&gt;Other Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;2D Animated Surfaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This was a simple demonstration that animated Two-Dimensional (2D) functions using FURY.
Created a grid of x-y coordinates and mapped the heights (z-values) to the corresponding x, y
coordinates to generate the surfaces. Used colormaps to color the surfaces.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Animated Surfaces:&lt;/strong&gt;  &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/362"&gt;fury-gl/fury#362&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Updated miscellaneous animations&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Updated the demo of helical motion to stop using multiple line actors as discussed in the meeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated the demo of brownian motion to make it more scientifically useful (removed unnecessary rotation of camera
during animation and box actor).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Display simulation data for brownian motion and helical motion animations (number of simulated steps for brownian
motion and velocity of the particle for helical motion).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Created utility functions to make the code understandable and used these in emwave, helical and brownian
animations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Updated helical, brownian, emwave animations:&lt;/strong&gt;  &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/462"&gt;fury-gl/fury#462&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GSoC weekly Blogs&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Weekly blogs were added for FURY’s Website.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pull Requests:&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;First Evaluation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/475"&gt;fury-gl/fury#475&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Second Evaluation:&lt;/strong&gt; &lt;a class="github reference external" href="https://github.com/fury-gl/fury/pull/493"&gt;fury-gl/fury#493&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="timeline"&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr class="row-odd"&gt;&lt;th class="head"&gt;&lt;p&gt;Date&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Description&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Blog Link&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 1(08-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Welcome to my GSoC Blog!&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-1-11/"&gt;Weekly Check-in #1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 2(14-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;First Week of coding: sphere model.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-2-11/"&gt;Weekly Check-in #2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 3(21-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Bonding algorithms, Ball and Stick model progress.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-3-13/"&gt;Weekly Check-in #3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 4(28-06-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;VTK molecular visualization classes.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-4-14/"&gt;Weekly Check-in #4&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 5(05-07-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Genesis of &lt;cite&gt;molecular&lt;/cite&gt; module.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-5-13/"&gt;Weekly Check-in #5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 6(12-07-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Ribbon representation, updated &lt;cite&gt;molecular&lt;/cite&gt; module (more pythonic)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-6-18/"&gt;Weekly Check-in #6&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 7(19-07-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;More features to &lt;cite&gt;molecular&lt;/cite&gt;, updated misc. animations.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-7-16/"&gt;Weekly Check-in #7&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 8(26-07-2020)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Ribbon to &lt;cite&gt;molecular&lt;/cite&gt;, tests for &lt;cite&gt;molecular&lt;/cite&gt;, animated surfaces.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-8-11/"&gt;Weekly Check-in #8&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 9(02-08-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Optimized &lt;cite&gt;molecular&lt;/cite&gt; with mentors, GSoC blogs to FURY docs.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-9-11/"&gt;Weekly Check-in #9&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-odd"&gt;&lt;td&gt;&lt;p&gt;Week 10(09-08-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Bounding box, &lt;cite&gt;molecular&lt;/cite&gt; tutorial, molecular surfaces progress.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-10-11/"&gt;Weekly Check-in #10&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="row-even"&gt;&lt;td&gt;&lt;p&gt;Week 11(16-08-2021)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Molecular Surfaces (VDW, SAS) implementation.&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/weekly-check-in-11-9/"&gt;Weekly Check-in #11&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Detailed weekly tasks and work done can be found
&lt;a class="reference external" href="https://blogs.python-gsoc.org/en/suntzunamis-blog/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-23-final-work-sajag.html" rel="alternate"/>
    <summary>Name: Sajag Swami</summary>
    <category term="google" label="google"/>
    <published>2021-08-23T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-16-week-11-sajag.html</id>
    <title>Tenth coding week!</title>
    <updated>2021-08-16T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="tenth-coding-week"&gt;

&lt;p&gt;Welcome to the eleventh weekly check-in. I’ll be sharing my progress for the tenth week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Implemented &lt;a class="reference external" href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0008140"&gt;this paper&lt;/a&gt; to generate Van der Waals surface and solvent-accessible surface (PR created: &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/492"&gt;PR #492&lt;/a&gt;). It was a good learning experience because the first time I read the paper, I didn’t understand the underlying math, it all seemed alien to me. I had to read it many times, read about the algorithms used and understand the terminologies. I had a meeting with the mentors to understand a bit of the theory which proved to be quite fruitful as I understood how to go about making the space-filling model. &lt;a class="reference external" href="ttps://pyscience.wordpress.com/2014/09/11/surface-extraction-creating-a-mesh-from-pixel-data-using-python-and-vtk/"&gt;This&lt;/a&gt; blog was helpful in understanding how to use vtkMarchingCubes with numpy arrays. One of the earliest SAS rendering looked like this (this implementation was not strictly according to the paper):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id1"&gt;
&lt;img alt="https://user-images.githubusercontent.com/65067354/129559593-baf201bf-720c-45f7-9269-3b31954efd5e.png" src="https://user-images.githubusercontent.com/65067354/129559593-baf201bf-720c-45f7-9269-3b31954efd5e.png" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;Notice that it’s rather rough&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Current implementation (this implementation was according to the paper):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id2"&gt;
&lt;img alt="https://user-images.githubusercontent.com/65067354/129560374-14180b22-14b2-449b-88a6-b3140226418d.png" src="https://user-images.githubusercontent.com/65067354/129560374-14180b22-14b2-449b-88a6-b3140226418d.png" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;grid dimensions = 256 × 256 × 256, used smoothing algorithms recommended by vtk&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also understood how to go about rendering volumes. I think that the ability to render volumes with FURY will be a cool capability and I’ll discuss my implementation and request the mentors for feedback and ideas in the weekly meeting. Example of volume rendering:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id3"&gt;
&lt;img alt="https://user-images.githubusercontent.com/65067354/129562606-50a9f0cf-e16d-4501-b0fa-a0038fda406b.png" src="https://user-images.githubusercontent.com/65067354/129562606-50a9f0cf-e16d-4501-b0fa-a0038fda406b.png" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;grid dimensions = 256 × 256 × 256&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;I’ll try to get &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;PR #452&lt;/a&gt; merged. Documentation work to be done as GSoC coding period has come to an end.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-16-week-11-sajag.html" rel="alternate"/>
    <summary>Welcome to the eleventh weekly check-in. I’ll be sharing my progress for the tenth week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-08-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-09-week-10-sajag.html</id>
    <title>Ninth coding week!</title>
    <updated>2021-08-09T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="ninth-coding-week"&gt;

&lt;p&gt;Welcome to the tenth weekly check-in. I’ll be sharing my progress for the ninth week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;PR #452&lt;/a&gt; :&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Made ribbon representation faster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added an actor to display bounding box around the molecule.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id1"&gt;
&lt;img alt="https://user-images.githubusercontent.com/65067354/128624529-03c026be-7f80-4792-b57e-eceeb1767ec2.png" src="https://user-images.githubusercontent.com/65067354/128624529-03c026be-7f80-4792-b57e-eceeb1767ec2.png" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;Bounding Box&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Made a tutorial which showcases the abilities of molecular module (will create a PR after molecular module is merged).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I’m trying to implement a native implementation of molecular surfaces in FURY. Currently searching for recent research papers to find good algorithms to generate the molecular surfaces (the ones I’d collected in the research period were archaic and rather time consuming). The papers that I’ve read so far seem a tad bit intimidating as I’ve never done math related to this domain yet. Implementing them will be a good learning experience I reckon.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Try to create a native implementation of molecular surface.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Small fixes to &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/362"&gt;PR #362&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/462"&gt;PR #462&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-09-week-10-sajag.html" rel="alternate"/>
    <summary>Welcome to the tenth weekly check-in. I’ll be sharing my progress for the ninth week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-08-09T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-08-02-week-9-sajag.html</id>
    <title>Eighth coding week!</title>
    <updated>2021-08-02T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="eighth-coding-week"&gt;

&lt;p&gt;Welcome to the ninth weekly check-in. I’ll be sharing my progress for the eighth week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;PR #452&lt;/a&gt;: Had an extra meeting with the mentors in which we fine-tuned the molecular module and optimised the code to make it more pythonic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I was able to generate vertices and triangles for Solvent Excluded Surfaces (SES) by using a bioconda package called &lt;a class="reference external" href="https://anaconda.org/bioconda/msms"&gt;msms&lt;/a&gt;. It’s based on &lt;a class="reference external" href="https://onlinelibrary.wiley.com/doi/10.1002/%28SICI%291097-0282%28199603%2938%3A3%3C305%3A%3AAID-BIP4%3E3.0.CO%3B2-Y"&gt;this paper&lt;/a&gt; by Michel F. Sanner, Arthur J. Olson &amp;amp; Jean-Claude Spehner. The vertices and triangles were then sent to surface actor to generate a surface.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id1"&gt;
&lt;img alt="https://user-images.githubusercontent.com/65067354/128756004-553d1880-b6e1-4a43-99fa-5bd6a2ee70d4.png" src="https://user-images.githubusercontent.com/65067354/128756004-553d1880-b6e1-4a43-99fa-5bd6a2ee70d4.png" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;SES surface generated via msms and surface actor&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added my GSoC blogs to the FURY blogs directory. (&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/475"&gt;PR #475&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Other goals will be decided in the meeting with mentors.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Research about recent papers having good (fast) algorithms to create the molecular surfaces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create tutorials to explain how to use molecular module.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-08-02-week-9-sajag.html" rel="alternate"/>
    <summary>Welcome to the ninth weekly check-in. I’ll be sharing my progress for the eighth week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-08-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-26-week-8-sajag.html</id>
    <title>Seventh week of coding!</title>
    <updated>2021-07-26T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="seventh-week-of-coding"&gt;

&lt;p&gt;Welcome to the eighth weekly check-in. I’ll be sharing my progress for the seventh week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;PR #452&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Added ribbon actor to the molecular module.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added tests for all functions in the molecular module.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/462"&gt;PR #462&lt;/a&gt;: Addressed the reviews of team members and
mentors, added new features.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="https://user-images.githubusercontent.com/65067354/126382288-b755c01d-8010-43ab-87db-2f1a4fb5b015.png" style="width: 300px; height: 300px;" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/362"&gt;PR #362&lt;/a&gt;: Addressed the feedbacks of team members and
mentors.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Work more on molecular module, meeting with mentors and core team on
Thursday to optimize the module and merge &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;PR #452&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start working upon molecular surface model.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-26-week-8-sajag.html" rel="alternate"/>
    <summary>Welcome to the eighth weekly check-in. I’ll be sharing my progress for the seventh week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-07-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-19-week-7-sajag.html</id>
    <title>Sixth week of coding!</title>
    <updated>2021-07-19T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="sixth-week-of-coding"&gt;

&lt;p&gt;Welcome to the seventh weekly check-in. I’ll be sharing my progress for the sixth week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;Molecular module&lt;/a&gt;: made it more pythonic, implemented
ribbon actor, added support to pass numpy arrays (earlier, atomic
data could only be added by using the add_atom).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Created &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/462"&gt;PR #462&lt;/a&gt; to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Update the helical motion animation to use a single line actor,
added textblocks to display velocity of the particle.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="https://user-images.githubusercontent.com/65067354/126033284-882ed6fd-fcc3-4a1c-8dfd-3220908859b1.png" style="width: 400px; height: 300px;" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For brownian motion animation, I removed rotation(azimuth) and box
actor, added textblock to display the number of particles and to
show the simulation steps.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2" src="https://user-images.githubusercontent.com/65067354/126033291-da68cb0d-b856-48ad-9aa4-c46621052267.png" style="width: 400px; height: 400px;" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated surface animation (used gridUI, added multiple animations).&lt;/p&gt;
&lt;p&gt;&lt;img alt="image3" src="https://user-images.githubusercontent.com/65067354/126061012-b183a47d-ed5e-4026-938b-4124da291524.png" style="width: 400px; height: 400px;" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Created a &lt;a class="reference external" href="https://discourse.vtk.org/t/vtkmoleculemapper-gaps-in-bonds-on-zooming-in/6183"&gt;topic&lt;/a&gt; on vtk discourse forum to query about gaps in
bonds (tried resolving it by manipulating vtkProperties:
BackfaceCulling, FrontfaceCulling but was unsuccessful).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read about molecular surface (theory behind it).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Update molecular module by adding tests, ribbon actor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try to implement molecular surface representation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interactivity of the molecules.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;I didn’t get stuck anywhere this week.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-19-week-7-sajag.html" rel="alternate"/>
    <summary>Welcome to the seventh weekly check-in. I’ll be sharing my progress for the sixth week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-07-19T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-12-week-6-sajag.html</id>
    <title>Fifth week of coding!</title>
    <updated>2021-07-12T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="fifth-week-of-coding"&gt;

&lt;p&gt;Welcome to the sixth weekly check-in. I’ll be sharing my progress for the fifth week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Generalised the vtkProteinRibbonFilter implementation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated the molecular module based on suggestions of team members
and mentors (&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;PR #452&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated wave function animation (&lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/362"&gt;PR #362&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id1"&gt;
&lt;img alt="https://user-images.githubusercontent.com/65067354/125155195-d4105800-e17b-11eb-9e6d-2b66ba7a8f6e.gif" src="https://user-images.githubusercontent.com/65067354/125155195-d4105800-e17b-11eb-9e6d-2b66ba7a8f6e.gif" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;an animation&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Update molecular module based on team members’ suggestions and add
tests for the same.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add protein ribbon implementation to the molecular module.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Begin working on molecular surface model.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;No! &lt;strong&gt;I was finally able to generalise the vtkProteinRibbonFilter implementation!!&lt;/strong&gt; I’m
grateful to the mentors for keeping a meeting and for helping me debug
the code. I figured out most of the stuff courtesy the meeting.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-12-week-6-sajag.html" rel="alternate"/>
    <summary>Welcome to the sixth weekly check-in. I’ll be sharing my progress for the fifth week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-07-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-07-05-week-5-sajag.html</id>
    <title>Fourth week of coding!</title>
    <updated>2021-07-05T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="fourth-week-of-coding"&gt;

&lt;p&gt;Welcome to the fifth weekly check-in. I’ll be sharing my progress for the fourth week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;Created a &lt;a class="reference external" href="https://github.com/fury-gl/fury/pull/452"&gt;PR&lt;/a&gt; for the molecular module. Enables the ability to create
three types of molecular representations:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Space-filling model aka calotte model and CPK model.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stick model.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ball and Stick model.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Mentors suggested changes to be made to the molecular module which I
shall make. Other goals to be decided post mid-week meeting.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Sending protein data to ProteinRibbonFilter via a vtkPolyData has been
unsuccessful so far.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-07-05-week-5-sajag.html" rel="alternate"/>
    <summary>Welcome to the fifth weekly check-in. I’ll be sharing my progress for the fourth week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-07-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-06-28-week-4-sajag.html</id>
    <title>Third week of coding!</title>
    <updated>2021-06-28T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="third-week-of-coding"&gt;

&lt;p&gt;Welcome to the fourth weekly check-in. I’ll be sharing my progress for the third week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;I made a document with code snippets and visuals to show how one can use
some vtk classes in python for molecular visualization. Classes of
interest:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;vtkMolecule (store atomic information about the molecule).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vtkSimpleBondPerceiver (calculate bonding info for a vtkMolecule).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vtkMoleculeMapper (mapper to draw vtkMolecule object).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vtkPeriodicTable (stores chemical data sourced from the Blue Obelisk
Data).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Link to the document: &lt;a class="reference external" href="https://docs.google.com/document/d/1LC2MgT9mUQK0Yo9hsI4lWqaTXHWAkSNxyBKWGAqHqe8/edit"&gt;Molecular_viz_vtk&lt;/a&gt;. In addition to the
document, I read some research papers recommended by my mentors to
understand some other (and potentially better) methods of ribbon
visualization. Tried to implement vtkProteinRibbonFilter usage without
using vtkPDBReader but was unsuccessful in this endeavor.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Three goals for next week:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Implement vtkProteinRibbonFilter usage without using vtkPDBReader.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make a class for vtkMolecule which can store molecular data and pass
it on to different function for rendering purposes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read papers on surface model.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Implementing vtkProteinRibbonFilter usage via vtkPolyData without using
vtkPDBReader has confounded me for some time now.&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-06-28-week-4-sajag.html" rel="alternate"/>
    <summary>Welcome to the fourth weekly check-in. I’ll be sharing my progress for the third week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-06-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://fury.gl/posts/2021/2021-06-21-week-3-sajag.html</id>
    <title>Second week of coding!</title>
    <updated>2021-06-21T00:00:00+00:00</updated>
    <author>
      <name>Sajag Swami</name>
    </author>
    <content type="html">&lt;section id="second-week-of-coding"&gt;

&lt;p&gt;Welcome to the third weekly check-in. I’ll be sharing my progress for the second week of coding.&lt;/p&gt;
&lt;section id="what-did-you-do-this-week"&gt;
&lt;h2&gt;What did you do this week?&lt;/h2&gt;
&lt;p&gt;I created an example to demonstrate how one can render multiple bonds (double and triple). This required me to write an algorithm to detect bonding.
I used &lt;a class="reference external" href="https://www.kaggle.com/aekoch95/bonds-from-structure-data"&gt;this blog&lt;/a&gt; as a reference and made a few tweaks of my own to detect the presence of double/triple bonds from interatomic distances.
The math involved in generating the coordinates of bonds was quite intriguing. Preview:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id1"&gt;
&lt;img alt="https://user-images.githubusercontent.com/65067354/122672109-7d040c80-d1e7-11eb-815d-1d07fe47bbc4.png" src="https://user-images.githubusercontent.com/65067354/122672109-7d040c80-d1e7-11eb-815d-1d07fe47bbc4.png" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;molecules rendered: Ethane, Ethene, Ethyne (from left to right)&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;In addition to this, I tried understanding the codebase of vtkMolecule, vtkSimpleBondPerceiver, vtkMoleculeMapper, vtkPeriodicTable and was able to render bond-stick models and stick models using it.
This will be of great help although it’s rather slow in rendering large molecules (using shaders to improve its speed will be crucial if it’s to be utilised).&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;figure class="align-default" id="id2"&gt;
&lt;img alt="https://github.com/SunTzunami/gsoc2021_blog_data/blob/master/visuals/week2_wire_rep.png?raw=true" src="https://github.com/SunTzunami/gsoc2021_blog_data/blob/master/visuals/week2_wire_rep.png?raw=true" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;Stick representation using vtkMoleculeMapper&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class="align-default" id="id3"&gt;
&lt;img alt="https://raw.githubusercontent.com/SunTzunami/gsoc2021_blog_data/master/visuals/week2_bs_rep.png" src="https://raw.githubusercontent.com/SunTzunami/gsoc2021_blog_data/master/visuals/week2_bs_rep.png" style="width: 300px; height: 300px;" /&gt;
&lt;figcaption&gt;
&lt;p&gt;&lt;span class="caption-text"&gt;Ball and Stick representation using vtkMoleculeMapper&lt;/span&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id="what-is-coming-up-next-week"&gt;
&lt;h2&gt;What is coming up next week?&lt;/h2&gt;
&lt;p&gt;Try to see if the above models can be implemented using shaders. Try implementing the ribbon model using the vtkProteinRibbonFilter. The rest will be decided in the meeting with the mentors.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="did-you-get-stuck-anywhere"&gt;
&lt;h2&gt;Did you get stuck anywhere?&lt;/h2&gt;
&lt;p&gt;Predicting bonds had been a problem since the past few weeks, it was resolved to a large extent by vtkSimpleBondPerceiver (the only limitation of vtkSimpleBondPerceiver being its inability to predict multiple bonds).&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Au&lt;/span&gt; &lt;span class="pre"&gt;Revoir!&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://fury.gl/posts/2021/2021-06-21-week-3-sajag.html" rel="alternate"/>
    <summary>Welcome to the third weekly check-in. I’ll be sharing my progress for the second week of coding.</summary>
    <category term="google" label="google"/>
    <published>2021-06-21T00:00:00+00:00</published>
  </entry>
</feed>
